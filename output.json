[
    {
        "path": ".gitignore",
        "content": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\npnpm-debug.log*\nlerna-debug.log*\n\nnode_modules\ndist\ndist-ssr\ndist-electron\nrelease\n*.local\n.env\n\n# Editor directories and files\n.vscode/.debug.env\n.idea\n.DS_Store\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n\n#lockfile\npackage-lock.json\npnpm-lock.yaml\nyarn.lock\n/test-results/\n/playwright-report/\n/playwright/.cache/\n"
    },
    {
        "path": ".npmrc",
        "content": "shamefully-hoist=true"
    },
    {
        "path": ".vscode/.debug.script.mjs",
        "content": "import fs from 'node:fs'\nimport path from 'node:path'\nimport { fileURLToPath } from 'node:url'\nimport { createRequire } from 'node:module'\nimport { spawn } from 'node:child_process'\n\nconst pkg = createRequire(import.meta.url)('../package.json')\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\n\n// write .debug.env\nconst envContent = Object.entries(pkg.debug.env).map(([key, val]) => `${key}=${val}`)\nfs.writeFileSync(path.join(__dirname, '.debug.env'), envContent.join('\\n'))\n\n// bootstrap\nspawn(\n  // TODO: terminate `npm run dev` when Debug exits.\n  process.platform === 'win32' ? 'npm.cmd' : 'npm',\n  ['run', 'dev'],\n  {\n    stdio: 'inherit',\n    env: Object.assign(process.env, { VSCODE_DEBUG: 'true' }),\n  },\n)"
    },
    {
        "path": ".vscode/extensions.json",
        "content": "{\n  // See http://go.microsoft.com/fwlink/?LinkId=827846\n  // for the documentation about the extensions.json format\n  \"recommendations\": [\n    \"mrmlnc.vscode-json5\"\n  ]\n}\n"
    },
    {
        "path": ".vscode/launch.json",
        "content": "{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"compounds\": [\n    {\n      \"name\": \"Debug App\",\n      \"preLaunchTask\": \"Before Debug\",\n      \"configurations\": [\n        \"Debug Main Process\",\n        \"Debug Renderer Process\"\n      ],\n      \"presentation\": {\n        \"hidden\": false,\n        \"group\": \"\",\n        \"order\": 1\n      },\n      \"stopAll\": true\n    }\n  ],\n  \"configurations\": [\n    {\n      \"name\": \"Debug Main Process\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"runtimeExecutable\": \"${workspaceRoot}/node_modules/.bin/electron\",\n      \"windows\": {\n        \"runtimeExecutable\": \"${workspaceRoot}/node_modules/.bin/electron.cmd\"\n      },\n      \"runtimeArgs\": [\n        \"--no-sandbox\",\n        \"--remote-debugging-port=9229\",\n        \".\"\n      ],\n      \"envFile\": \"${workspaceFolder}/.vscode/.debug.env\",\n      \"console\": \"integratedTerminal\"\n    },\n    {\n      \"name\": \"Debug Renderer Process\",\n      \"port\": 9229,\n      \"request\": \"attach\",\n      \"type\": \"chrome\",\n      \"timeout\": 60000,\n      \"skipFiles\": [\n        \"<node_internals>/**\",\n        \"${workspaceRoot}/node_modules/**\",\n        \"${workspaceRoot}/dist-electron/**\",\n        // Skip files in host(VITE_DEV_SERVER_URL)\n        \"http://127.0.0.1:7777/**\"\n      ]\n    },\n  ]\n}"
    },
    {
        "path": ".vscode/settings.json",
        "content": "{\n  \"typescript.tsdk\": \"node_modules/typescript/lib\",\n  \"typescript.tsc.autoDetect\": \"off\",\n  \"json.schemas\": [\n    {\n      \"fileMatch\": [\n        \"/*electron-builder.json5\",\n        \"/*electron-builder.json\"\n      ],\n      \"url\": \"https://json.schemastore.org/electron-builder\"\n    }\n  ]\n}\n"
    },
    {
        "path": ".vscode/tasks.json",
        "content": "{\n  // See https://go.microsoft.com/fwlink/?LinkId=733558 \n  // for the documentation about the tasks.json format\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"label\": \"Before Debug\",\n      \"type\": \"shell\",\n      \"command\": \"node .vscode/.debug.script.mjs\",\n      \"isBackground\": true,\n      \"problemMatcher\": {\n        \"owner\": \"typescript\",\n        \"fileLocation\": \"relative\",\n        \"pattern\": {\n          // TODO: correct \"regexp\"\n          \"regexp\": \"^([a-zA-Z]\\\\:\\/?([\\\\w\\\\-]\\/?)+\\\\.\\\\w+):(\\\\d+):(\\\\d+): (ERROR|WARNING)\\\\: (.*)$\",\n          \"file\": 1,\n          \"line\": 3,\n          \"column\": 4,\n          \"code\": 5,\n          \"message\": 6\n        },\n        \"background\": {\n          \"activeOnStart\": true,\n          \"beginsPattern\": \"^.*VITE v.*  ready in \\\\d* ms.*$\",\n          \"endsPattern\": \"^.*\\\\[startup\\\\] Electron App.*$\"\n        }\n      }\n    }\n  ]\n}"
    },
    {
        "path": "LICENSE",
        "content": "MIT License\n\nCopyright (c) 2023 \u8349\u978b\u6ca1\u53f7\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
    },
    {
        "path": "Output.txt",
        "content": "Learning how to write in a file."
    },
    {
        "path": "README.md",
        "content": "![Electron Notion](https://user-images.githubusercontent.com/64391274/235363274-375ce61c-721f-4543-a150-1b99525d54ac.png)\n\n# windowsGPT\n\nIn the fast-paced world of writing, where creativity flows and deadlines loom, we've all experienced those \"Aha!\" moments mixed with bouts of uncertainty. Picture this: you're knee-deep in an essay, racing against the clock, and suddenly a question pops into your head. You turn to your trusty companions like Google Docs, Word, or Notepad, only to find yourself caught in a web of tabs, sign-ins, and endless searching. Ugh, talk about a buzzkill!\n\nBut fear not, dear writer, for we have concocted a sensational solution to rescue you from this harrowing ordeal. Inspired by the sheer brilliance of power toys and their ability to simplify tasks in the Windows universe, we decided to infuse a healthy dose of awesomeness into our creation.\nImagine a world where you can effortlessly chat with a clever GPT companion, right there in your writing zone. No more detours, no more sluggish searches. It's like having a personal writing assistant who's always ready to help, without skipping a beat.\n\nSo, we set out on a quest to bring the fun back into writing. Our mission: to blend the magic of power toys with the mind-boggling capabilities of chat GPT. The result? A seamless integration that will revolutionize your writing experience and make those doubtful moments a thing\u00a0of\u00a0the\u00a0past.\n\n## Team members\n\n1. Sreehari Suresh [https://github.com/S-HARI-S]\n2. Maheen K [https://github.com/MachoMaheen]\n\n## Link to product walkthrough\n\nhttps://drive.google.com/file/d/1co2OU57tlmI7pD0ONQ3gVDLy2J-Ib2cL/view?usp=share_link\n\n## How it Works ?\n\n- Our project comprises a central application built on Electron framework, housing the main process. Within this framework, we employ the globalShortcut() function of Electron to monitor a designated keyboard shortcut. Once the shortcut is successfully registered, our application generates a child frameless transparent window, designed with two text areas: the promptTextArea and the responseTextArea. Initially, the responseTextArea remains hidden from view.\n- To engage with our system, users input their desired prompt into the promptTextArea. This prompt is subsequently transmitted as a request to the OpenAI API. Upon receiving a response from the API, our application unveils the responseTextArea, displaying the generated response\u00a0within\u00a0it\n\n![WindowsGPT demo](Demo.gif)\n\n## Libraries used\n\n- electron : ^23.2.0\n- react : ^18.2.0\n\n## How to configure\n\n- node.js must be installed\n- npm i\n\n## How to Run\n\nCurrently we are not producing a executable program for distributions. you can test our electron application through development environment.\nfollow these steps:\n\n```npm\nnpm install\n```\n\n```npm\nnpm run dev \n```\n\nWhile running your dev server , trigger Ctrl+Alt+T for enabling windowsGPT\n"
    },
    {
        "path": "e2e/example.spec.ts",
        "content": "import { test, expect, _electron as electron } from \"@playwright/test\";\n\ntest(\"homepage has title and links to intro page\", async () => {\n  const app = await electron.launch({ args: [\".\", \"--no-sandbox\"] });\n  const page = await app.firstWindow();\n  expect(await page.title()).toBe(\"Electron + Vite + React\");\n  await page.screenshot({ path: \"e2e/screenshots/example.png\" });\n});\n"
    },
    {
        "path": "electron-builder.json5",
        "content": "/**\n * @see https://www.electron.build/configuration/configuration\n */\n{\n  \"appId\": \"YourAppID\",\n  \"asar\": true,\n  \"directories\": {\n    \"output\": \"release/${version}\"\n  },\n  \"files\": [\n    \"dist-electron\",\n    \"dist\"\n  ],\n  \"mac\": {\n    \"artifactName\": \"${productName}_${version}.${ext}\",\n    \"target\": [\n      \"dmg\",\n      \"zip\"\n    ]\n  },\n  \"win\": {\n    \"target\": [\n      {\n        \"target\": \"nsis\",\n        \"arch\": [\n          \"x64\"\n        ]\n      }\n    ],\n    \"artifactName\": \"${productName}_${version}.${ext}\"\n  },\n  \"nsis\": {\n    \"oneClick\": false,\n    \"perMachine\": false,\n    \"allowToChangeInstallationDirectory\": true,\n    \"deleteAppDataOnUninstall\": false\n  },\n  \"publish\": {\n    \"provider\": \"generic\",\n    \"channel\": \"latest\",\n    \"url\": \"https://github.com/electron-vite/electron-vite-react/releases/download/v0.9.9/\"\n  }\n}\n"
    },
    {
        "path": "electron/electron-env.d.ts",
        "content": "/// <reference types=\"vite-electron-plugin/electron-env\" />\n\ndeclare namespace NodeJS {\n  interface ProcessEnv {\n    VSCODE_DEBUG?: 'true'\n    DIST_ELECTRON: string\n    DIST: string\n    /** /dist/ or /public/ */\n    PUBLIC: string\n  }\n}"
    },
    {
        "path": "electron/main/index.ts",
        "content": "import { app, BrowserWindow, globalShortcut, shell, ipcMain , ipcRenderer } from \"electron\";\nimport { release } from \"node:os\";\nimport { join } from \"node:path\";\nimport { update } from \"./update\";\n// import { getSharedData, setSharedData } from '../../public/script.d.js';\n\n\n\n\n// The built directory structure\n//\n// \u251c\u2500\u252c dist-electron\n// \u2502 \u251c\u2500\u252c main\n// \u2502 \u2502 \u2514\u2500\u2500 index.js    > Electron-Main\n// \u2502 \u2514\u2500\u252c preload\n// \u2502   \u2514\u2500\u2500 index.js    > Preload-Scripts\n// \u251c\u2500\u252c dist\n// \u2502 \u2514\u2500\u2500 index.html    > Electron-Renderer\n//\nprocess.env.DIST_ELECTRON = join(__dirname, \"../\");\nprocess.env.DIST = join(process.env.DIST_ELECTRON, \"../dist\");\nprocess.env.PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? join(process.env.DIST_ELECTRON, \"../public\")\n  : process.env.DIST;\n\n\n// Disable GPU Acceleration for Windows 7\nif (release().startsWith(\"6.1\")) app.disableHardwareAcceleration();\n\n// Set application name for Windows 10+ notifications\nif (process.platform === \"win32\") app.setAppUserModelId(app.getName());\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit();\n  process.exit(0);\n}\n\n// Remove electron security warnings\n// This warning only shows in development mode\n// Read more on https://www.electronjs.org/docs/latest/tutorial/security\n// process.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\n\nlet win: BrowserWindow | null = null;\n// Here, you can also use other preload\nconst preload = join(__dirname, \"../preload/index.js\");\nconst url = process.env.VITE_DEV_SERVER_URL;\nconst indexHtml = join(process.env.DIST, \"index.html\");\n\nasync function createWindow() {\n  win = new BrowserWindow({\n  autoHideMenuBar: true,\n\n\n    title: \"Main window\",\n    icon: join(process.env.PUBLIC, \"favicon.ico\"),\n    webPreferences: {\n      preload,\n      // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\n      // Consider using contextBridge.exposeInMainWorld\n      // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  });\n\n  win.webContents.on('dom-ready', () => {\n    win?.webContents.insertCSS(`\n      ::-webkit-scrollbar {\n        width: 5px; /* Adjust the width as desired */\n      }\n  \n      ::-webkit-scrollbar-track {\n        background-color: #f1f1f1; /* Color of the track */\n      }\n  \n      ::-webkit-scrollbar-thumb {\n        background-color: #888; /* Color of the scrollbar */\n      }\n    `);\n  });\n  \n  win?.on('close', (event: Electron.Event) => {\n    // Prevent the default behavior of closing the window\n    event.preventDefault();\n  \n    // Hide the window instead of closing it\n    win?.hide();\n  });\n\n\n  if (url) {\n    // electron-vite-vue#298\n    win.loadURL(url);\n    // Open devTool if the app is not packaged\n    win.webContents.openDevTools();\n  } else {\n    win.loadFile(indexHtml);\n    \n    \n  }\n\n  // Test actively push message to the Electron-Renderer\n  win.webContents.on(\"did-finish-load\", () => {\n    win?.webContents.send(\"main-process-message\", new Date().toLocaleString());\n  });\n\n  // Make all links open with the browser, not with the application\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    if (url.startsWith(\"https:\")) shell.openExternal(url);\n    return { action: \"deny\" };\n  });\n\n  // Apply electron-updater\n  update(win);\n}\n\napp.whenReady().then(createWindow);\n\n\n\napp.on(\"window-all-closed\", () => {\n  win = null;\n  if (process.platform !== \"darwin\") app.quit();\n});\n\napp.on(\"second-instance\", () => {\n  if (win) {\n    // Focus on the main window if the user tried to open another\n    if (win.isMinimized()) win.restore();\n    win.focus();\n  }\n});\n\napp.on(\"activate\", () => {\n  const allWindows = BrowserWindow.getAllWindows();\n  if (allWindows.length) {\n    allWindows[0].focus();\n  } else {\n    createWindow();\n  }\n});\n\n// New window example arg: new windows url\nipcMain.handle(\"open-win\", (_, arg) => {\n  const childWindow = new BrowserWindow({\n\n    webPreferences: {\n      preload,\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  });\n\n\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    childWindow.loadURL(`${url}#${arg}`);\n  } else {\n    childWindow.loadFile(indexHtml, { hash: arg });\n  }\n\n\n  \n\n\n});\n\n\n\n\n\nconst path = require(\"path\");\nlet window: BrowserWindow | null = null;\n\n\n\n\n\n\n\n\napp.on(\"ready\", () => {\n\n\n\n  // Register a global keyboard shortcut\n  globalShortcut.register(\"Ctrl+Alt+T\", () => {\n    if (window !== null) {\n      // If a window is open, close it and set the `window` variable to `null`\n      window.close();\n      window = null;\n    } else {\n      win?.hide();\n      // If no window is open, open the specified path and store a reference to the window\n      window = new BrowserWindow({\n        width: 793,\n        height: 165,\n        transparent: true,\n        skipTaskbar: true,\n        frame: false, \n        resizable: false,\n        webPreferences: {\n          nodeIntegration: true,\n            contextIsolation: false,\n        },\n        x:390,\n        y:150,\n      });\n\n      const filePath = path.resolve(\"public\", \"index.html\");\n\n      window.loadURL(filePath);\n\n\n      \n      ipcMain.on('bleeeeeh', function(event, data) {\n        // Perform actions with the received data\n        window?.setSize(793, data+200)\n\n      });\n\n\n      window.on('blur', () => {\n        // Quit the app when the window loses focus\n        window?.close();\n      });\n\n      window.on(\"closed\", () => {\n        window = null;\n      });\n    }\n  });\n\n\n\n\n});\n\n\n\n// Unregister the shortcut when the app is about to quit\napp.on(\"will-quit\", () => {\n  globalShortcut.unregister(\"Ctrl+Alt+T\");\n});\n"
    },
    {
        "path": "electron/main/update.ts",
        "content": "import { app, ipcMain } from \"electron\";\nimport {\n  type ProgressInfo,\n  type UpdateDownloadedEvent,\n  autoUpdater,\n} from \"electron-updater\";\n\nexport function update(win: Electron.BrowserWindow) {\n  // When set to false, the update download will be triggered through the API\n  autoUpdater.autoDownload = false;\n  autoUpdater.disableWebInstaller = false;\n  autoUpdater.allowDowngrade = false;\n\n  // start check\n  autoUpdater.on(\"checking-for-update\", function () {});\n  // update available\n  autoUpdater.on(\"update-available\", (arg) => {\n    win.webContents.send(\"update-can-available\", {\n      update: true,\n      version: app.getVersion(),\n      newVersion: arg?.version,\n    });\n  });\n  // update not available\n  autoUpdater.on(\"update-not-available\", (arg) => {\n    win.webContents.send(\"update-can-available\", {\n      update: false,\n      version: app.getVersion(),\n      newVersion: arg?.version,\n    });\n  });\n\n  // Checking for updates\n  ipcMain.handle(\"check-update\", async () => {\n    if (!app.isPackaged) {\n      const error = new Error(\n        \"The update feature is only available after the package.\"\n      );\n      return { message: error.message, error };\n    }\n\n    try {\n      return await autoUpdater.checkForUpdatesAndNotify();\n    } catch (error) {\n      return { message: \"Network error\", error };\n    }\n  });\n\n  // Start downloading and feedback on progress\n  ipcMain.handle(\"start-download\", (event) => {\n    startDownload(\n      (error, progressInfo) => {\n        if (error) {\n          // feedback download error message\n          event.sender.send(\"update-error\", { message: error.message, error });\n        } else {\n          // feedback update progress message\n          event.sender.send(\"download-progress\", progressInfo);\n        }\n      },\n      () => {\n        // feedback update downloaded message\n        event.sender.send(\"update-downloaded\");\n      }\n    );\n  });\n\n  // Install now\n  ipcMain.handle(\"quit-and-install\", () => {\n    autoUpdater.quitAndInstall(false, true);\n  });\n}\n\nfunction startDownload(\n  callback: (error: Error | null, info: ProgressInfo | null) => void,\n  complete: (event: UpdateDownloadedEvent) => void\n) {\n  autoUpdater.on(\"download-progress\", (info) => callback(null, info));\n  autoUpdater.on(\"error\", (error) => callback(error, null));\n  autoUpdater.on(\"update-downloaded\", complete);\n  autoUpdater.downloadUpdate();\n}\n"
    },
    {
        "path": "electron/preload/index.ts",
        "content": "function domReady(condition: DocumentReadyState[] = ['complete', 'interactive']) {\n  return new Promise(resolve => {\n    if (condition.includes(document.readyState)) {\n      resolve(true)\n    } else {\n      document.addEventListener('readystatechange', () => {\n        if (condition.includes(document.readyState)) {\n          resolve(true)\n        }\n      })\n    }\n  })\n}\n\nconst safeDOM = {\n  append(parent: HTMLElement, child: HTMLElement) {\n    if (!Array.from(parent.children).find(e => e === child)) {\n      return parent.appendChild(child)\n    }\n  },\n  remove(parent: HTMLElement, child: HTMLElement) {\n    if (Array.from(parent.children).find(e => e === child)) {\n      return parent.removeChild(child)\n    }\n  },\n}\n\n/**\n * https://tobiasahlin.com/spinkit\n * https://connoratherton.com/loaders\n * https://projects.lukehaas.me/css-loaders\n * https://matejkustec.github.io/SpinThatShit\n */\nfunction useLoading() {\n  const className = `loaders-css__square-spin`\n  const styleContent = `\n@keyframes square-spin {\n  25% { transform: perspective(100px) rotateX(180deg) rotateY(0); }\n  50% { transform: perspective(100px) rotateX(180deg) rotateY(180deg); }\n  75% { transform: perspective(100px) rotateX(0) rotateY(180deg); }\n  100% { transform: perspective(100px) rotateX(0) rotateY(0); }\n}\n.${className} > div {\n  animation-fill-mode: both;\n  width: 50px;\n  height: 50px;\n  background: #fff;\n  animation: square-spin 3s 0s cubic-bezier(0.09, 0.57, 0.49, 0.9) infinite;\n}\n.app-loading-wrap {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #282c34;\n  z-index: 9;\n}\n    `\n  const oStyle = document.createElement('style')\n  const oDiv = document.createElement('div')\n\n  oStyle.id = 'app-loading-style'\n  oStyle.innerHTML = styleContent\n  oDiv.className = 'app-loading-wrap'\n  oDiv.innerHTML = `<div class=\"${className}\"><div></div></div>`\n\n  return {\n    appendLoading() {\n      safeDOM.append(document.head, oStyle)\n      safeDOM.append(document.body, oDiv)\n    },\n    removeLoading() {\n      safeDOM.remove(document.head, oStyle)\n      safeDOM.remove(document.body, oDiv)\n    },\n  }\n}\n\n// ----------------------------------------------------------------------\n\nconst { appendLoading, removeLoading } = useLoading()\ndomReady().then(appendLoading)\n\nwindow.onmessage = (ev) => {\n  ev.data.payload === 'removeLoading' && removeLoading()\n}\n\nsetTimeout(removeLoading, 4999)"
    },
    {
        "path": "electron/renderer/script.js",
        "content": "const focusTextBox = () => {\n  const textBox = document.getElementById(\"promptTextarea\");\n  textBox.focus();\n};\n\n\nwindow.onload = () => {\n  focusTextBox();\n\n\n};\n\n\n\nlet api_key;\n\nconst fs = require('fs')\nfs.readFile('tp.txt', (err, inputD) => {\n   if (err) throw err;\n   api_key= inputD.toString().trim()\n\n   console.log(api_key)\n\n})\n\n\n\nconsole.log(\"in script\");\n\n\nconst ollama= require(\"ollama\")\n// const ollama = require(\"ollama/browser\")\n// const ollama = require(\"ollama-js-client\")\n\nlet prompt;\n\nlet promptTextarea = document.getElementById(\"promptTextarea\");\nlet responseTextarea = document.getElementById(\"responseTextarea\");\nlet loadingAnimation = document.getElementById(\"animationRot\");\n\n// console.log(\"value is \" +promptTextarea.value)\nconst electron = require(\"electron\");\nconst ipc = electron.ipcRenderer\n\nfunction expandResponseTextBox(){\n\n    responseTextarea.style.height = 'auto'; // Reset the height to auto\n    responseTextarea.style.height = `${responseTextarea.scrollHeight - 38}px`; // Set the height to match the content\n    \n    ipc.send('bleeeeeh' , responseTextarea.scrollHeight - 38);\n\n};\n\n\n\n// const ipc = electron.ipcRenderer\n\n\n\nfunction displayText(text, delay) {\n  let currentText = '';\n  let index = 0;\n\n  function typeText() {\n    currentText += text[index];\n    responseTextarea.textContent = currentText;\n    expandResponseTextBox()\n    index++;\n\n    if (index < text.length) {\n      setTimeout(typeText, delay);\n    }\n  }\n\n  typeText();\n}\n\nasync function processResponse() {\n  prompt = promptTextarea.value;\n  console.log(prompt);\n\n  if (prompt === \"\") {\n    return;\n  }\n\n  let open_ai_response, responseContent;\n// below is the function that generates response from local ollama models\n\nasyncCall();\nasync function asyncCall() {\n  console.log(\"Inside the function\" + prompt);\n    const output = await ollama.generate({ model: \"solar\", prompt: prompt });\n  \n    console.log(output);\n  \n    // Include your design changes here (adding styles and updating elements)\n    searchIcon.style.display = \"none\";\n    animationRot.style.display = \"block\";\n    responseTextarea.style.display = \"block\";\n  \n    // Display the output content\n    displayText(output.response, 9);\n  }\n  \n  // Call the asynchronous function\n  \n//the below function is for generating response from the gpt through post request\n  \n  \n//   openai_test();\n\n//   function openai_test() {\n//     var url = \"https://api.openai.com/v1/chat/completions\";\n\n//     var xhr = new XMLHttpRequest();\n//     xhr.open(\"POST\", url);\n\n//     xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n//     xhr.setRequestHeader(\n//       \"Authorization\",\n//       `Bearer ${api_key}`\n//     );\n\n//     xhr.onreadystatechange = function () {\n//       if (xhr.readyState === 4) {\n//         if (xhr.status === 200) {\n//           open_ai_response = xhr.responseText;\n//           const jsonObject = JSON.parse(open_ai_response);\n//           responseContent = jsonObject.choices[0].message.content;\n//           console.log(responseContent);\n//           prompt=\"\";\n//           animationRot.style.display = \"none\";\n//           searchIcon.style.display = \"block\";\n\n//           responseTextarea.style.display = \"block\";\n\n//           displayText(responseContent, 10);\n//           // responseTextarea.value = responseContent;\n//         } else {\n//           console.error(\"Error:\", xhr.status);\n//         }\n//       }\n//     };\n\n//     var data = `{\n//     \"model\": \"gpt-3.5-turbo\",\n//     \"messages\": [{\"role\": \"user\", \"content\": \"${prompt}\"}]\n//   }`;\n\n//      searchIcon.style.display = \"none\";\n\n//     animationRot.style.display = \"block\";\n//     xhr.send(data);\n//   }\n}\n\n\n\nlet keyD = false,\n  keyU = false;\n\ndocument.addEventListener(\n  \"keyup\",\n  (event) => {\n    const keyName = event.key;\n\n    if (keyName === \"Enter\") {\n      keyU = true;\n      checkKeys();\n    }\n  },\n  false\n);\n\ndocument.addEventListener(\n  \"keydown\",\n  (event) => {\n    const keyName = event.key;\n\n    if (keyName === \"Enter\") {\n      keyD = true;\n      checkKeys();\n    }\n  },\n  false\n);\n\nfunction checkKeys() {\n  if (keyU === true && keyD === true) {\n    console.log(\"Enter key pressed and released.\");\n\n    processResponse();\n  }\n}\n\npromptTextarea.value = \"\";\n\n"
    },
    {
        "path": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"Content-Security-Policy\" content=\"script-src 'self' 'unsafe-inline';\" />\n    <title>windowsGPT</title>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.tsx\"></script>\n  </body>\n</html>\n"
    },
    {
        "path": "package.json",
        "content": "{\n  \"name\": \"doot\",\n  \"version\": \"2.2.0\",\n  \"main\": \"dist-electron/main/index.js\",\n  \"description\": \"\",\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"private\": true,\n  \"debug\": {\n    \"env\": {\n      \"VITE_DEV_SERVER_URL\": \"http://127.0.0.1:7777/\"\n    }\n  },\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"tsc && vitettt build && electron-builder\",\n    \"preview\": \"vite preview\",\n    \"pree2e\": \"vite build --mode=test\",\n    \"e2e\": \"playwright test\"\n  },\n  \"dependencies\": {\n    \"@tanstack/react-table\": \"^8.7.9\",\n    \"dotenv\": \"^16.0.3\",\n    \"electron-updater\": \"^5.3.0\",\n    \"image-to-base64\": \"^2.2.0\",\n    \"ollama\": \"^0.5.0\",\n    \"ollama-js-client\": \"^1.0.1\",\n    \"react-apexcharts\": \"^1.4.0\",\n    \"react-calendar\": \"^4.2.1\",\n    \"react-icons\": \"^4.8.0\",\n    \"react-router-dom\": \"^6.11.1\",\n    \"react-table\": \"^7.8.0\",\n    \"vite-tsconfig-paths\": \"^4.2.0\"\n  },\n  \"devDependencies\": {\n    \"@playwright/test\": \"^1.32.0\",\n    \"@types/node\": \"^20.1.2\",\n    \"@types/react\": \"^18.0.28\",\n    \"@types/react-dom\": \"^18.0.11\",\n    \"@types/react-table\": \"^7.7.12\",\n    \"@vitejs/plugin-react\": \"^3.1.0\",\n    \"autoprefixer\": \"^10.4.14\",\n    \"electron\": \"^23.2.0\",\n    \"electron-builder\": \"^23.6.0\",\n    \"postcss\": \"^8.4.23\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"sass\": \"^1.60.0\",\n    \"tailwindcss\": \"^3.3.2\",\n    \"typescript\": \"^5.0.2\",\n    \"vite\": \"^4.1.4\",\n    \"vite-plugin-electron\": \"^0.11.2\",\n    \"vite-plugin-electron-renderer\": \"^0.14.1\"\n  },\n  \"engines\": {\n    \"node\": \"^14.18.0 || >=16.0.0\"\n  }\n}\n"
    },
    {
        "path": "playwright.config.ts",
        "content": "import type { PlaywrightTestConfig } from \"@playwright/test\";\n\n/**\n * Read environment variables from file.\n * https://github.com/motdotla/dotenv\n */\n// require('dotenv').config();\n\n/**\n * See https://playwright.dev/docs/test-configuration.\n */\nconst config: PlaywrightTestConfig = {\n  testDir: \"./e2e\",\n  /* Maximum time one test can run for. */\n  timeout: 30 * 1000,\n  expect: {\n    /**\n     * Maximum time expect() should wait for the condition to be met.\n     * For example in `await expect(locator).toHaveText();`\n     */\n    timeout: 5000,\n  },\n  /* Run tests in files in parallel */\n  fullyParallel: true,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: \"html\",\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Maximum time each action such as `click()` can take. Defaults to 0 (no limit). */\n    actionTimeout: 0,\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    // baseURL: 'http://localhost:3000',\n\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: \"on-first-retry\",\n  },\n\n  /* Folder for test artifacts such as screenshots, videos, traces, etc. */\n  // outputDir: 'test-results/',\n\n  /* Run your local dev server before starting the tests */\n  // webServer: {\n  //   command: 'npm run start',\n  //   port: 3000,\n  // },\n};\n\nexport default config;\n"
    },
    {
        "path": "postcss.config.js",
        "content": "module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n"
    },
    {
        "path": "public/index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <script src=\"https://cdn.jsdelivr.net/npm/ollama-js-client/dist/browser/iife/ollama-js.global.js\"></script>\n\n    <script\n      type=\"module\"\n      src=\"https://cdn.jsdelivr.net/npm/ollama-js-client/dist/browser/index.js\"\n    ></script>\n    <script type=\"module\" src=\"../electron/renderer/script.js\"></script>\n\n    <script\n      src=\"https://kit.fontawesome.com/86f478feae.js\"\n      crossorigin=\"anonymous\"\n    ></script>\n\n    <title>Document</title>\n    <style></style>\n  </head>\n\n  <body>\n    <div class=\"textarea-container\">\n      <div\n        class=\"prompt-loader-container\"\n        style=\"display: flex; align-items: center\"\n      >\n        <div\n          class=\"prompt-textbox\"\n          style=\"\n            display: flex;\n            flex: 1;\n            align-items: center;\n            background-color: rgb(31, 31, 31);\n            height: 65px;\n            max-width: fit-content;\n            border-radius: 5px;\n            padding-left: 15px;\n            border: 2px solid rgb(255, 241, 179);\n            box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);\n          \"\n        >\n          <input\n            tabindex=\"0\"\n            type=\"text\"\n            id=\"promptTextarea\"\n            name=\"Name\"\n            placeholder=\"Enter your prompt...\"\n            style=\"\n              width: 680px;\n              height: 62px;\n              border: none;\n              background-color: rgb(31, 31, 31);\n              font-size: x-large;\n              color: aliceblue;\n              outline: none;\n            \"\n          />\n          <div\n            class=\"loader\"\n            style=\"\n              background-color: rgb(31, 31, 31);\n              border-radius: 0px 5px 5px 0px;\n              height: 52px;\n              width: 60px;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              height: 100%;\n            \"\n          >\n            <img\n              src=\"search-icon.png\"\n              id=\"searchIcon\"\n              width=\"30px\"\n              height=\"30px\"\n              alt=\"Search icon\"\n            />\n\n            <div\n              class=\"loader loader--style2\"\n              id=\"animationRot\"\n              style=\"display: none\"\n              title=\"1\"\n            >\n              <svg\n                version=\"1.1\"\n                id=\"loader-1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                x=\"0px\"\n                y=\"0px\"\n                width=\"40px\"\n                height=\"40px\"\n                viewBox=\"0 0 50 50\"\n                style=\"enable-background: new 0 0 50 50\"\n                xml:space=\"preserve\"\n              >\n                <path\n                  fill=\"#FF6700\"\n                  d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\"\n                >\n                  <animateTransform\n                    attributeType=\"xml\"\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    from=\"0 25 25\"\n                    to=\"360 25 25\"\n                    dur=\"0.6s\"\n                    repeatCount=\"indefinite\"\n                  />\n                </path>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"response-textbox\">\n      <textarea\n        rows=\"1\"\n        id=\"responseTextarea\"\n        style=\"\n          margin-top: 15px;\n          border: 1px solid rgb(255, 241, 179);\n          box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);\n          padding: 18px;\n          background-color: rgb(31, 31, 31);\n          border-radius: 5px 5px 5px 5px;\n\n          width: 725px;\n          outline: none;\n          font-size: large;\n          color: aliceblue;\n          font-family: sans-serif;\n          overflow: hidden;\n          display: none;\n          resize: none;\n        \"\n      ></textarea>\n    </div>\n  </body>\n</html>\n"
    },
    {
        "path": "src/App.tsx",
        "content": "import { useState } from 'react'\nimport { BrowserRouter,Routes, Route, Navigate } from \"react-router-dom\";\n\n// import RtlLayout from \"layouts/rtl\";\nimport AdminLayout from \"@/layouts/admin\";\nimport AuthLayout from \"@/layouts/auth\";\nimport Update from '@/components/update'\nimport logoVite from './assets/logo-vite.svg'\nimport logoElectron from './assets/logo-electron.svg'\nimport '@/assets/css/App.css'\nimport SidePanel from './components/Sidepanel'\nimport Setup from './components/Setup'\n\n\nconsole.log('[App.tsx]', `Hello world from Electron ${process.versions.electron}!`)\n\nfunction App() {\n  const [count, setCount] = useState(0)\n  // return (\n  //   <>\n  //   <div className=\"flex flex-row\">\n  //   <SidePanel />\n  //   <Setup />\n  //   </div>\n\n  //   </>\n  // )\n\n  return (\n      \n    <Routes>\n      <Route path=\"auth/*\" element={<AuthLayout />} />\n      <Route path=\"admin/*\" element={<AdminLayout />} />\n      {/* <Route path=\"rtl/*\" element={<RtlLayout />} /> */}\n      <Route path=\"/\" element={<Navigate to=\"/admin\" replace />} />\n    </Routes>\n \n  );\n}\n\nexport default App\n"
    },
    {
        "path": "src/assets/css/App.css",
        "content": "@import url(\"https://fonts.googleapis.com/css2?family=DM+Sans:ital,wght@0,400;0,500;0,700;1,400;1,500;1,700&display=swap\");\nbody {\n\tfont-family: \"DM Sans\", sans-serif;\n}\n\noption {\n\tcolor: black;\n}\n"
    },
    {
        "path": "src/assets/css/Contact.css",
        "content": "form {\n\twidth: 100%;\n}\n"
    },
    {
        "path": "src/assets/css/MiniCalendar.css",
        "content": "@import url(\"https://fonts.googleapis.com/css2?family=DM+Sans:ital,wght@0,400;0,500;0,700;1,400;1,500;1,700&display=swap\");\n/* LIGHT MODE + GENERAL */\n\n.react-calendar {\n\tborder: unset;\n\tbackground-color: transparent;\n\tfont-family: \"DM Sans\", sans-serif;\n}\n.react-calendar__navigation__prev2-button {\n\tdisplay: none;\n}\n.react-calendar__navigation__next2-button {\n\tdisplay: none;\n}\n.react-calendar__navigation {\n\talign-items: center;\n}\nabbr[title] {\n\tborder-bottom: none;\n\t-webkit-text-decoration: unset;\n\ttext-decoration: unset;\n\t-webkit-text-decoration: unset;\n\t-webkit-text-decoration: unset;\n\ttext-decoration: unset !important;\n}\n.react-calendar__navigation__prev-button {\n\tbackground-color: #4318ff !important;\n\tborder-radius: 10px;\n\tmin-width: 34px !important;\n\theight: 34px !important;\n\tcolor: white;\n}\n.react-calendar__navigation__next-button {\n\tbackground-color: #4318ff !important;\n\tborder-radius: 10px;\n\tmin-width: 34px !important;\n\twidth: 34px !important;\n\theight: 34px !important;\n\tcolor: white;\n}\n.react-calendar__navigation__label {\n\tfont-weight: 700 !important;\n\tfont-size: 18px;\n}\n.react-calendar__navigation__label:hover,\n.react-calendar__navigation__label:focus {\n\tbackground-color: unset !important;\n\tborder-radius: 10px;\n}\n.react-calendar__tile {\n\tfont-size: 12px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0px !important;\n\theight: 34px !important;\n\tcolor: #1b2559;\n}\n.react-calendar__month-view__weekdays {\n\tbackground-color: #f4f7fe;\n\tborder-radius: 10px;\n\tmargin-bottom: 6px;\n}\n.react-calendar__tile--now,\n.react-calendar__tile--now:enabled:hover,\n.react-calendar__tile--now:enabled:focus {\n\tbackground-color: #f4f7fe;\n\tborder-radius: 10px;\n}\n.react-calendar__month-view__days__day--neighboringMonth {\n\tcolor: #b0bbd5;\n}\n.react-calendar__tile--active,\n.react-calendar__tile--active:enabled:hover,\n.react-calendar__tile--active:enabled:focus {\n\tbackground: #4318ff;\n\tborder-radius: 10px;\n\tcolor: white;\n}\n.react-calendar__tile--range,\n.react-calendar__tile--range:enabled:hover,\n.react-calendar__tile--range:enabled:focus {\n\tbackground: #f4f7fe;\n\tcolor: #4318ff;\n\tborder-radius: 0px;\n}\n.react-calendar__tile--rangeStart,\n.react-calendar__tile--rangeStart:enabled:hover,\n.react-calendar__tile--rangeStart:enabled:focus {\n\tbackground: #4318ff;\n\tborder-top-left-radius: 10px;\n\tborder-bottom-left-radius: 10px;\n\tcolor: white;\n}\n.react-calendar__tile--rangeEnd,\n.react-calendar__tile--rangeEnd:enabled:hover,\n.react-calendar__tile--rangeEnd:enabled:focus {\n\tbackground: #4318ff;\n\tborder-top-right-radius: 10px;\n\tborder-bottom-right-radius: 10px;\n\tcolor: white;\n}\n\n/* DARK MODE */\n\nbody.dark .react-calendar {\n\tborder-radius: 30px;\n}\nbody.dark .react-calendar__navigation__prev-button {\n\tbackground-color: #7551ff !important;\n}\nbody.dark .react-calendar__navigation__next-button {\n\tbackground-color: #7551ff !important;\n\tcolor: white;\n}\nbody.dark .react-calendar__tile {\n\tcolor: white;\n}\nbody.dark .react-calendar__tile:enabled:hover,\nbody.dark .react-calendar__tile:enabled:focus {\n\tbackground-color: rgba(255, 255, 255, 0.1);\n}\nbody.dark .react-calendar__month-view__weekdays {\n\tbackground-color: rgba(255, 255, 255, 0.1);\n}\nbody.dark .react-calendar__tile--now,\nbody.dark .react-calendar__tile--now:enabled:hover,\nbody.dark .react-calendar__tile--now:enabled:focus {\n\tbackground-color: rgba(255, 255, 255, 0.1);\n}\nbody.dark .react-calendar__month-view__days__day--neighboringMonth {\n\tcolor: #b0bbd5;\n}\nbody.dark .react-calendar__tile--active,\nbody.dark .react-calendar__tile--active:enabled:hover,\nbody.dark .react-calendar__tile--active:enabled:focus {\n\tbackground: #7551ff;\n\tcolor: white;\n}\nbody.dark .react-calendar__tile--range,\nbody.dark .react-calendar__tile--range:enabled:hover,\nbody.dark .react-calendar__tile--range:enabled:focus {\n\tbackground: rgba(255, 255, 255, 0.1);\n\tcolor: #7551ff;\n}\nbody.dark .react-calendar__tile--rangeStart,\nbody.dark .react-calendar__tile--rangeStart:enabled:hover,\nbody.dark .react-calendar__tile--rangeStart:enabled:focus {\n\tbackground: #7551ff;\n\tcolor: white;\n}\nbody.dark .react-calendar__tile--rangeEnd,\nbody.dark .react-calendar__tile--rangeEnd:enabled:hover,\nbody.dark .react-calendar__tile--rangeEnd:enabled:focus {\n\tbackground: #7551ff;\n\tcolor: white;\n}"
    },
    {
        "path": "src/assets/logo-electron.svg",
        "content": "<svg width=\"534\" height=\"534\" viewBox=\"0 0 534 534\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M408.012 291.99C443.487 250.081 455.873 207.931 438.835 178.423C426.3 156.708 399.798 145.244 364.575 144.785C363.115 144.788 361.715 145.364 360.677 146.39C359.639 147.417 359.046 148.81 359.027 150.27C359.008 151.729 359.565 153.138 360.576 154.191C361.587 155.243 362.972 155.856 364.431 155.896C396.108 156.308 418.942 166.185 429.215 183.979C443.365 208.49 432.319 246.077 399.531 284.81C399.05 285.366 398.684 286.011 398.454 286.709C398.224 287.408 398.135 288.144 398.192 288.877C398.249 289.61 398.45 290.324 398.785 290.978C399.12 291.632 399.581 292.214 400.142 292.689C400.703 293.163 401.352 293.522 402.053 293.744C402.753 293.966 403.491 294.047 404.223 293.982C404.955 293.917 405.667 293.708 406.317 293.366C406.968 293.023 407.544 292.556 408.012 291.99ZM316.844 149.958C284.769 156.831 250.627 170.269 217.84 189.198C136.71 236.037 83.7874 305.106 91.1374 355.187C91.2354 355.916 91.4771 356.618 91.8485 357.253C92.2198 357.888 92.7135 358.442 93.3008 358.885C93.8881 359.327 94.5574 359.649 95.2699 359.831C95.9824 360.013 96.7239 360.051 97.4515 359.944C98.179 359.837 98.8781 359.587 99.5082 359.208C100.138 358.829 100.687 358.329 101.122 357.736C101.558 357.144 101.871 356.47 102.044 355.756C102.217 355.041 102.247 354.299 102.131 353.573C95.6041 309.106 145.771 243.637 223.396 198.821C255.202 180.456 288.26 167.446 319.171 160.823C319.894 160.68 320.582 160.395 321.194 159.984C321.806 159.573 322.33 159.044 322.736 158.429C323.142 157.813 323.421 157.123 323.557 156.398C323.693 155.673 323.684 154.929 323.529 154.208C323.375 153.487 323.078 152.804 322.657 152.199C322.236 151.593 321.699 151.078 321.077 150.682C320.455 150.287 319.76 150.019 319.033 149.895C318.306 149.771 317.562 149.792 316.844 149.958Z\" fill=\"#9FEAF9\"/>\n<path d=\"M211.933 148.108C157.756 138.242 114.919 148.569 97.8458 178.14C85.1062 200.206 88.7478 229.462 106.679 260.735C107.033 261.385 107.513 261.957 108.092 262.419C108.67 262.88 109.334 263.221 110.046 263.423C110.758 263.624 111.503 263.681 112.237 263.59C112.971 263.5 113.68 263.264 114.322 262.896C114.963 262.528 115.525 262.035 115.974 261.447C116.423 260.859 116.75 260.188 116.936 259.472C117.121 258.755 117.162 258.01 117.056 257.277C116.95 256.545 116.698 255.842 116.317 255.208C100.167 227.037 97.0228 201.79 107.469 183.696C121.652 159.131 159.86 149.919 209.942 159.04C211.381 159.279 212.856 158.943 214.05 158.104C215.243 157.265 216.059 155.99 216.32 154.555C216.582 153.119 216.268 151.639 215.448 150.433C214.627 149.227 213.364 148.392 211.933 148.108Z\" fill=\"#9FEAF9\"/>\n<path d=\"M217.677 364.14C185.219 345.402 156.758 322.821 134.852 298.748C134.358 298.209 133.975 297.577 133.725 296.89C133.475 296.202 133.363 295.472 133.396 294.742C133.429 294.011 133.606 293.294 133.917 292.632C134.228 291.97 134.666 291.375 135.207 290.883C135.748 290.391 136.381 290.01 137.07 289.763C137.758 289.516 138.489 289.407 139.219 289.443C139.95 289.479 140.666 289.658 141.327 289.972C141.988 290.285 142.581 290.726 143.071 291.269C164.185 314.473 191.746 336.34 223.233 354.519C298.527 397.99 378.002 409.51 414.906 384.348C415.508 383.922 416.189 383.619 416.91 383.459C417.63 383.299 418.375 383.284 419.101 383.414C419.827 383.545 420.52 383.819 421.139 384.22C421.758 384.622 422.291 385.142 422.707 385.752C423.123 386.362 423.413 387.048 423.56 387.771C423.708 388.494 423.71 389.239 423.567 389.963C423.424 390.686 423.137 391.374 422.725 391.986C422.313 392.598 421.783 393.122 421.167 393.527C379.933 421.642 296.267 409.515 217.677 364.14Z\" fill=\"#9FEAF9\"/>\n<path d=\"M185.408 389.906C203.958 441.698 234.302 473.587 268.423 473.587C293.308 473.587 316.331 456.623 334.285 426.758C334.674 426.133 334.934 425.436 335.051 424.709C335.168 423.982 335.139 423.239 334.967 422.523C334.794 421.807 334.481 421.133 334.045 420.539C333.609 419.945 333.06 419.444 332.428 419.065C331.797 418.685 331.097 418.435 330.368 418.329C329.639 418.222 328.897 418.262 328.184 418.445C327.47 418.628 326.8 418.951 326.213 419.396C325.626 419.84 325.133 420.397 324.762 421.033C308.627 447.873 288.808 462.475 268.423 462.475C240.079 462.475 213.015 434.033 195.871 386.162C195.636 385.461 195.264 384.814 194.776 384.259C194.288 383.704 193.694 383.252 193.029 382.929C192.364 382.606 191.641 382.419 190.903 382.379C190.165 382.339 189.426 382.447 188.73 382.696C188.034 382.945 187.395 383.331 186.85 383.83C186.304 384.329 185.864 384.932 185.555 385.604C185.246 386.275 185.074 387.001 185.049 387.74C185.024 388.479 185.147 389.215 185.41 389.906H185.408ZM354.829 379.775C364.433 349.092 369.59 313.696 369.59 276.81C369.59 184.771 337.375 105.429 291.492 85.0562C290.151 84.4948 288.644 84.4809 287.294 85.0174C285.943 85.554 284.857 86.5983 284.267 87.9265C283.677 89.2546 283.631 90.761 284.139 92.1226C284.647 93.4842 285.668 94.5927 286.983 95.2104C327.906 113.383 358.477 188.681 358.477 276.81C358.477 312.596 353.483 346.873 344.227 376.456C343.997 377.156 343.908 377.894 343.966 378.628C344.024 379.362 344.227 380.077 344.564 380.732C344.901 381.387 345.364 381.968 345.928 382.442C346.491 382.917 347.143 383.274 347.846 383.494C348.549 383.714 349.288 383.792 350.021 383.724C350.754 383.655 351.467 383.442 352.117 383.096C352.767 382.75 353.341 382.278 353.807 381.708C354.273 381.138 354.621 380.481 354.831 379.775H354.829ZM459.462 374.333C459.462 359.648 447.558 347.744 432.873 347.744C418.187 347.744 406.283 359.648 406.283 374.333C406.283 389.019 418.187 400.923 432.873 400.923C447.558 400.923 459.462 389.019 459.462 374.333ZM448.352 374.333C448.352 376.366 447.952 378.379 447.174 380.257C446.396 382.135 445.256 383.841 443.818 385.279C442.381 386.716 440.674 387.856 438.796 388.634C436.918 389.412 434.906 389.812 432.873 389.812C430.84 389.812 428.827 389.412 426.949 388.634C425.071 387.856 423.365 386.716 421.927 385.279C420.49 383.841 419.35 382.135 418.572 380.257C417.794 378.379 417.394 376.366 417.394 374.333C417.394 370.228 419.025 366.291 421.927 363.388C424.83 360.485 428.768 358.854 432.873 358.854C436.978 358.854 440.915 360.485 443.818 363.388C446.721 366.291 448.352 370.228 448.352 374.333ZM103.59 400.923C118.277 400.923 130.181 389.019 130.181 374.333C130.181 359.648 118.275 347.744 103.59 347.744C88.9062 347.744 77 359.648 77 374.333C77 389.019 88.9062 400.923 103.59 400.923ZM103.59 389.812C99.4843 389.812 95.5471 388.182 92.6442 385.279C89.7413 382.376 88.1104 378.439 88.1104 374.333C88.1104 370.228 89.7413 366.291 92.6442 363.388C95.5471 360.485 99.4843 358.854 103.59 358.854C107.695 358.854 111.632 360.485 114.535 363.388C117.438 366.291 119.069 370.228 119.069 374.333C119.069 378.439 117.438 382.376 114.535 385.279C111.632 388.182 107.695 389.812 103.59 389.812Z\" fill=\"#9FEAF9\"/>\n<path d=\"M268.423 112.179C283.108 112.179 295.013 100.275 295.013 85.5896C295.013 70.9042 283.108 59 268.423 59C253.738 59 241.833 70.9042 241.833 85.5896C241.833 100.275 253.738 112.179 268.423 112.179ZM268.423 101.069C264.318 101.069 260.38 99.4379 257.478 96.535C254.575 93.6321 252.944 89.6949 252.944 85.5896C252.944 81.4843 254.575 77.5471 257.478 74.6442C260.38 71.7413 264.318 70.1104 268.423 70.1104C272.528 70.1104 276.465 71.7413 279.368 74.6442C282.271 77.5471 283.902 81.4843 283.902 85.5896C283.902 89.6949 282.271 93.6321 279.368 96.535C276.465 99.4379 272.528 101.069 268.423 101.069Z\" fill=\"#9FEAF9\"/>\n</svg>"
    },
    {
        "path": "src/assets/logo-vite.svg",
        "content": "<svg width=\"534\" height=\"534\" viewBox=\"0 0 534 534\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0_1_2)\">\n<path d=\"M266.667 533.333C413.943 533.333 533.333 413.943 533.333 266.667C533.333 119.391 413.943 0 266.667 0C119.391 0 0 119.391 0 266.667C0 413.943 119.391 533.333 266.667 533.333Z\" fill=\"url(#paint0_linear_1_2)\"/>\n<path d=\"M298.488 204.045L234.806 216.594C233.76 216.8 232.985 217.692 232.922 218.763L229.004 285.297C228.912 286.864 230.343 288.081 231.864 287.728L249.594 283.613C251.253 283.228 252.752 284.698 252.411 286.375L247.143 312.315C246.789 314.061 248.419 315.554 250.114 315.036L261.065 311.69C262.762 311.172 264.394 312.669 264.035 314.416L255.664 355.162C255.14 357.711 258.511 359.101 259.917 356.916L260.856 355.456L312.747 251.312C313.616 249.569 312.117 247.58 310.213 247.95L291.963 251.492C290.248 251.824 288.789 250.218 289.273 248.531L301.184 207.005C301.669 205.315 300.205 203.707 298.488 204.045Z\" fill=\"url(#paint1_linear_1_2)\"/>\n</g>\n<defs>\n<linearGradient id=\"paint0_linear_1_2\" x1=\"6.00017\" y1=\"32.9999\" x2=\"235\" y2=\"344\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#41D1FF\"/>\n<stop offset=\"1\" stop-color=\"#BD34FE\"/>\n</linearGradient>\n<linearGradient id=\"paint1_linear_1_2\" x1=\"194.651\" y1=\"8.81819\" x2=\"236.076\" y2=\"292.989\" gradientUnits=\"userSpaceOnUse\">\n<stop stop-color=\"#FFEA83\"/>\n<stop offset=\"0.0833333\" stop-color=\"#FFDD35\"/>\n<stop offset=\"1\" stop-color=\"#FFA800\"/>\n</linearGradient>\n<clipPath id=\"clip0_1_2\">\n<rect width=\"534\" height=\"534\" fill=\"white\"/>\n</clipPath>\n</defs>\n</svg>\n"
    },
    {
        "path": "src/assets/logo.svg",
        "content": "<svg width=\"534\" height=\"534\" viewBox=\"0 0 534 534\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><script xmlns=\"\"/><path d=\"M266.667 533.333C413.943 533.333 533.333 413.943 533.333 266.667C533.333 119.391 413.943 0 266.667 0C119.391 0 0 119.391 0 266.667C0 413.943 119.391 533.333 266.667 533.333Z\" fill=\"url(#paint0_linear)\"/><path d=\"M408.012 291.99C443.487 250.081 455.873 207.931 438.835 178.423C426.3 156.708 399.798 145.244 364.575 144.785C363.115 144.788 361.715 145.364 360.677 146.39C359.639 147.417 359.046 148.81 359.027 150.27C359.008 151.729 359.565 153.138 360.576 154.191C361.587 155.243 362.972 155.856 364.431 155.896C396.108 156.308 418.942 166.185 429.215 183.979C443.365 208.49 432.319 246.077 399.531 284.81C399.05 285.366 398.684 286.011 398.454 286.709C398.224 287.408 398.135 288.144 398.192 288.877C398.249 289.61 398.45 290.324 398.785 290.978C399.12 291.632 399.581 292.214 400.142 292.689C400.703 293.163 401.352 293.522 402.053 293.744C402.753 293.966 403.491 294.047 404.223 293.982C404.955 293.917 405.667 293.708 406.317 293.366C406.968 293.023 407.544 292.556 408.012 291.99ZM316.844 149.958C284.769 156.831 250.627 170.269 217.84 189.198C136.71 236.037 83.7874 305.106 91.1374 355.187C91.2354 355.916 91.4771 356.618 91.8485 357.253C92.2198 357.888 92.7135 358.442 93.3008 358.885C93.8881 359.327 94.5574 359.649 95.2699 359.831C95.9824 360.013 96.7239 360.051 97.4515 359.944C98.179 359.837 98.8781 359.587 99.5082 359.208C100.138 358.829 100.687 358.329 101.122 357.736C101.558 357.144 101.871 356.47 102.044 355.756C102.217 355.041 102.247 354.299 102.131 353.573C95.6041 309.106 145.771 243.637 223.396 198.821C255.202 180.456 288.26 167.446 319.171 160.823C319.894 160.68 320.582 160.395 321.194 159.984C321.806 159.573 322.33 159.044 322.736 158.429C323.142 157.813 323.421 157.123 323.557 156.398C323.693 155.673 323.684 154.929 323.529 154.208C323.375 153.487 323.078 152.804 322.657 152.199C322.236 151.593 321.699 151.078 321.077 150.682C320.455 150.287 319.76 150.019 319.033 149.895C318.306 149.771 317.562 149.792 316.844 149.958V149.958Z\" fill=\"#9feaf9\"/><path d=\"M211.933 148.108C157.756 138.242 114.919 148.569 97.8458 178.14C85.1062 200.206 88.7478 229.462 106.679 260.735C107.033 261.385 107.513 261.957 108.092 262.419C108.67 262.88 109.334 263.221 110.046 263.423C110.758 263.624 111.503 263.681 112.237 263.59C112.971 263.5 113.68 263.264 114.322 262.896C114.963 262.528 115.525 262.035 115.974 261.447C116.423 260.859 116.75 260.188 116.936 259.472C117.121 258.755 117.162 258.01 117.056 257.277C116.95 256.545 116.698 255.842 116.317 255.208C100.167 227.037 97.0228 201.79 107.469 183.696C121.652 159.131 159.86 149.919 209.942 159.04C211.381 159.279 212.856 158.943 214.05 158.104C215.243 157.265 216.059 155.99 216.32 154.555C216.582 153.119 216.268 151.639 215.448 150.433C214.627 149.227 213.364 148.392 211.933 148.108Z\" fill=\"#9feaf9\"/><path d=\"M298.488 204.045L234.806 216.594C233.76 216.8 232.985 217.692 232.922 218.763L229.004 285.297C228.912 286.864 230.343 288.081 231.864 287.728L249.594 283.613C251.253 283.228 252.752 284.698 252.411 286.375L247.143 312.315C246.789 314.061 248.419 315.554 250.114 315.036L261.065 311.69C262.762 311.172 264.394 312.669 264.035 314.416L255.664 355.162C255.14 357.711 258.511 359.101 259.917 356.916L260.856 355.456L312.747 251.312C313.616 249.569 312.117 247.58 310.213 247.95L291.963 251.492C290.248 251.824 288.789 250.218 289.273 248.531L301.184 207.005C301.669 205.315 300.205 203.707 298.488 204.045Z\" fill=\"url(#paint1_linear)\"/><path d=\"M217.677 364.14C185.219 345.402 156.758 322.821 134.852 298.748C134.358 298.209 133.975 297.577 133.725 296.89C133.475 296.202 133.363 295.472 133.396 294.742C133.429 294.011 133.606 293.294 133.917 292.632C134.228 291.97 134.666 291.375 135.207 290.883C135.748 290.391 136.381 290.01 137.07 289.763C137.758 289.516 138.489 289.407 139.219 289.443C139.95 289.479 140.666 289.658 141.327 289.972C141.988 290.285 142.581 290.726 143.071 291.269C164.185 314.473 191.746 336.34 223.233 354.519C298.527 397.99 378.002 409.51 414.906 384.348C415.508 383.922 416.189 383.619 416.91 383.459C417.63 383.299 418.375 383.284 419.101 383.414C419.827 383.545 420.52 383.819 421.139 384.22C421.758 384.622 422.291 385.142 422.707 385.752C423.123 386.362 423.413 387.048 423.56 387.771C423.708 388.494 423.71 389.239 423.567 389.963C423.424 390.686 423.137 391.374 422.725 391.986C422.313 392.598 421.783 393.122 421.167 393.527C379.933 421.642 296.267 409.515 217.677 364.14Z\" fill=\"#9feaf9\"/><path d=\"M185.408 389.906C203.958 441.698 234.302 473.587 268.423 473.587C293.308 473.587 316.331 456.623 334.285 426.758C334.674 426.133 334.934 425.436 335.051 424.709C335.168 423.982 335.139 423.239 334.967 422.523C334.794 421.807 334.481 421.133 334.045 420.539C333.609 419.945 333.06 419.444 332.428 419.065C331.797 418.685 331.097 418.435 330.368 418.329C329.639 418.222 328.897 418.262 328.184 418.445C327.47 418.628 326.8 418.951 326.213 419.396C325.626 419.84 325.133 420.397 324.762 421.033C308.627 447.873 288.808 462.475 268.423 462.475C240.079 462.475 213.015 434.033 195.871 386.162C195.636 385.461 195.264 384.814 194.776 384.259C194.288 383.704 193.694 383.252 193.029 382.929C192.364 382.606 191.641 382.419 190.903 382.379C190.165 382.339 189.426 382.447 188.73 382.696C188.034 382.945 187.395 383.331 186.85 383.83C186.304 384.329 185.864 384.932 185.555 385.604C185.246 386.275 185.074 387.001 185.049 387.74C185.024 388.479 185.147 389.215 185.41 389.906H185.408ZM354.829 379.775C364.433 349.092 369.59 313.696 369.59 276.81C369.59 184.771 337.375 105.429 291.492 85.0562C290.151 84.4948 288.644 84.4809 287.294 85.0174C285.943 85.554 284.857 86.5983 284.267 87.9265C283.677 89.2546 283.631 90.761 284.139 92.1226C284.647 93.4842 285.668 94.5927 286.983 95.2104C327.906 113.383 358.477 188.681 358.477 276.81C358.477 312.596 353.483 346.873 344.227 376.456C343.997 377.156 343.908 377.894 343.966 378.628C344.024 379.362 344.227 380.077 344.564 380.732C344.901 381.387 345.364 381.968 345.928 382.442C346.491 382.917 347.143 383.274 347.846 383.494C348.549 383.714 349.288 383.792 350.021 383.724C350.754 383.655 351.467 383.442 352.117 383.096C352.767 382.75 353.341 382.278 353.807 381.708C354.273 381.138 354.621 380.481 354.831 379.775H354.829ZM459.462 374.333C459.462 359.648 447.558 347.744 432.873 347.744C418.187 347.744 406.283 359.648 406.283 374.333C406.283 389.019 418.187 400.923 432.873 400.923C447.558 400.923 459.462 389.019 459.462 374.333ZM448.352 374.333C448.352 376.366 447.952 378.379 447.174 380.257C446.396 382.135 445.256 383.841 443.818 385.279C442.381 386.716 440.674 387.856 438.796 388.634C436.918 389.412 434.906 389.812 432.873 389.812C430.84 389.812 428.827 389.412 426.949 388.634C425.071 387.856 423.365 386.716 421.927 385.279C420.49 383.841 419.35 382.135 418.572 380.257C417.794 378.379 417.394 376.366 417.394 374.333C417.394 370.228 419.025 366.291 421.927 363.388C424.83 360.485 428.768 358.854 432.873 358.854C436.978 358.854 440.915 360.485 443.818 363.388C446.721 366.291 448.352 370.228 448.352 374.333ZM103.59 400.923C118.277 400.923 130.181 389.019 130.181 374.333C130.181 359.648 118.275 347.744 103.59 347.744C88.9062 347.744 77 359.648 77 374.333C77 389.019 88.9062 400.923 103.59 400.923ZM103.59 389.812C99.4843 389.812 95.5471 388.182 92.6442 385.279C89.7413 382.376 88.1104 378.439 88.1104 374.333C88.1104 370.228 89.7413 366.291 92.6442 363.388C95.5471 360.485 99.4843 358.854 103.59 358.854C107.695 358.854 111.632 360.485 114.535 363.388C117.438 366.291 119.069 370.228 119.069 374.333C119.069 378.439 117.438 382.376 114.535 385.279C111.632 388.182 107.695 389.812 103.59 389.812Z\" fill=\"#9feaf9\"/><path d=\"M268.423 112.179C283.108 112.179 295.013 100.275 295.013 85.5896C295.013 70.9042 283.108 59 268.423 59C253.738 59 241.833 70.9042 241.833 85.5896C241.833 100.275 253.738 112.179 268.423 112.179ZM268.423 101.069C264.318 101.069 260.38 99.4379 257.478 96.535C254.575 93.6321 252.944 89.6949 252.944 85.5896C252.944 81.4843 254.575 77.5471 257.478 74.6442C260.38 71.7413 264.318 70.1104 268.423 70.1104C272.528 70.1104 276.465 71.7413 279.368 74.6442C282.271 77.5471 283.902 81.4843 283.902 85.5896C283.902 89.6949 282.271 93.6321 279.368 96.535C276.465 99.4379 272.528 101.069 268.423 101.069Z\" fill=\"#9feaf9\"/><defs><linearGradient id=\"paint0_linear\" x1=\"6.00017\" y1=\"32.9999\" x2=\"235\" y2=\"344\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#41D1FF\"/><stop offset=\"1\" stop-color=\"#BD34FE\"/></linearGradient><linearGradient id=\"paint1_linear\" x1=\"194.651\" y1=\"8.81818\" x2=\"236.076\" y2=\"292.989\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#FFEA83\"/><stop offset=\"0.0833333\" stop-color=\"#FFDD35\"/><stop offset=\"1\" stop-color=\"#FFA800\"/></linearGradient></defs></svg>"
    },
    {
        "path": "src/assets/svg/checked.svg",
        "content": "<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M6.66662 10.115L12.7946 3.98633L13.7379 4.92899L6.66662 12.0003L2.42395 7.75766L3.36662 6.81499L6.66662 10.115Z\" fill=\"white\"/>\n</svg>\n"
    },
    {
        "path": "src/components/Setup.tsx",
        "content": "import * as fs from 'fs';\n\n\nexport default function Setup() {\n\n\n  function handleFileChange() {\n\n    fs.readFile('tp.txt', (err, inputD) => {\n\n      if (err) throw err;\n      \n      const content = (document.getElementById(\"apiTextBox\") as HTMLInputElement)\n      if(content.value === \"\")\n      {\n        content.value = inputD.toString();\n      }\n   })\n  }\n  \n  handleFileChange();\n\n  function handleClick()\n  {\n    let kk = (document.getElementById(\"apiTextBox\") as HTMLInputElement)\n\n    let apiKey = kk.value;\n\n    console.log(apiKey);\n  let fInput = apiKey;\n  fs.writeFile('tp.txt', fInput, (err: any) => {\n     if (err) throw err;\n     else{\n        console.log(\"noice\")\n     }\n  })\n  }\n\n\n\n\n  return (\n    <>\n      <div className=\"flex flex-col w-full mt-6 \">\n\n        <label id= \"hehe\" className=\" text-navy-700 block mb-2 text-sm font-medium mt-4 dark:text-white\">\n          Enter your API KEY\n        </label>\n        <div className=\"flex flex-row\">\n          <button className=\" bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded focus:ring-blue-500 focus:border-blue-500 block  p-2.5 w-24 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n            3.5\n          </button>\n          <input\n            list=\"GPT-versions\"\n            type=\"text\"\n            id=\"apiTextBox\"\n            className=\" ml-2 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded focus:ring-blue-500 focus:border-blue-500 block w-9/12  p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 \"\n            placeholder=\"API key\"\n          />\n          <button\n          id=\"submit-but\"\n          onClick={handleClick}\n            type=\"button\"\n            className=\" bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded focus:ring-blue-500 focus:border-blue-500 block ml-2  w-24 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n          >\n            Submit\n          </button>\n        </div>\n        <div>\n          <h1 className=\"text-1xl mt-5 text-navy-700 dark:text-white\">Keyboard Shortcut</h1>\n          <button\n            type=\"button\"\n            className=\"mt-1 text-gray-900 bg-white hover:bg-gray-100 border border-gray-200 focus:ring-4 focus:outline-none focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-600 dark:bg-navy-700 dark:border-gray-700 dark:text-white dark:hover:bg-gray-700 mr-2 mb-2\"\n          >\n            Ctrl+Alt+T\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n"
    },
    {
        "path": "src/components/Sidepanel.tsx",
        "content": "\n\nexport default function SidePanel() {\n  return (\n    <>\n      <div className=\"flex flex-col items-start w-64 h-screen bg-black\">\n        <div className=\"top w-64\">\n          <div className=\"bg-amber-300 w-full h-10\">Button space</div>\n          <div className=\"bg-amber-900 w-full h-40\">Gpt</div>\n          <div className=\"bg-amber-500 w-full h-20\">About</div>\n          <div className=\"bg-amber-600 w-full h-20\">Setup</div>\n          <div className=\"bg-amber-700 w-full h-20\">Personalize</div>\n          <div className=\"bg-amber-800 w-full h-20\">support</div>\n        </div>\n        <div className=\"bottom w-64 h-screen relative \">\n          <div className=\"bg-amber-700 w-full h-20 absolute bottom-0\">Profile</div>\n        </div>\n      </div>\n    </>\n  );\n}\n"
    },
    {
        "path": "src/components/calendar/MiniCalendar.tsx",
        "content": "import { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport Card from \"@/components/card\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { MdChevronLeft, MdChevronRight } from \"react-icons/md\";\nimport \"@/assets/css/MiniCalendar.css\";\n\nconst MiniCalendar = () => {\n  const [value, onChange] = useState(new Date());\n\n  return (\n    <div>\n      <Card extra=\"flex w-full h-full flex-col px-3 py-3\">\n        <Calendar\n          onChange={onChange}\n          value={value}\n          prevLabel={<MdChevronLeft className=\"ml-1 h-6 w-6 \" />}\n          nextLabel={<MdChevronRight className=\"ml-1 h-6 w-6 \" />}\n          view={\"month\"}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default MiniCalendar;\n"
    },
    {
        "path": "src/components/card/CardMenu.tsx",
        "content": "import React from \"react\";\nimport Dropdown from \"@/components/dropdown\";\nimport { AiOutlineUser } from \"react-icons/ai\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FiSettings } from \"react-icons/fi\";\nimport { AiOutlineShop } from \"react-icons/ai\";\nimport { TiLightbulb } from \"react-icons/ti\";\n\nfunction CardMenu(props: { transparent?: boolean }) {\n  const { transparent } = props;\n  const [open, setOpen] = React.useState(false);\n  return (\n    <Dropdown\n      button={\n        <button\n          onClick={() => setOpen(!open)}\n          className={`flex items-center text-xl hover:cursor-pointer ${\n            transparent\n              ? \"bg-none text-white hover:bg-none active:bg-none\"\n              : \"bg-lightPrimary p-2 text-brand-500 hover:bg-gray-100 dark:bg-navy-700 dark:text-white dark:hover:bg-white/20 dark:active:bg-white/10\"\n          } linear justify-center rounded-lg font-bold transition duration-200`}\n        >\n          <BsThreeDots className=\"h-6 w-6\" />\n        </button>\n      }\n      animation={\"origin-top-right transition-all duration-300 ease-in-out\"}\n      classNames={`${transparent ? \"top-8\" : \"top-11\"} right-0 w-max`}\n      children={\n        <div className=\"z-50 w-max rounded-xl bg-white py-3 px-4 text-sm shadow-xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n          <p className=\"hover:text-black flex cursor-pointer items-center gap-2 text-gray-600 hover:font-medium\">\n            <span>\n              <AiOutlineUser />\n            </span>\n            Panel 1\n          </p>\n          <p className=\"hover:text-black mt-2 flex cursor-pointer items-center gap-2 pt-1 text-gray-600 hover:font-medium\">\n            <span>\n              <AiOutlineShop />\n            </span>\n            Panel 2\n          </p>\n          <p className=\"hover:text-black mt-2 flex cursor-pointer items-center gap-2 pt-1 text-gray-600 hover:font-medium\">\n            <span>\n              <TiLightbulb />\n            </span>\n            Panel 3\n          </p>\n          <p className=\"hover:text-black mt-2 flex cursor-pointer items-center gap-2 pt-1 text-gray-600 hover:font-medium\">\n            <span>\n              <FiSettings />\n            </span>\n            Panel 4\n          </p>\n        </div>\n      }\n    />\n  );\n}\n\nexport default CardMenu;\n"
    },
    {
        "path": "src/components/card/NftCard.tsx",
        "content": "import { IoHeart, IoHeartOutline } from \"react-icons/io5\";\nimport { useState } from \"react\";\nimport Card from \"@/components/card\";\n\nconst NftCard = (props: {\n  image: string;\n  title: string;\n  author: string;\n  bidders: string[];\n  download?: string;\n  price: string | number;\n  extra?: string;\n}) => {\n  const { title, author, price, image, bidders, extra } = props;\n  const [heart, setHeart] = useState(true);\n  return (\n    <Card\n      extra={`flex flex-col w-full h-full !p-4 3xl:p-![18px] bg-white ${extra}`}\n    >\n      <div className=\"h-full w-full\">\n        <div className=\"relative w-full\">\n          <img\n            src={image}\n            className=\"mb-3 h-full w-full rounded-xl 3xl:h-full 3xl:w-full\"\n            alt=\"\"\n          />\n          <button\n            onClick={() => setHeart(!heart)}\n            className=\"absolute top-3 right-3 flex items-center justify-center rounded-full bg-white p-2 text-brand-500 hover:cursor-pointer\"\n          >\n            <div className=\"flex h-full w-full items-center justify-center rounded-full text-xl hover:bg-gray-50 dark:text-navy-900\">\n              {heart ? (\n                <IoHeartOutline />\n              ) : (\n                <IoHeart className=\"text-brand-500\" />\n              )}\n            </div>\n          </button>\n        </div>\n\n        <div className=\"mb-3 flex items-center justify-between px-1 md:flex-col md:items-start lg:flex-row lg:justify-between xl:flex-col xl:items-start 3xl:flex-row 3xl:justify-between\">\n          <div className=\"mb-2\">\n            <p className=\"text-lg font-bold text-navy-700 dark:text-white\">\n              {\" \"}\n              {title}{\" \"}\n            </p>\n            <p className=\"mt-1 text-sm font-medium text-gray-600 md:mt-2\">\n              By {author}{\" \"}\n            </p>\n          </div>\n\n          <div className=\"flex flex-row-reverse md:mt-2 lg:mt-0\">\n            <span className=\"z-0 ml-px inline-flex h-8 w-8 items-center justify-center rounded-full border-2 border-white bg-[#E0E5F2] text-xs text-navy-700 dark:!border-navy-800 dark:bg-gray-800 dark:text-white\">\n              +5\n            </span>\n            {bidders.map((avt, key) => (\n              <span\n                key={key}\n                className=\"z-10 -mr-3 h-8 w-8 rounded-full border-2 border-white dark:!border-navy-800\"\n              >\n                <img\n                  className=\"h-full w-full rounded-full object-cover\"\n                  src={avt}\n                  alt=\"\"\n                />\n              </span>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between md:flex-col md:items-start lg:flex-row lg:justify-between xl:flex-col 2xl:items-start 3xl:flex-row 3xl:items-center 3xl:justify-between\">\n          <div className=\"flex\">\n            <p className=\"mb-2 text-sm font-bold text-brand-500 dark:text-white\">\n              Current Bid: {price} <span>ETH</span>\n            </p>\n          </div>\n          <button className=\"linear rounded-[20px] bg-brand-900 px-4 py-2 text-base font-medium text-white transition duration-200 hover:bg-brand-800 active:bg-brand-700 dark:bg-brand-400 dark:hover:bg-brand-300 dark:active:opacity-90\">\n            Place Bid\n          </button>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default NftCard;\n"
    },
    {
        "path": "src/components/card/index.tsx",
        "content": "function Card(props: {\n  variant?: string;\n  extra?: string;\n  children?: JSX.Element | any[];\n  [x: string]: any;\n}) {\n  const { variant, extra, children, ...rest } = props;\n  return (\n    <div\n      className={`!z-5 relative flex flex-col rounded-[20px] bg-white bg-clip-border shadow-3xl shadow-shadow-500 dark:!bg-navy-800 dark:text-white dark:shadow-none ${extra}`}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Card;\n"
    },
    {
        "path": "src/components/charts/BarChart.tsx",
        "content": "import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype ChartProps = {\n  // using `interface` is also ok\n  [x: string]: any;\n};\ntype ChartState = {\n  chartData: any[];\n  chartOptions: any;\n};\n\nclass ColumnChart extends React.Component<ChartProps, ChartState> {\n  constructor(props: { chartData: any[]; chartOptions: any }) {\n    super(props);\n    this.state = {\n      chartData: [],\n      chartOptions: {},\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      chartData: this.props.chartData,\n      chartOptions: this.props.chartOptions,\n    });\n  }\n\n  render() {\n    return (\n      <Chart\n        options={this.state.chartOptions}\n        series={this.state.chartData}\n        type=\"bar\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    );\n  }\n}\n\nexport default ColumnChart;\n"
    },
    {
        "path": "src/components/charts/LineAreaChart.tsx",
        "content": "import React from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\ntype ChartProps = {\n\t// using `interface` is also ok\n\t[x: string]: any;\n};\ntype ChartState = {\n\tchartData: any[];\n\tchartOptions: any;\n};\n\nclass LineChart extends React.Component<ChartProps, ChartState> {\n\tconstructor(props: { chartData: any[]; chartOptions: any }) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tchartData: [],\n\t\t\tchartOptions: {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tchartData: this.props.chartData,\n\t\t\tchartOptions: this.props.chartOptions\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ReactApexChart\n\t\t\t\toptions={this.state.chartOptions}\n\t\t\t\tseries={this.state.chartData}\n\t\t\t\ttype='area'\n\t\t\t\twidth='100%'\n\t\t\t\theight='100%'\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default LineChart;\n"
    },
    {
        "path": "src/components/charts/LineChart.tsx",
        "content": "import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\ntype ChartProps = {\n  // using `interface` is also ok\n  [x: string]: any;\n};\ntype ChartState = {\n  chartData: any[];\n  chartOptions: any;\n};\n\nclass LineChart extends React.Component<ChartProps, ChartState> {\n  constructor(props: { chartData: any[]; chartOptions: any }) {\n    super(props);\n\n    this.state = {\n      chartData: [],\n      chartOptions: {},\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      chartData: this.props.chartData,\n      chartOptions: this.props.chartOptions,\n    });\n  }\n\n  render() {\n    return (\n      <ReactApexChart\n        options={this.state.chartOptions}\n        series={this.state.chartData}\n        type=\"line\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    );\n  }\n}\n\nexport default LineChart;\n"
    },
    {
        "path": "src/components/charts/PieChart.tsx",
        "content": "import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\ntype ChartProps = {\n  // using `interface` is also ok\n  [x: string]: any;\n};\ntype ChartState = {\n  chartData: any[];\n  chartOptions: any;\n};\n\nclass PieChart extends React.Component<ChartProps, ChartState> {\n  constructor(props: { chartData: any[]; chartOptions: any }) {\n    super(props);\n\n    this.state = {\n      chartData: [],\n      chartOptions: {},\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      chartData: this.props.chartData,\n      chartOptions: this.props.chartOptions,\n    });\n  }\n\n  render() {\n    return (\n      <ReactApexChart\n        options={this.state.chartOptions}\n        series={this.state.chartData}\n        type=\"pie\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    );\n  }\n}\n\nexport default PieChart;\n"
    },
    {
        "path": "src/components/checkbox/index.tsx",
        "content": "const Checkbox = (props: {\n  extra?: string;\n  color?:\n    | \"red\"\n    | \"blue\"\n    | \"green\"\n    | \"yellow\"\n    | \"orange\"\n    | \"teal\"\n    | \"navy\"\n    | \"lime\"\n    | \"cyan\"\n    | \"pink\"\n    | \"purple\"\n    | \"amber\"\n    | \"indigo\"\n    | \"gray\";\n  [x: string]: any;\n}) => {\n  const { extra, color, ...rest } = props;\n  return (\n    <input\n      type=\"checkbox\"\n      className={`defaultCheckbox relative flex h-[20px] min-h-[20px] w-[20px] min-w-[20px] appearance-none items-center \n      justify-center rounded-md border border-gray-300 text-white/0 outline-none transition duration-[0.2s]\n      checked:border-none checked:text-white hover:cursor-pointer dark:border-white/10 ${\n        color === \"red\"\n          ? \"checked:border-none checked:bg-red-500 dark:checked:bg-red-400\"\n          : color === \"blue\"\n          ? \"checked:border-none checked:bg-blue-500 dark:checked:bg-blue-400\"\n          : color === \"green\"\n          ? \"checked:border-none checked:bg-green-500 dark:checked:bg-green-400\"\n          : color === \"yellow\"\n          ? \"checked:border-none checked:bg-yellow-500 dark:checked:bg-yellow-400\"\n          : color === \"orange\"\n          ? \"checked:border-none checked:bg-orange-500 dark:checked:bg-orange-400\"\n          : color === \"teal\"\n          ? \"checked:border-none checked:bg-teal-500 dark:checked:bg-teal-400\"\n          : color === \"navy\"\n          ? \"checked:border-none checked:bg-navy-500 dark:checked:bg-navy-400\"\n          : color === \"lime\"\n          ? \"checked:border-none checked:bg-lime-500 dark:checked:bg-lime-400\"\n          : color === \"cyan\"\n          ? \"checked:border-none checked:bg-cyan-500 dark:checked:bg-cyan-400\"\n          : color === \"pink\"\n          ? \"checked:border-none checked:bg-pink-500 dark:checked:bg-pink-400\"\n          : color === \"purple\"\n          ? \"checked:border-none checked:bg-purple-500 dark:checked:bg-purple-400\"\n          : color === \"amber\"\n          ? \"checked:border-none checked:bg-amber-500 dark:checked:bg-amber-400\"\n          : color === \"indigo\"\n          ? \"checked:border-none checked:bg-indigo-500 dark:checked:bg-indigo-400\"\n          : color === \"gray\"\n          ? \"checked:border-none checked:bg-gray-500 dark:checked:bg-gray-400\"\n          : \"checked:bg-brand-500 dark:checked:bg-brand-400\"\n      } ${extra}`}\n      name=\"weekly\"\n      {...rest}\n    />\n  );\n};\n\nexport default Checkbox;\n"
    },
    {
        "path": "src/components/dropdown/index.tsx",
        "content": "import React from \"react\";\n\nfunction useOutsideAlerter(ref: any, setX: any): void {\n  React.useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    // function handleClickOutside(event: React.MouseEvent<HTMLElement>) {\n    function handleClickOutside(event: any) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setX(false);\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, setX]);\n}\n\nconst Dropdown = (props: {\n  button: JSX.Element;\n  children: JSX.Element;\n  classNames: string;\n  animation?: string;\n}) => {\n  const { button, children, classNames, animation } = props;\n  const wrapperRef = React.useRef(null);\n  const [openWrapper, setOpenWrapper] = React.useState(false);\n  useOutsideAlerter(wrapperRef, setOpenWrapper);\n\n  return (\n    <div ref={wrapperRef} className=\"relative flex\">\n      <div className=\"flex\" onMouseDown={() => setOpenWrapper(!openWrapper)}>\n        {button}\n      </div>\n      <div\n        className={`${classNames} absolute z-10 ${\n          animation\n            ? animation\n            : \"origin-top-right transition-all duration-300 ease-in-out\"\n        } ${openWrapper ? \"scale-100\" : \"scale-0\"}`}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n"
    },
    {
        "path": "src/components/fields/InputField.tsx",
        "content": "// Custom components\nimport React from \"react\";\n\nfunction InputField(props: {\n  id: string;\n  label: string;\n  extra: string;\n  placeholder: string;\n  variant: string;\n  state?: string;\n  disabled?: boolean;\n  type?: string;\n}) {\n  const { label, id, extra, type, placeholder, variant, state, disabled } =\n    props;\n\n  return (\n    <div className={`${extra}`}>\n      <label\n        htmlFor={id}\n        className={`text-sm text-navy-700 dark:text-white ${\n          variant === \"auth\" ? \"ml-1.5 font-medium\" : \"ml-3 font-bold\"\n        }`}\n      >\n        {label}\n      </label>\n      <input\n        disabled={disabled}\n        type={type}\n        id={id}\n        placeholder={placeholder}\n        className={`mt-2 flex h-12 w-full items-center justify-center rounded-xl border bg-white/0 p-3 text-sm outline-none ${\n          disabled === true\n            ? \"!border-none !bg-gray-100 dark:!bg-white/5 dark:placeholder:!text-[rgba(255,255,255,0.15)]\"\n            : state === \"error\"\n            ? \"border-red-500 text-red-500 placeholder:text-red-500 dark:!border-red-400 dark:!text-red-400 dark:placeholder:!text-red-400\"\n            : state === \"success\"\n            ? \"border-green-500 text-green-500 placeholder:text-green-500 dark:!border-green-400 dark:!text-green-400 dark:placeholder:!text-green-400\"\n            : \"border-gray-200 dark:!border-white/10 dark:text-white\"\n        }`}\n      />\n    </div>\n  );\n}\n\nexport default InputField;\n"
    },
    {
        "path": "src/components/fields/SwitchField.tsx",
        "content": "import Switch from \"components/switch\";\n\nconst SwitchField = (props: {\n  id: string;\n  label: string;\n  desc: string;\n  placeholder: string;\n  mt: any;\n  mb: any;\n}) => {\n  const { id, label, desc, mt, mb } = props;\n  return (\n    <div className={`flex justify-between ${mt} ${mb} items-center`}>\n      <label\n        htmlFor={id}\n        className=\"max-w-[80%] hover:cursor-pointer lg:max-w-[65%]\"\n      >\n        <h5 className=\"text-base font-bold text-navy-700 dark:text-white\">\n          {label}\n        </h5>\n        <p className={`text-base text-gray-600`}>{desc}</p>\n      </label>\n      <div>\n        <Switch id={id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SwitchField;\n"
    },
    {
        "path": "src/components/fixedPlugin/FixedPlugin.tsx",
        "content": "// Chakra Imports\n// Custom Icons\nimport React from \"react\";\n\nimport { RiMoonFill, RiSunFill } from \"react-icons/ri\";\nexport default function FixedPlugin(props: { [s: string]: any }) {\n  const { ...rest } = props;\n  const [darkmode, setDarkmode] = React.useState(\n    document.body.classList.contains(\"dark\")\n  );\n\n  return (\n    <button\n      className=\"border-px fixed bottom-[30px] right-[35px] !z-[99] flex h-[60px] w-[60px] items-center justify-center rounded-full border-[#6a53ff] bg-gradient-to-br from-brandLinear to-blueSecondary p-0\"\n      onClick={() => {\n        if (darkmode) {\n          document.body.classList.remove(\"dark\");\n          setDarkmode(false);\n        } else {\n          document.body.classList.add(\"dark\");\n          setDarkmode(true);\n        }\n      }}\n      {...rest}\n    >\n      {/* // left={document.documentElement.dir === \"rtl\" ? \"35px\" : \"\"}\n      // right={document.documentElement.dir === \"rtl\" ? \"\" : \"35px\"} */}\n      <div className=\"cursor-pointer text-gray-600\">\n        {darkmode ? (\n          <RiSunFill className=\"h-4 w-4 text-white\" />\n        ) : (\n          <RiMoonFill className=\"h-4 w-4 text-white\" />\n        )}\n      </div>\n    </button>\n  );\n}\n"
    },
    {
        "path": "src/components/footer/Footer.tsx",
        "content": "const Footer = () => {\n  return (\n    <div className=\"flex w-full flex-col items-center justify-between px-1 pb-8 pt-3 lg:px-8 xl:flex-row\">\n      <h5 className=\"mb-4 text-center text-sm font-medium text-gray-600 sm:!mb-0 md:text-lg\">\n        <p className=\"mb-4 text-center text-sm text-gray-600 sm:!mb-0 md:text-base\">\n          \u00a9{new Date().getFullYear()} \n        </p>\n      </h5>\n      <div>\n        <ul className=\"flex flex-wrap items-center gap-3 sm:flex-nowrap md:gap-10\">\n          <li>\n            <a\n              target=\"blank\"\n              href=\"\"\n              className=\"text-base font-medium text-gray-600 hover:text-gray-600\"\n            >\n              Support\n            </a>\n          </li>\n          <li>\n            <a\n              target=\"blank\"\n              href=\"\"\n              className=\"text-base font-medium text-gray-600 hover:text-gray-600\"\n            >\n              License\n            </a>\n          </li>\n          <li>\n            <a\n              target=\"blank\"\n              href=\"\"\n              className=\"text-base font-medium text-gray-600 hover:text-gray-600\"\n            >\n              Terms of Use\n            </a>\n          </li>\n          <li>\n            <a\n              target=\"blank\"\n              href=\"\"\n              className=\"text-base font-medium text-gray-600 hover:text-gray-600\"\n            >\n              Blog\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n"
    },
    {
        "path": "src/components/footer/FooterAuthDefault.tsx",
        "content": "/*eslint-disable*/\nimport React from \"react\";\nexport default function Footer() {\n  return (\n    <div className=\"z-[5] mx-auto flex w-full max-w-screen-sm flex-col items-center justify-between px-[20px] pb-4 lg:mb-6 lg:max-w-[100%] lg:flex-row xl:mb-2 xl:w-[1310px] xl:pb-6\">\n      <p className=\"mb-6 text-center text-sm text-gray-600 md:text-base lg:mb-0\">\n        \u00a9{1900 + new Date().getFullYear()} \n      </p>\n      <ul className=\"flex flex-wrap items-center sm:flex-nowrap\">\n        <li className=\"mr-12\">\n          <a\n            target=\"blank\"\n            href=\"\"\n            className=\"text-sm text-gray-600 hover:text-gray-600 md:text-base lg:text-white lg:hover:text-white\"\n          >\n            Support\n          </a>\n        </li>\n        <li className=\"mr-12\">\n          <a\n            target=\"blank\"\n            href=\"\"\n            className=\"text-sm text-gray-600 hover:text-gray-600 md:text-base lg:text-white lg:hover:text-white\"\n          >\n            License\n          </a>\n        </li>\n        <li className=\"mr-12\">\n          <a\n            target=\"blank\"\n            href=\"\"\n            className=\"text-sm text-gray-600 hover:text-gray-600 md:text-base lg:text-white lg:hover:text-white\"\n          >\n            Terms of Use\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"blank\"\n            href=\"\"\n            className=\"text-sm text-gray-600 hover:text-gray-600 md:text-base lg:text-white lg:hover:text-white\"\n          >\n            Blog\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n"
    },
    {
        "path": "src/components/icons/ClockIcon.tsx",
        "content": "const ClockIcon = () => {\n  return (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M10 0C4.5 0 0 4.5 0 10C0 15.5 4.5 20 10 20C15.5 20 20 15.5 20 10C20 4.5 15.5 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18ZM10.5 5H9V11L14.2 14.2L15 12.9L10.5 10.2V5Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport default ClockIcon;\n"
    },
    {
        "path": "src/components/icons/ClockIcon1.tsx",
        "content": "const ClockIcon1 = () => {\n  return (\n    <svg\n      width=\"19\"\n      height=\"21\"\n      viewBox=\"0 0 19 21\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.0698 0.0100098H6.06982V2.01001H12.0698V0.0100098ZM8.06982 13.01H10.0698V7.01001H8.06982V13.01ZM16.0998 6.39001L17.5198 4.97001C17.0898 4.46001 16.6198 3.98001 16.1098 3.56001L14.6898 4.98001C13.1398 3.74001 11.1898 3.00001 9.06982 3.00001C4.09982 3.00001 0.0698242 7.03001 0.0698242 12C0.0698242 16.97 4.08982 21 9.06982 21C14.0498 21 18.0698 16.97 18.0698 12C18.0698 9.89001 17.3298 7.94001 16.0998 6.39001ZM9.06982 19.01C5.19982 19.01 2.06982 15.88 2.06982 12.01C2.06982 8.14001 5.19982 5.01001 9.06982 5.01001C12.9398 5.01001 16.0698 8.14001 16.0698 12.01C16.0698 15.88 12.9398 19.01 9.06982 19.01Z\"\n        fill=\"#01B574\"\n      />\n    </svg>\n  );\n};\n\nexport default ClockIcon1;\n"
    },
    {
        "path": "src/components/icons/CloseIcon.tsx",
        "content": "const CloseIcon = () => {\n  return <div>hello</div>;\n};\n\nexport default CloseIcon;\n"
    },
    {
        "path": "src/components/icons/DarkmodeIcon.tsx",
        "content": "const DarkmodeIcon = () => {\n  return (\n    <span className=\"cursor-pointer\">\n      <svg\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M9.95703 18C12.733 18 15.2684 16.737 16.9481 14.6675C17.1966 14.3613 16.9256 13.9141 16.5416 13.9872C12.1751 14.8188 8.16522 11.4709 8.16522 7.06303C8.16522 4.52398 9.52444 2.18914 11.7335 0.931992C12.074 0.738211 11.9884 0.221941 11.6015 0.150469C11.059 0.0504468 10.5086 8.21369e-05 9.95703 0C4.98914 0 0.957031 4.02578 0.957031 9C0.957031 13.9679 4.98281 18 9.95703 18Z\"\n          fill=\"#A3AED0\"\n        />\n      </svg>\n    </span>\n  );\n};\n\nexport default DarkmodeIcon;\n"
    },
    {
        "path": "src/components/icons/DashIcon.tsx",
        "content": "const DashIcon = () => {\n  return (\n    <svg\n      width=\"20\"\n      height=\"17\"\n      viewBox=\"0 0 20 17\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M8.0001 16V11H12.0001V16C12.0001 16.55 12.4501 17 13.0001 17H16.0001C16.5501 17 17.0001 16.55 17.0001 16V8.99997H18.7001C19.1601 8.99997 19.3801 8.42997 19.0301 8.12997L10.6701 0.599971C10.2901 0.259971 9.7101 0.259971 9.3301 0.599971L0.970098 8.12997C0.630098 8.42997 0.840098 8.99997 1.3001 8.99997H3.0001V16C3.0001 16.55 3.4501 17 4.0001 17H7.0001C7.5501 17 8.0001 16.55 8.0001 16Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default DashIcon;\n"
    },
    {
        "path": "src/components/icons/DotIcon.tsx",
        "content": "const DotIcon = () => {\n  return (\n    <svg\n      width=\"4\"\n      height=\"16\"\n      viewBox=\"0 0 4 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2 4C3.1 4 4 3.1 4 2C4 0.9 3.1 0 2 0C0.9 0 0 0.9 0 2C0 3.1 0.9 4 2 4ZM2 6C0.9 6 0 6.9 0 8C0 9.1 0.9 10 2 10C3.1 10 4 9.1 4 8C4 6.9 3.1 6 2 6ZM2 12C0.9 12 0 12.9 0 14C0 15.1 0.9 16 2 16C3.1 16 4 15.1 4 14C4 12.9 3.1 12 2 12Z\"\n        fill=\"#A3AED0\"\n      />\n    </svg>\n  );\n};\n\nexport default DotIcon;\n"
    },
    {
        "path": "src/components/icons/KanbanIcon.tsx",
        "content": "const KanbanIcon = () => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M1 10H7C7.55 10 8 9.55 8 9V1C8 0.45 7.55 0 7 0H1C0.45 0 0 0.45 0 1V9C0 9.55 0.45 10 1 10ZM1 18H7C7.55 18 8 17.55 8 17V13C8 12.45 7.55 12 7 12H1C0.45 12 0 12.45 0 13V17C0 17.55 0.45 18 1 18ZM11 18H17C17.55 18 18 17.55 18 17V9C18 8.45 17.55 8 17 8H11C10.45 8 10 8.45 10 9V17C10 17.55 10.45 18 11 18ZM10 1V5C10 5.55 10.45 6 11 6H17C17.55 6 18 5.55 18 5V1C18 0.45 17.55 0 17 0H11C10.45 0 10 0.45 10 1Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default KanbanIcon;\n"
    },
    {
        "path": "src/components/icons/MarketIcon.tsx",
        "content": "const MarketIcon = () => {\n  return (\n    <svg\n      width=\"21\"\n      height=\"20\"\n      viewBox=\"0 0 21 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.55 11C15.3 11 15.96 10.59 16.3 9.97L19.88 3.48C20.25 2.82 19.77 2 19.01 2H4.21L3.27 0H0V2H2L5.6 9.59L4.25 12.03C3.52 13.37 4.48 15 6 15H18V13H6L7.1 11H14.55ZM5.16 4H17.31L14.55 9H7.53L5.16 4ZM6 16C4.9 16 4.01 16.9 4.01 18C4.01 19.1 4.9 20 6 20C7.1 20 8 19.1 8 18C8 16.9 7.1 16 6 16ZM16 16C14.9 16 14.01 16.9 14.01 18C14.01 19.1 14.9 20 16 20C17.1 20 18 19.1 18 18C18 16.9 17.1 16 16 16Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default MarketIcon;\n"
    },
    {
        "path": "src/components/icons/NotificationIcon.tsx",
        "content": "const NotificationIcon = () => {\n  return (\n    <span className=\"cursor-pointer\">\n      <svg\n        width=\"12\"\n        height=\"18\"\n        viewBox=\"0 0 16 20\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/ 2000/svg\"\n      >\n        <path\n          d=\"M15.2901 15.29L14.0001 14V9C14.0001 5.93 12.3601 3.36 9.50005 2.68V2C9.50005 1.17 8.83005 0.5 8.00005 0.5C7.17005 0.5 6.50005 1.17 6.50005 2V2.68C3.63005 3.36 2.00005 5.92 2.00005 9V14L0.710051 15.29C0.0800515 15.92 0.520051 17 1.41005 17H14.5801C15.4801 17 15.9201 15.92 15.2901 15.29ZM12.0001 15H4.00005V9C4.00005 6.52 5.51005 4.5 8.00005 4.5C10.4901 4.5 12.0001 6.52 12.0001 9V15ZM8.00005 20C9.10005 20 10.0001 19.1 10.0001 18H6.00005C6.00005 19.1 6.89005 20 8.00005 20Z\"\n          fill=\"#A3AED0\"\n        />\n      </svg>\n    </span>\n  );\n};\n\nexport default NotificationIcon;\n"
    },
    {
        "path": "src/components/icons/ProfileIcon.tsx",
        "content": "const ProfileIcon = () => {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M8 8C10.21 8 12 6.21 12 4C12 1.79 10.21 0 8 0C5.79 0 4 1.79 4 4C4 6.21 5.79 8 8 8ZM8 10C5.33 10 0 11.34 0 14V15C0 15.55 0.45 16 1 16H15C15.55 16 16 15.55 16 15V14C16 11.34 10.67 10 8 10Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default ProfileIcon;\n"
    },
    {
        "path": "src/components/icons/SearchIcon.tsx",
        "content": "const SearchIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"mx-3 my-[12px] h-5 w-5 cursor-pointer text-navy-700\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"2\"\n        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n      />\n    </svg>\n  );\n};\n\nexport default SearchIcon;\n"
    },
    {
        "path": "src/components/icons/SignIn.tsx",
        "content": "const SignIn = () => {\n  return (\n    <svg\n      width=\"16\"\n      height=\"21\"\n      viewBox=\"0 0 16 21\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14 7H13V5C13 2.24 10.76 0 8 0C5.24 0 3 2.24 3 5V7H2C0.9 7 0 7.9 0 9V19C0 20.1 0.9 21 2 21H14C15.1 21 16 20.1 16 19V9C16 7.9 15.1 7 14 7ZM8 16C6.9 16 6 15.1 6 14C6 12.9 6.9 12 8 12C9.1 12 10 12.9 10 14C10 15.1 9.1 16 8 16ZM5 7V5C5 3.34 6.34 2 8 2C9.66 2 11 3.34 11 5V7H5Z\"\n        fill=\"#A3AED0\"\n      />\n    </svg>\n  );\n};\n\nexport default SignIn;\n"
    },
    {
        "path": "src/components/icons/TablesIcon.tsx",
        "content": "const TablesIcon = () => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.46683 5.73334H2.70016C3.5985 5.73334 4.3335 6.46834 4.3335 7.36668V15.5333C4.3335 16.4317 3.5985 17.1667 2.70016 17.1667H2.46683C1.5685 17.1667 0.833496 16.4317 0.833496 15.5333V7.36668C0.833496 6.46834 1.5685 5.73334 2.46683 5.73334ZM9.00016 0.833344C9.8985 0.833344 10.6335 1.56834 10.6335 2.46668V15.5333C10.6335 16.4317 9.8985 17.1667 9.00016 17.1667C8.10183 17.1667 7.36683 16.4317 7.36683 15.5333V2.46668C7.36683 1.56834 8.10183 0.833344 9.00016 0.833344ZM15.5335 10.1667C16.4318 10.1667 17.1668 10.9017 17.1668 11.8V15.5333C17.1668 16.4317 16.4318 17.1667 15.5335 17.1667C14.6352 17.1667 13.9002 16.4317 13.9002 15.5333V11.8C13.9002 10.9017 14.6352 10.1667 15.5335 10.1667Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default TablesIcon;\n"
    },
    {
        "path": "src/components/icons/ThemsIcon.tsx",
        "content": "const ThemsIcon = () => {\n  return (\n    <span className=\"cursor-pointer\">\n      <svg\n        width=\"16\"\n        height=\"20\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g clip-path=\"url(#clip0_201_2879)\">\n          <path\n            d=\"M11 7H13V9H11V7ZM12 17C12.55 17 13 16.55 13 16V12C13 11.45 12.55 11 12 11C11.45 11 11 11.45 11 12V16C11 16.55 11.45 17 12 17ZM12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z\"\n            fill=\"#A3AED0\"\n          />\n        </g>\n        <defs>\n          <clipPath id=\"clip0_201_2879\">\n            <rect width=\"24\" height=\"24\" fill=\"white\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </span>\n  );\n};\n\nexport default ThemsIcon;\n"
    },
    {
        "path": "src/components/icons/VideoIcon.tsx",
        "content": "const VideoIcon = () => {\n  return (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M11.0498 7.78999L7.9998 5.49999V14.5L11.0498 12.21L13.9998 9.99999L11.0498 7.78999ZM11.0498 7.78999L7.9998 5.49999V14.5L11.0498 12.21L13.9998 9.99999L11.0498 7.78999ZM11.0498 7.78999L7.9998 5.49999V14.5L11.0498 12.21L13.9998 9.99999L11.0498 7.78999ZM8.9998 2.06999V0.0499878C6.9898 0.249988 5.1598 1.04999 3.6798 2.25999L5.0998 3.68999C6.20981 2.82999 7.5398 2.24999 8.9998 2.06999ZM3.6898 5.09999L2.2598 3.67999C1.0498 5.15999 0.249805 6.98999 0.0498047 8.99999H2.0698C2.2498 7.53999 2.8298 6.20999 3.6898 5.09999ZM2.0698 11H0.0498047C0.249805 13.01 1.0498 14.84 2.2598 16.32L3.6898 14.89C2.8298 13.79 2.2498 12.46 2.0698 11ZM3.6798 17.74C5.1598 18.95 6.9998 19.75 8.9998 19.95V17.93C7.5398 17.75 6.20981 17.17 5.0998 16.31L3.6798 17.74ZM19.9998 9.99999C19.9998 15.16 16.0798 19.42 11.0498 19.95V17.93C14.9698 17.41 17.9998 14.05 17.9998 9.99999C17.9998 5.94999 14.9698 2.58999 11.0498 2.06999V0.0499878C16.0798 0.579988 19.9998 4.83999 19.9998 9.99999Z\"\n        fill=\"#EE5D50\"\n      />\n    </svg>\n  );\n};\n\nexport default VideoIcon;\n"
    },
    {
        "path": "src/components/icons/WidgetIcon/ChartIcon.tsx",
        "content": "const ChartIcon = () => {\n  return (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.28393 6.31358H2.55761C3.61128 6.31358 4.47337 7.17567 4.47337 8.22934V17.8082C4.47337 18.8618 3.61128 19.7239 2.55761 19.7239H2.28393C1.23026 19.7239 0.368164 18.8618 0.368164 17.8082V8.22934C0.368164 7.17567 1.23026 6.31358 2.28393 6.31358V6.31358ZM9.94698 0.566284C11.0007 0.566284 11.8627 1.42838 11.8627 2.48205V17.8082C11.8627 18.8618 11.0007 19.7239 9.94698 19.7239C8.89331 19.7239 8.03122 18.8618 8.03122 17.8082V2.48205C8.03122 1.42838 8.89331 0.566284 9.94698 0.566284ZM17.61 11.5135C18.6637 11.5135 19.5258 12.3756 19.5258 13.4293V17.8082C19.5258 18.8618 18.6637 19.7239 17.61 19.7239C16.5564 19.7239 15.6943 18.8618 15.6943 17.8082V13.4293C15.6943 12.3756 16.5564 11.5135 17.61 11.5135V11.5135Z\"\n        fill=\"#4318FF\"\n      />\n    </svg>\n  );\n};\n\nexport default ChartIcon;\n"
    },
    {
        "path": "src/components/icons/WidgetIcon/DollarIcon.tsx",
        "content": "const DollarIcon = () => {\n  return (\n    <svg\n      width=\"15\"\n      height=\"26\"\n      viewBox=\"0 0 15 26\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7.67343 11.6398C4.56716 10.8325 3.56822 9.99777 3.56822 8.69778C3.56822 7.20622 4.95031 6.16624 7.26291 6.16624C9.20604 6.16624 10.1776 6.90518 10.5334 8.082C10.6976 8.62936 11.1492 9.03988 11.7239 9.03988H12.1344C13.0376 9.03988 13.6807 8.15042 13.366 7.30201C12.7913 5.6873 11.4502 4.34626 9.31552 3.82627V2.88207C9.31552 1.7463 8.39869 0.829468 7.26291 0.829468C6.12714 0.829468 5.21031 1.7463 5.21031 2.88207V3.78522C2.55561 4.35995 0.420898 6.08414 0.420898 8.72515C0.420898 11.8862 3.03455 13.4598 6.85239 14.3767C10.2734 15.1977 10.9576 16.4019 10.9576 17.6745C10.9576 18.6187 10.2871 20.1239 7.26291 20.1239C5.00505 20.1239 3.84191 19.3166 3.39033 18.1671C3.18507 17.6335 2.71981 17.2503 2.15877 17.2503H1.77562C0.858787 17.2503 0.215638 18.1808 0.557739 19.0292C1.33773 20.9313 3.1577 22.0534 5.21031 22.4913V23.4081C5.21031 24.5439 6.12714 25.4607 7.26291 25.4607C8.39869 25.4607 9.31552 24.5439 9.31552 23.4081V22.5187C11.9839 22.0123 14.1049 20.466 14.1049 17.6608C14.1049 13.7746 10.7797 12.4472 7.67343 11.6398Z\"\n        fill=\"#4318FF\"\n      />\n    </svg>\n  );\n};\n\nexport default DollarIcon;\n"
    },
    {
        "path": "src/components/icons/WidgetIcon/PDFIcon.tsx",
        "content": "const PDFIcon = () => {\n  return (\n    <svg\n      width=\"21\"\n      height=\"24\"\n      viewBox=\"0 0 21 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.2503 0.083313H2.33366C1.14199 0.083313 0.166992 1.05831 0.166992 2.24998V16.3333C0.166992 16.9291 0.654492 17.4166 1.25033 17.4166C1.84616 17.4166 2.33366 16.9291 2.33366 16.3333V3.33331C2.33366 2.73748 2.82116 2.24998 3.41699 2.24998H14.2503C14.8462 2.24998 15.3337 1.76248 15.3337 1.16665C15.3337 0.570813 14.8462 0.083313 14.2503 0.083313ZM14.8895 5.05581L20.122 10.2883C20.5228 10.6891 20.7503 11.2416 20.7503 11.8158V21.75C20.7503 22.9416 19.7753 23.9166 18.5837 23.9166H6.65616C5.46449 23.9166 4.50033 22.9416 4.50033 21.75L4.51116 6.58331C4.51116 5.39165 5.47533 4.41665 6.66699 4.41665H13.3512C13.9253 4.41665 14.4778 4.64415 14.8895 5.05581ZM14.2503 12H19.1253L13.167 6.04165V10.9166C13.167 11.5125 13.6545 12 14.2503 12Z\"\n        fill=\"#4318FF\"\n      />\n    </svg>\n  );\n};\n\nexport default PDFIcon;\n"
    },
    {
        "path": "src/components/navbar/RTL.tsx",
        "content": "import React from \"react\";\nimport Dropdown from \"@/components/dropdown\";\nimport { FiAlignJustify } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport navbarimage from \"assets/img/layout/Navbar.png\";\nimport { BsArrowBarUp } from \"react-icons/bs\";\nimport { FiSearch } from \"react-icons/fi\";\nimport { RiMoonFill, RiSunFill } from \"react-icons/ri\";\nimport {\n  IoMdNotificationsOutline,\n  IoMdInformationCircleOutline,\n} from \"react-icons/io\";\nimport avatar from \"assets/img/avatars/avatar4.png\";\n\nconst Navbar = (props: {\n  onOpenSidenav: () => void;\n  brandText: string;\n  secondary?: boolean | string;\n}) => {\n  const { onOpenSidenav, brandText } = props;\n  const [darkmode, setDarkmode] = React.useState(false);\n\n  return (\n    <nav className=\"sticky top-4 z-40 flex flex-row flex-wrap items-center justify-between rounded-xl bg-white/10 p-2 backdrop-blur-xl dark:bg-[#0b14374d]\">\n      <div className=\"ms-[6px]\">\n        <div className=\"h-6 w-[224px] pt-1\">\n          <a\n            className=\"text-sm font-normal text-navy-700 hover:underline dark:text-white dark:hover:text-white\"\n            href=\" \"\n          >\n            Pages\n            <span className=\"mx-1 text-sm text-navy-700 hover:text-navy-700 dark:text-white\">\n              {\" \"}\n              /{\" \"}\n            </span>\n          </a>\n          <Link\n            className=\"text-sm font-normal capitalize text-navy-700 hover:underline dark:text-white dark:hover:text-white\"\n            to=\"#\"\n          >\n            {brandText}\n          </Link>\n        </div>\n        <p className=\"shrink text-[33px] capitalize text-navy-700 dark:text-white\">\n          <Link\n            to=\"#\"\n            className=\"font-bold capitalize hover:text-navy-700 dark:hover:text-white\"\n          >\n            {brandText}\n          </Link>\n        </p>\n      </div>\n\n      <div className=\"relative mt-[3px] flex h-[61px] w-[355px] flex-grow items-center justify-around gap-2 rounded-full bg-white px-2 py-2 shadow-xl shadow-shadow-500 dark:!bg-navy-800 dark:shadow-none md:w-[365px] md:flex-grow-0 md:gap-1 xl:w-[365px] xl:gap-2\">\n        <div className=\"flex h-full items-center rounded-full bg-lightPrimary text-navy-700 dark:bg-navy-900 dark:text-white xl:w-[225px]\">\n          <p className=\"text-xl pe-2 ps-3\">\n            <FiSearch className=\"h-4 w-4 text-gray-400 dark:text-white\" />\n          </p>\n          <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            className=\"block h-full w-full rounded-full bg-lightPrimary text-sm font-medium text-navy-700 outline-none placeholder:!text-gray-400 dark:bg-navy-900 dark:text-white dark:placeholder:!text-white sm:w-fit\"\n          />\n        </div>\n        <span\n          className=\"flex cursor-pointer text-xl text-gray-600 dark:text-white xl:hidden\"\n          onClick={onOpenSidenav}\n        >\n          <FiAlignJustify className=\"h-5 w-5\" />\n        </span>\n        {/* start Notification */}\n        <Dropdown\n          button={\n            <p className=\"cursor-pointer\">\n              <IoMdNotificationsOutline className=\"h-4 w-4 text-gray-600 dark:text-white\" />\n            </p>\n          }\n          animation=\"origin-[65%_0%] md:origin-top-start transition-all duration-300 ease-in-out\"\n          children={\n            <div className=\"flex w-[360px] flex-col gap-3 rounded-[20px] bg-white p-4 shadow-xl shadow-shadow-500 dark:!bg-navy-700 dark:text-white dark:shadow-none sm:w-[460px]\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"text-base font-bold text-navy-700 dark:text-white\">\n                  Notification\n                </p>\n                <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n                  Mark all read\n                </p>\n              </div>\n\n              <button className=\"flex w-full items-center\">\n                <div className=\"flex h-full w-[85px] items-center justify-center rounded-xl bg-gradient-to-b from-brandLinear to-brand-500 py-4 text-2xl text-white\">\n                  <BsArrowBarUp />\n                </div>\n                <div className=\"flex h-full w-full flex-col justify-center rounded-lg px-1 text-sm ms-2\">\n                  <p className=\"mb-1 text-base font-bold text-gray-900 text-start dark:text-white\">\n                    New Update: Horizon UI Dashboard PRO\n                  </p>\n                  <p className=\"font-base text-xs text-gray-900 text-start dark:text-white\">\n                    A new update for your downloaded item is available!\n                  </p>\n                </div>\n              </button>\n\n              <button className=\"flex w-full items-center\">\n                <div className=\"flex h-full w-[85px] items-center justify-center rounded-xl bg-gradient-to-b from-brandLinear to-brand-500 py-4 text-2xl text-white\">\n                  <BsArrowBarUp />\n                </div>\n                <div className=\"flex h-full w-full flex-col justify-center rounded-lg px-1 text-sm ms-2\">\n                  <p className=\"mb-1 text-base font-bold text-gray-900 text-start dark:text-white\">\n                    New Update: Horizon UI Dashboard PRO\n                  </p>\n                  <p className=\"font-base text-xs text-gray-900 text-start dark:text-white\">\n                    A new update for your downloaded item is available!\n                  </p>\n                </div>\n              </button>\n            </div>\n          }\n          classNames={\"py-2 top-4 -start-[230px] md:-start-[440px] w-max\"}\n        />\n        {/* start Horizon PRO */}\n        <Dropdown\n          button={\n            <p className=\"cursor-pointer\">\n              <IoMdInformationCircleOutline className=\"h-4 w-4 text-gray-600 dark:text-white\" />\n            </p>\n          }\n          children={\n            <div className=\"flex w-[350px] flex-col gap-2 rounded-[20px] bg-white p-4 shadow-xl shadow-shadow-500 dark:!bg-navy-700 dark:text-white dark:shadow-none\">\n              <div\n                style={{\n                  backgroundImage: `url(${navbarimage})`,\n                  backgroundRepeat: \"no-repeat\",\n                  backgroundSize: \"cover\",\n                }}\n                className=\"mb-2 aspect-video w-full rounded-lg\"\n              />\n              <a\n                target=\"blank\"\n                href=\"https://horizon-ui.com/pro?ref=live-free-tailwind-react\"\n                className=\"px-full linear flex cursor-pointer items-center justify-center rounded-xl bg-brand-500 py-[11px] font-bold text-white transition duration-200 hover:bg-brand-600 hover:text-white active:bg-brand-700 dark:bg-brand-400 dark:hover:bg-brand-300 dark:active:bg-brand-200\"\n              >\n                Buy Horizon UI PRO\n              </a>\n              <a\n                target=\"blank\"\n                href=\"https://horizon-ui.com/docs-tailwind/docs/react/installation?ref=live-free-tailwind-react\"\n                className=\"px-full linear flex cursor-pointer items-center justify-center rounded-xl border py-[11px] font-bold text-navy-700 transition duration-200 hover:bg-gray-200 hover:text-navy-700 dark:!border-white/10 dark:text-white dark:hover:bg-white/20 dark:hover:text-white dark:active:bg-white/10\"\n              >\n                See Documentation\n              </a>\n              <a\n                target=\"blank\"\n                href=\"https://horizon-ui.com/?ref=live-free-tailwind-react\"\n                className=\"hover:bg-black px-full linear flex cursor-pointer items-center justify-center rounded-xl py-[11px] font-bold text-navy-700 transition duration-200 hover:text-navy-700 dark:text-white dark:hover:text-white\"\n              >\n                Try Horizon Free\n              </a>\n            </div>\n          }\n          classNames={\"py-2 top-6 -start-[250px] md:-start-[330px] w-max\"}\n          animation=\"origin-[75%_0%] md:origin-top-start transition-all duration-300 ease-in-out\"\n        />\n        <div\n          className=\"cursor-pointer text-gray-600\"\n          onClick={() => {\n            if (darkmode) {\n              document.body.classList.remove(\"dark\");\n              setDarkmode(false);\n            } else {\n              document.body.classList.add(\"dark\");\n              setDarkmode(true);\n            }\n          }}\n        >\n          {darkmode ? (\n            <RiSunFill className=\"h-4 w-4 text-gray-600 dark:text-white\" />\n          ) : (\n            <RiMoonFill className=\"h-4 w-4 text-gray-600 dark:text-white\" />\n          )}\n        </div>\n        {/* Profile & Dropdown */}\n        <Dropdown\n          button={\n            <img\n              className=\"h-10 w-10 rounded-full\"\n              src={avatar}\n              alt=\"Elon Musk\"\n            />\n          }\n          children={\n            <div className=\"flex h-48 w-56 flex-col justify-start rounded-[20px] bg-white bg-cover bg-no-repeat shadow-xl shadow-shadow-500 dark:!bg-navy-700 dark:text-white dark:shadow-none\">\n              <div className=\"mt-3 ms-4\">\n                <div className=\"flex items-center gap-2\">\n                  <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n                    \ud83d\udc4b Hey, Adela\n                  </p>{\" \"}\n                </div>\n              </div>\n              <div className=\"mt-3 h-px w-full bg-gray-200 dark:bg-white/20 \" />\n\n              <div className=\"mt-3 flex flex-col ms-4\">\n                <a\n                  href=\" \"\n                  className=\"text-sm text-gray-800 dark:text-white hover:dark:text-white\"\n                >\n                  Profile Settings\n                </a>\n                <a\n                  href=\" \"\n                  className=\"mt-3 text-sm text-gray-800 dark:text-white hover:dark:text-white\"\n                >\n                  Newsletter Settings\n                </a>\n                <a\n                  href=\" \"\n                  className=\"mt-3 text-sm font-medium text-red-500 hover:text-red-500\"\n                >\n                  Log Out\n                </a>\n              </div>\n            </div>\n          }\n          classNames={\"py-2 top-8 -start-[180px] w-max\"}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"
    },
    {
        "path": "src/components/navbar/index.tsx",
        "content": "import React from \"react\";\nimport Dropdown from \"@/components/dropdown\";\nimport { FiAlignJustify } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport { RiMoonFill, RiSunFill } from \"react-icons/ri\";\n\n\nconst Navbar = (props: {\n  onOpenSidenav: () => void;\n  brandText: string;\n  secondary?: boolean | string;\n}) => {\n  const { onOpenSidenav, brandText } = props;\n  const [darkmode, setDarkmode] = React.useState(false);\n\n  return (\n    <nav className=\"sticky top-4 z-40 flex flex-row flex-wrap items-center justify-between rounded-xl bg-white/10 p-2 backdrop-blur-xl dark:bg-[#0b14374d]\">\n      <div className=\"ml-[6px]\">\n        <div className=\"h-6 w-[224px] pt-1\">\n          <a\n            className=\"text-sm font-normal text-navy-700 hover:underline dark:text-white dark:hover:text-white\"\n            href=\" \"\n          >\n            Pages\n            <span className=\"mx-1 text-sm text-navy-700 hover:text-navy-700 dark:text-white\">\n              {\" \"}\n              /{\" \"}\n            </span>\n          </a>\n          <Link\n            className=\"text-sm font-normal capitalize text-navy-700 hover:underline dark:text-white dark:hover:text-white\"\n            to=\"#\"\n          >\n            {brandText}\n          </Link>\n        </div>\n        <p className=\"shrink text-[33px] capitalize text-navy-700 dark:text-white\">\n          <Link\n            to=\"#\"\n            className=\"font-bold capitalize hover:text-navy-700 dark:hover:text-white\"\n          >\n            {brandText}\n          </Link>\n        </p>\n      </div>\n\n      <div className=\"\">\n        <div\n          className=\"cursor-pointer text-gray-600\"\n\n          onClick={() => {\n            if (darkmode) {\n              document.body.classList.remove(\"dark\");\n              setDarkmode(false);\n            } else {\n              document.body.classList.add(\"dark\");\n              setDarkmode(true);\n            }\n          }}\n        >\n          {darkmode ? (\n            <RiSunFill className=\"h-4 w-4 text-gray-600 dark:text-white\" />\n          ) : (\n            <RiMoonFill className=\"h-4 w-4 text-gray-600 dark:text-white\" />\n          )}\n        </div>\n\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"
    },
    {
        "path": "src/components/progress/index.tsx",
        "content": "const Progress = (props: {\n  value: number;\n  color?:\n    | \"red\"\n    | \"blue\"\n    | \"green\"\n    | \"yellow\"\n    | \"orange\"\n    | \"teal\"\n    | \"navy\"\n    | \"lime\"\n    | \"cyan\"\n    | \"pink\"\n    | \"purple\"\n    | \"amber\"\n    | \"indigo\"\n    | \"gray\";\n  width?: string;\n}) => {\n  const { value, color, width } = props;\n  return (\n    <div\n      className={`h-2 ${\n        width ? width : \"w-full\"\n      } rounded-full bg-gray-200 dark:bg-navy-700`}\n    >\n      <div\n        className={`flex h-full items-center justify-center rounded-full ${\n          color === \"red\"\n            ? \"bg-red-500 dark:bg-red-400\"\n            : color === \"blue\"\n            ? \"bg-blue-500 dark:bg-blue-400\"\n            : color === \"green\"\n            ? \"bg-green-500 dark:bg-green-400\"\n            : color === \"yellow\"\n            ? \"bg-yellow-500 dark:bg-yellow-400\"\n            : color === \"orange\"\n            ? \"bg-orange-500 dark:bg-orange-400\"\n            : color === \"teal\"\n            ? \"bg-teal-500 dark:bg-teal-400\"\n            : color === \"navy\"\n            ? \"bg-navy-500 dark:bg-navy-400\"\n            : color === \"lime\"\n            ? \"bg-lime-500 dark:bg-lime-400\"\n            : color === \"cyan\"\n            ? \"bg-cyan-500 dark:bg-cyan-400\"\n            : color === \"pink\"\n            ? \"bg-pink-500 dark:bg-pink-400\"\n            : color === \"purple\"\n            ? \"bg-purple-500 dark:bg-purple-400\"\n            : color === \"amber\"\n            ? \"bg-amber-500 dark:bg-amber-400\"\n            : color === \"indigo\"\n            ? \"bg-indigo-500 dark:bg-indigo-400\"\n            : color === \"gray\"\n            ? \"bg-gray-500 dark:bg-gray-400\"\n            : \"bg-brand-500 dark:bg-brand-400\"\n        }`}\n        style={{ width: `${value}%` }}\n      />\n    </div>\n  );\n};\n\nexport default Progress;\n"
    },
    {
        "path": "src/components/sidebar/RTL.tsx",
        "content": "/* eslint-disable */\n\nimport { HiX } from \"react-icons/hi\";\nimport Links from \"./components/Links\";\n\nimport SidebarCard from \"@/components/sidebar/components/SidebarCard\";\nimport routes from \"@/routes\";\n\nconst Sidebar = (props: {\n  open: boolean;\n  onClose: React.MouseEventHandler<HTMLSpanElement>;\n}) => {\n  const { open, onClose } = props;\n  return (\n    <div\n      className={`sm:none duration-175 linear fixed !z-50 flex min-h-full flex-col bg-white pb-10 shadow-2xl shadow-white/5 transition-all dark:!bg-navy-800 dark:text-white md:!z-50 lg:!z-50 xl:!z-0 ${\n        open ? \"translate-x-0\" : \"-translate-x-96\"\n      }`}\n    >\n      <span\n        className=\"absolute top-4 block cursor-pointer end-4 xl:hidden\"\n        onClick={onClose}\n      >\n        <HiX />\n      </span>\n\n      <div className={`mx-[56px] mt-[50px] flex items-center`}>\n        <div className=\"mt-1 h-2.5 font-poppins text-[26px] font-bold uppercase text-navy-700 ms-1 dark:text-white\">\n          Horizon <span className=\"font-medium\">FREE</span>\n        </div>\n      </div>\n      <div className=\"mt-[58px] mb-7 h-px bg-gray-300 dark:bg-white/30\" />\n      {/* Nav item */}\n\n      <ul className=\"mb-auto pt-1\">\n        <Links routes={routes} />\n      </ul>\n\n      {/* Free Horizon Card */}\n      <div className=\"flex justify-center\">\n        <SidebarCard />\n      </div>\n\n      {/* Nav item end */}\n    </div>\n  );\n};\n\nexport default Sidebar;\n"
    },
    {
        "path": "src/components/sidebar/components/Links.tsx",
        "content": "/* eslint-disable */\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport DashIcon from \"@/components/icons/DashIcon\";\n// chakra imports\n\nexport const SidebarLinks = (props: { routes: RoutesType[] }): JSX.Element => {\n  // Chakra color mode\n  let location = useLocation();\n\n  const { routes } = props;\n\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName: string) => {\n    return location.pathname.includes(routeName);\n  };\n\n  const createLinks = (routes: RoutesType[]) => {\n    return routes.map((route, index) => {\n      if (\n        route.layout === \"/admin\" ||\n        route.layout === \"/auth\" ||\n        route.layout === \"/rtl\"\n      ) {\n        return (\n          <Link key={index} to={route.layout + \"/\" + route.path}>\n            <div className=\"relative mb-3 flex hover:cursor-pointer\">\n              <li\n                className=\"my-[3px] flex cursor-pointer items-center px-8\"\n                key={index}\n              >\n                <span\n                  className={`${\n                    activeRoute(route.path) === true\n                      ? \"font-bold text-brand-500 dark:text-white\"\n                      : \"font-medium text-gray-600\"\n                  }`}\n                >\n                  {route.icon ? route.icon : <DashIcon />}{\" \"}\n                </span>\n                <p\n                  className={`leading-1 ml-4 flex ${\n                    activeRoute(route.path) === true\n                      ? \"font-bold text-navy-700 dark:text-white\"\n                      : \"font-medium text-gray-600\"\n                  }`}\n                >\n                  {route.name}\n                </p>\n              </li>\n              {activeRoute(route.path) ? (\n                <div className=\"absolute right-0 top-px h-9 w-1 rounded-lg bg-brand-500 dark:bg-brand-400\" />\n              ) : null}\n            </div>\n          </Link>\n        );\n      }\n    });\n  };\n  // BRAND\n  return <>{createLinks(routes)}</>;\n};\n\nexport default SidebarLinks;\n"
    },
    {
        "path": "src/components/sidebar/components/SidebarCard.tsx",
        "content": "const FreeCard = () => {\n  return (\n<></>\n  );\n};\n\nexport default FreeCard;\n"
    },
    {
        "path": "src/components/sidebar/componentsrtl/Links.tsx",
        "content": "/* eslint-disable */\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport DashIcon from \"@/components/icons/DashIcon\";\n// chakra imports\n\nexport function SidebarLinks(props: { routes: RoutesType[] }) {\n  // Chakra color mode\n  let location = useLocation();\n\n  const { routes } = props;\n\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName: string) => {\n    return location.pathname.includes(routeName);\n  };\n\n  const createLinks = (routes: RoutesType[]) => {\n    return routes.map((route, index) => {\n      if (\n        route.layout === \"/admin\" ||\n        route.layout === \"/auth\" ||\n        route.layout === \"/rtl\"\n      ) {\n        return (\n          <Link key={index} to={route.layout + \"/\" + route.path}>\n            <div className=\"relative mb-3 flex hover:cursor-pointer\">\n              <li\n                className=\"my-[3px] flex cursor-pointer items-center px-8\"\n                key={index}\n              >\n                <span\n                  className={`${\n                    activeRoute(route.path) === true\n                      ? \"font-bold text-brand-500 dark:text-white\"\n                      : \"font-medium text-gray-600\"\n                  }`}\n                >\n                  {route.icon ? route.icon : <DashIcon />}{\" \"}\n                </span>\n                <p\n                  className={`leading-1 flex ms-4 ${\n                    activeRoute(route.path) === true\n                      ? \"font-bold text-navy-700 dark:text-white\"\n                      : \"font-medium text-gray-600\"\n                  }`}\n                >\n                  {route.name}\n                </p>\n              </li>\n              {activeRoute(route.path) ? (\n                <div className=\"absolute top-px h-9 w-1 rounded-lg bg-brand-500 end-0 dark:bg-brand-400\" />\n              ) : null}\n            </div>\n          </Link>\n        );\n      }\n    });\n  };\n  // BRAND\n  return <>{createLinks(routes)}</>;\n}\n\nexport default SidebarLinks;\n"
    },
    {
        "path": "src/components/sidebar/componentsrtl/SidebarCard.tsx",
        "content": "const FreeCard = () => {\n  return (\n<></>\n  );\n};\n\nexport default FreeCard;\n"
    },
    {
        "path": "src/components/sidebar/index.tsx",
        "content": "/* eslint-disable */\n\nimport { HiX } from \"react-icons/hi\";\nimport Links from \"./components/Links\";\n\nimport SidebarCard from \"@/components/sidebar/componentsrtl/SidebarCard\";\nimport routes from \"@/routes\";\n\nconst Sidebar = (props: {\n  open: boolean;\n  onClose: React.MouseEventHandler<HTMLSpanElement>;\n}) => {\n  const { open, onClose } = props;\n  return (\n    <div\n      className={`sm:none duration-175 linear fixed !z-50 flex min-h-full flex-col bg-white pb-10 shadow-2xl shadow-white/5 transition-all dark:!bg-navy-800 dark:text-white md:!z-50 lg:!z-50 xl:!z-0 ${\n        open ? \"translate-x-0\" : \"-translate-x-96\"\n      }`}\n    >\n      <span\n        className=\"absolute top-4 right-4 block cursor-pointer xl:hidden\"\n        onClick={onClose}\n      >\n        <HiX />\n      </span>\n\n      <div className={`mx-[56px] mt-[50px] flex items-center`}>\n        <div className=\"font-medium mb-2 text-3xl\">\n          windows <span className=\"mt-1  h-2.5 font-poppins text-[26px] font-bold uppercase text-navy-700 dark:text-white\">GPT</span>\n        </div>\n      </div>\n      <div className=\"mt-[58px] mb-7 h-px bg-gray-300 dark:bg-white/30\" />\n      {/* Nav item */}\n\n      <ul className=\"mb-auto pt-1\">\n        <Links routes={routes} />\n      </ul>\n\n      {/* Free Horizon Card */}\n      <div className=\"flex justify-center\">\n        <SidebarCard />\n      </div>\n\n      {/* Nav item end */}\n    </div>\n  );\n};\n\nexport default Sidebar;\n"
    },
    {
        "path": "src/components/switch/index.tsx",
        "content": "const Switch = (props: {\n  extra?: string;\n  color?:\n    | \"red\"\n    | \"blue\"\n    | \"green\"\n    | \"yellow\"\n    | \"orange\"\n    | \"teal\"\n    | \"navy\"\n    | \"lime\"\n    | \"cyan\"\n    | \"pink\"\n    | \"purple\"\n    | \"amber\"\n    | \"indigo\"\n    | \"gray\";\n  [x: string]: any;\n}) => {\n  const { extra, color, ...rest } = props;\n  return (\n    <input\n      type=\"checkbox\"\n      className={`relative h-5 w-10 appearance-none rounded-[20px] bg-[#e0e5f2] outline-none transition duration-[0.5s] \n      before:absolute before:top-[50%] before:h-4 before:w-4 before:translate-x-[2px] before:translate-y-[-50%] before:rounded-[20px]\n      before:bg-white before:shadow-[0_2px_5px_rgba(0,_0,_0,_.2)] before:transition before:content-[\"\"]\n      checked:before:translate-x-[22px] hover:cursor-pointer\n      dark:bg-white/5 ${\n        color === \"red\"\n          ? \"checked:bg-red-500 dark:checked:bg-red-400\"\n          : color === \"blue\"\n          ? \"checked:bg-blue-500 dark:checked:bg-blue-400\"\n          : color === \"green\"\n          ? \"checked:bg-green-500 dark:checked:bg-green-400\"\n          : color === \"yellow\"\n          ? \"checked:bg-yellow-500 dark:checked:bg-yellow-400\"\n          : color === \"orange\"\n          ? \"checked:bg-orange-500 dark:checked:bg-orange-400\"\n          : color === \"teal\"\n          ? \"checked:bg-teal-500 dark:checked:bg-teal-400\"\n          : color === \"navy\"\n          ? \"checked:bg-navy-500 dark:checked:bg-navy-400\"\n          : color === \"lime\"\n          ? \"checked:bg-lime-500 dark:checked:bg-lime-400\"\n          : color === \"cyan\"\n          ? \"checked:bg-cyan-500 dark:checked:bg-cyan-400\"\n          : color === \"pink\"\n          ? \"checked:bg-pink-500 dark:checked:bg-pink-400\"\n          : color === \"purple\"\n          ? \"checked:bg-purple-500 dark:checked:bg-purple-400\"\n          : color === \"amber\"\n          ? \"checked:bg-amber-500 dark:checked:bg-amber-400\"\n          : color === \"indigo\"\n          ? \"checked:bg-indigo-500 dark:checked:bg-indigo-400\"\n          : color === \"gray\"\n          ? \"checked:bg-gray-500 dark:checked:bg-gray-400\"\n          : \"checked:bg-brand-500 dark:checked:bg-brand-400\"\n      } ${extra}`}\n      name=\"weekly\"\n      {...rest}\n    />\n  );\n};\n\nexport default Switch;\n"
    },
    {
        "path": "src/components/update/Modal/index.tsx",
        "content": "import React, { ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\nimport styles from './modal.module.scss'\n\nconst ModalTemplate: React.FC<React.PropsWithChildren<{\n  title?: ReactNode\n  footer?: ReactNode\n  cancelText?: string\n  okText?: string\n  onCancel?: () => void\n  onOk?: () => void\n  width?: number\n}>> = props => {\n  const {\n    title,\n    children,\n    footer,\n    cancelText = 'Cancel',\n    okText = 'OK',\n    onCancel,\n    onOk,\n    width = 530,\n  } = props\n\n  return (\n    <div className={styles.modal}>\n      <div className='modal-mask' />\n      <div className='modal-warp'>\n        <div className='modal-content' style={{ width }}>\n          <div className='modal-header'>\n            <div className='modal-header-text'>{title}</div>\n            <span\n              className='modal-close'\n              onClick={onCancel}\n            >\n              <svg\n                viewBox=\"0 0 1024 1024\"\n                version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path d=\"M557.312 513.248l265.28-263.904c12.544-12.48 12.608-32.704 0.128-45.248-12.512-12.576-32.704-12.608-45.248-0.128l-265.344 263.936-263.04-263.84C236.64 191.584 216.384 191.52 203.84 204 191.328 216.48 191.296 236.736 203.776 249.28l262.976 263.776L201.6 776.8c-12.544 12.48-12.608 32.704-0.128 45.248 6.24 6.272 14.464 9.44 22.688 9.44 8.16 0 16.32-3.104 22.56-9.312l265.216-263.808 265.44 266.24c6.24 6.272 14.432 9.408 22.656 9.408 8.192 0 16.352-3.136 22.592-9.344 12.512-12.48 12.544-32.704 0.064-45.248L557.312 513.248z\" p-id=\"2764\" fill=\"currentColor\">\n                </path>\n              </svg>\n            </span>\n          </div>\n          <div className='modal-body'>{children}</div>\n          {typeof footer !== 'undefined' ? (\n            <div className='modal-footer'>\n              <button onClick={onCancel}>{cancelText}</button>\n              <button onClick={onOk}>{okText}</button>\n            </div>\n          ) : footer}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Modal = (props: Parameters<typeof ModalTemplate>[0] & { open: boolean }) => {\n  const { open, ...omit } = props\n\n  return createPortal(\n    open ? ModalTemplate(omit) : null,\n    document.body,\n  )\n}\n\nexport default Modal\n"
    },
    {
        "path": "src/components/update/Modal/modal.module.scss",
        "content": ".modal {\n  --primary-color: rgb(224, 30, 90);\n\n  :global {\n    .modal-mask {\n      width: 100vw;\n      height: 100vh;\n      position: fixed;\n      left: 0;\n      top: 0;\n      z-index: 9;\n      background: rgba(0, 0, 0, 0.45);\n    }\n\n    .modal-warp {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      z-index: 19;\n    }\n\n    .modal-content {\n      box-shadow: 0 0 10px -4px rgb(130, 86, 208);\n      overflow: hidden;\n      border-radius: 4px;\n\n      .modal-header {\n        display: flex;\n        line-height: 38px;\n        background-color: var(--primary-color);\n\n        .modal-header-text {\n          font-weight: bold;\n          width: 0;\n          flex-grow: 1;\n        }\n      }\n\n      .modal-close {\n        width: 30px;\n        height: 30px;\n        margin: 4px;\n        line-height: 34px;\n        text-align: center;\n        cursor: pointer;\n\n        svg {\n          width: 17px;\n          height: 17px;\n        }\n      }\n\n      .modal-body {\n        padding: 10px;\n        background-color: #fff;\n        color: #333;\n      }\n\n      .modal-footer {\n        padding: 10px;\n        background-color: #fff;\n        display: flex;\n        justify-content: end;\n\n        button {\n          padding: 7px 11px;\n          background-color: var(--primary-color);\n          font-size: 14px;\n          margin-left: 10px;\n\n          &:first-child {\n            margin-left: 0;\n          }\n        }\n      }\n    }\n\n    .icon {\n      padding: 0 15px;\n      width: 20px;\n      fill: currentColor;\n\n      &:hover {\n        color: rgba(0, 0, 0, 0.4);\n      }\n    }\n  }\n}\n"
    },
    {
        "path": "src/components/update/Progress/index.tsx",
        "content": "import React from 'react'\nimport styles from './progress.module.scss'\n\nconst Progress: React.FC<React.PropsWithChildren<{\n  percent?: number\n}>> = props => {\n  const { percent = 0 } = props\n\n  return (\n    <div className={styles.progress}>\n      <div className='progress-pr'>\n        <div\n          className='progress-rate'\n          style={{ width: `${percent}%` }}\n        />\n      </div>\n      <span className='progress-num'>{(percent ?? 0).toString().substring(0,4)}%</span>\n    </div>\n  )\n}\n\nexport default Progress\n"
    },
    {
        "path": "src/components/update/Progress/progress.module.scss",
        "content": ".progress {\n  display: flex;\n  align-items: center;\n\n  :global {\n    .progress-pr {\n      border: 1px solid #000;\n      border-radius: 3px;\n      height: 6px;\n      width: 200px;\n    }\n\n    .progress-rate {\n      height: 6px;\n      border-radius: 3px;\n      background-image: linear-gradient(to right, rgb(130, 86, 208) 0%, var(--primary-color) 100%)\n    }\n\n    .progress-num {\n      margin: 0 10px;\n    }\n  }\n}\n"
    },
    {
        "path": "src/components/update/electron-updater.d.ts",
        "content": "interface VersionInfo {\n  update: boolean\n  version: string\n  newVersion?: string\n}\n\ninterface ErrorType {\n  message: string\n  error: Error\n}\n"
    },
    {
        "path": "src/components/update/index.tsx",
        "content": "import { ipcRenderer } from 'electron'\nimport type { ProgressInfo } from 'electron-updater'\nimport { useCallback, useEffect, useState } from 'react'\nimport Modal from '@/components/update/Modal'\nimport Progress from '@/components/update/Progress'\nimport styles from './update.module.scss'\n\nconst Update = () => {\n  const [checking, setChecking] = useState(false)\n  const [updateAvailable, setUpdateAvailable] = useState(false)\n  const [versionInfo, setVersionInfo] = useState<VersionInfo>()\n  const [updateError, setUpdateError] = useState<ErrorType>()\n  const [progressInfo, setProgressInfo] = useState<Partial<ProgressInfo>>()\n  const [modalOpen, setModalOpen] = useState<boolean>(false)\n  const [modalBtn, setModalBtn] = useState<{\n    cancelText?: string\n    okText?: string\n    onCancel?: () => void\n    onOk?: () => void\n  }>({\n    onCancel: () => setModalOpen(false),\n    onOk: () => ipcRenderer.invoke('start-download'),\n  })\n\n  const checkUpdate = async () => {\n    setChecking(true)\n    /**\n     * @type {import('electron-updater').UpdateCheckResult | null | { message: string, error: Error }}\n     */\n    const result = await ipcRenderer.invoke('check-update')\n    setProgressInfo({ percent: 0 })\n    setChecking(false)\n    setModalOpen(true)\n    if (result?.error) {\n      setUpdateAvailable(false)\n      setUpdateError(result?.error)\n    }\n  }\n\n  const onUpdateCanAvailable = useCallback((_event: Electron.IpcRendererEvent, arg1: VersionInfo) => {\n    setVersionInfo(arg1)\n    setUpdateError(undefined)\n    // Can be update\n    if (arg1.update) {\n      setModalBtn(state => ({\n        ...state,\n        cancelText: 'Cancel',\n        okText: 'Update',\n        onOk: () => ipcRenderer.invoke('start-download'),\n      }))\n      setUpdateAvailable(true)\n    } else {\n      setUpdateAvailable(false)\n    }\n  }, [])\n\n  const onUpdateError = useCallback((_event: Electron.IpcRendererEvent, arg1: ErrorType) => {\n    setUpdateAvailable(false)\n    setUpdateError(arg1)\n  }, [])\n\n  const onDownloadProgress = useCallback((_event: Electron.IpcRendererEvent, arg1: ProgressInfo) => {\n    setProgressInfo(arg1)\n  }, [])\n\n  const onUpdateDownloaded = useCallback((_event: Electron.IpcRendererEvent, ...args: any[]) => {\n    setProgressInfo({ percent: 100 })\n    setModalBtn(state => ({\n      ...state,\n      cancelText: 'Later',\n      okText: 'Install now',\n      onOk: () => ipcRenderer.invoke('quit-and-install'),\n    }))\n  }, [])\n\n  useEffect(() => {\n    // Get version information and whether to update\n    ipcRenderer.on('update-can-available', onUpdateCanAvailable)\n    ipcRenderer.on('update-error', onUpdateError)\n    ipcRenderer.on('download-progress', onDownloadProgress)\n    ipcRenderer.on('update-downloaded', onUpdateDownloaded)\n\n    return () => {\n      ipcRenderer.off('update-can-available', onUpdateCanAvailable)\n      ipcRenderer.off('update-error', onUpdateError)\n      ipcRenderer.off('download-progress', onDownloadProgress)\n      ipcRenderer.off('update-downloaded', onUpdateDownloaded)\n    }\n  }, [])\n\n  return (\n    <>\n      <Modal\n        open={modalOpen}\n        cancelText={modalBtn?.cancelText}\n        okText={modalBtn?.okText}\n        onCancel={modalBtn?.onCancel}\n        onOk={modalBtn?.onOk}\n        footer={updateAvailable ? /* hide footer */null : undefined}\n      >\n        <div className={styles.modalslot}>\n          {updateError\n            ? (\n              <div className='update-error'>\n                <p>Error downloading the latest version.</p>\n                <p>{updateError.message}</p>\n              </div>\n            ) : updateAvailable\n              ? (\n                <div className='can-available'>\n                  <div>The last version is: v{versionInfo?.newVersion}</div>\n                  <div className='new-version-target'>v{versionInfo?.version} -&gt; v{versionInfo?.newVersion}</div>\n                  <div className='update-progress'>\n                    <div className='progress-title'>Update progress:</div>\n                    <div className='progress-bar'>\n                      <Progress percent={progressInfo?.percent} ></Progress>\n                    </div>\n                  </div>\n                </div>\n              )\n              : (\n                <div className='can-not-available'>{JSON.stringify(versionInfo ?? {}, null, 2)}</div>\n              )}\n        </div>\n      </Modal>\n      <button disabled={checking} onClick={checkUpdate}>\n        {checking ? 'Checking...' : 'Check update'}\n      </button>\n    </>\n  )\n}\n\nexport default Update\n"
    },
    {
        "path": "src/components/update/update.module.scss",
        "content": ".modalslot {\n  // display: flex;\n  // align-items: center;\n  // justify-content: center;\n\n  :global {\n    .update-progress {\n      display: flex;\n    }\n\n    .progress-title {\n      margin-right: 10px;\n    }\n\n    .progress-bar {\n      width: 0;\n      flex-grow: 1;\n    }\n\n    .can-available {\n      .new-version-target,.update-progress {\n        margin-left: 40px;\n      }\n    }\n\n    .can-not-available {\n      padding: 20px;\n      text-align: center;\n    }\n  }\n}"
    },
    {
        "path": "src/components/widget/Widget.tsx",
        "content": "import Card from \"@/components/card\";\n\nconst Widget = (props: {\n  icon: JSX.Element;\n  title: string;\n  subtitle: string;\n}) => {\n  const { icon, title, subtitle } = props;\n  return (\n    <Card extra=\"!flex-row flex-grow items-center rounded-[20px]\">\n      <div className=\"ml-[18px] flex h-[90px] w-auto flex-row items-center\">\n        <div className=\"rounded-full bg-lightPrimary p-3 dark:bg-navy-700\">\n          <span className=\"flex items-center text-brand-500 dark:text-white\">\n            {icon}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"h-50 ml-4 flex w-auto flex-col justify-center\">\n        <p className=\"font-dm text-sm font-medium text-gray-600\">{title}</p>\n        <h4 className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          {subtitle}\n        </h4>\n      </div>\n    </Card>\n  );\n};\n\nexport default Widget;\n"
    },
    {
        "path": "src/index.css",
        "content": "@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n\thtml {\n\t\tfont-family: 'DM Sans', sans-serif !important;\n\t\tfont-feature-settings: 'kern' !important;\n\t\t-webkit-font-smoothing: antialiased;\n\t\tletter-spacing: -0.5px;\n\t}\n}\n\ninput.defaultCheckbox::before {\n\tcontent: url(../src/assets/svg/checked.svg); \n\tcolor: white;\n\topacity: 0; \n\theight: 16px; \n\twidth: 16px;\n\tposition: absolute; \n\tleft: 50%;\n\ttransform: translate(-50%, 0px);\n} \n\ninput:checked.defaultCheckbox::before { \n\topacity: 1;\n}"
    },
    {
        "path": "src/layouts/admin/index.tsx",
        "content": "import React from \"react\";\nimport { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\nimport Navbar from \"@/components/navbar\";\nimport Sidebar from \"@/components/sidebar\";\nimport Footer from \"@/components/footer/Footer\";\nimport routes from \"@/routes\";\n\nexport default function Admin(props: { [x: string]: any }) {\n  const { ...rest } = props;\n  const location = useLocation();\n  const [open, setOpen] = React.useState(true);\n  const [currentRoute, setCurrentRoute] = React.useState(\"Main Dashboard\");\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", () =>\n      window.innerWidth < 1200 ? setOpen(false) : setOpen(true)\n    );\n  }, []);\n  React.useEffect(() => {\n    getActiveRoute(routes);\n  }, [location.pathname]);\n\n  const getActiveRoute = (routes: RoutesType[]): string | boolean => {\n    let activeRoute = \"Main Dashboard\";\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        window.location.href.indexOf(\n          routes[i].layout + \"/\" + routes[i].path\n        ) !== -1\n      ) {\n        setCurrentRoute(routes[i].name);\n      }\n    }\n    return activeRoute;\n  };\n  const getActiveNavbar = (routes: RoutesType[]): string | boolean => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n      ) {\n        return routes[i].secondary;\n      }\n    }\n    return activeNavbar;\n  };\n  const getRoutes = (routes: RoutesType[]): any => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route path={`/${prop.path}`} element={prop.component} key={key} />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  document.documentElement.dir = \"ltr\";\n  return (\n    <div className=\"flex h-full w-full\">\n      <Sidebar open={open} onClose={() => setOpen(false)} />\n      {/* Navbar & Main Content */}\n      <div className=\"h-full w-full bg-lightPrimary dark:!bg-navy-900\">\n        {/* Main Content */}\n        <main\n          className={`mx-[12px] h-full flex-none transition-all md:pr-2 xl:ml-[313px]`}\n        >\n          {/* Routes */}\n          <div className=\"h-full\">\n            <Navbar\n              onOpenSidenav={() => setOpen(true)}\n              brandText={currentRoute}\n              secondary={getActiveNavbar(routes)}\n              {...rest}\n            />\n            <div className=\"pt-5s mx-auto mb-auto h-full min-h-[84vh] p-2 md:pr-2\">\n              <Routes>\n                {getRoutes(routes)}\n\n                <Route\n                  path=\"/\"\n                  element={<Navigate to=\"/admin/default\" replace />}\n                />\n              </Routes>\n            </div>\n            <div className=\"p-3\">\n              <Footer />\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n"
    },
    {
        "path": "src/layouts/auth/index.tsx",
        "content": "import Footer from \"@/components/footer/FooterAuthDefault\";\nimport authImg from \"@/assets/img/auth/auth.png\";\nimport { Link, Routes, Route, Navigate } from \"react-router-dom\";\nimport routes from \"@/routes\";\nimport FixedPlugin from \"@/components/fixedPlugin/FixedPlugin\";\n\nexport default function Auth() {\n  const getRoutes = (routes: RoutesType[]): any => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route path={`/${prop.path}`} element={prop.component} key={key} />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  document.documentElement.dir = \"ltr\";\n  return (\n    <div>\n      <div className=\"relative float-right h-full min-h-screen w-full !bg-white dark:!bg-navy-900\">\n        <FixedPlugin />\n        <main className={`mx-auto min-h-screen`}>\n          <div className=\"relative flex\">\n            <div className=\"mx-auto flex min-h-full w-full flex-col justify-start pt-12 md:max-w-[75%] lg:h-screen lg:max-w-[1013px] lg:px-8 lg:pt-0 xl:h-[100vh] xl:max-w-[1383px] xl:px-0 xl:pl-[70px]\">\n              <div className=\"mb-auto flex flex-col pl-5 pr-5 md:pr-0 md:pl-12 lg:max-w-[48%] lg:pl-0 xl:max-w-full\">\n                <Link to=\"/admin\" className=\"mt-0 w-max lg:pt-10\">\n                  <div className=\"mx-auto flex h-fit w-fit items-center hover:cursor-pointer\">\n                    <svg\n                      width=\"8\"\n                      height=\"12\"\n                      viewBox=\"0 0 8 12\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M6.70994 2.11997L2.82994 5.99997L6.70994 9.87997C7.09994 10.27 7.09994 10.9 6.70994 11.29C6.31994 11.68 5.68994 11.68 5.29994 11.29L0.709941 6.69997C0.319941 6.30997 0.319941 5.67997 0.709941 5.28997L5.29994 0.699971C5.68994 0.309971 6.31994 0.309971 6.70994 0.699971C7.08994 1.08997 7.09994 1.72997 6.70994 2.11997V2.11997Z\"\n                        fill=\"#A3AED0\"\n                      />\n                    </svg>\n                    <p className=\"ml-3 text-sm text-gray-600\">\n                      Back to Dashboard\n                    </p>\n                  </div>\n                </Link>\n                <Routes>\n                  {getRoutes(routes)}\n                  <Route \n                    path=\"/\"\n                    element={<Navigate to=\"/auth/sign-in\" replace />}\n                  />\n                </Routes>\n                {/* <div className=\"absolute right-0 hidden h-full min-h-screen md:block lg:w-[49vw] 2xl:w-[44vw]\">\n                  <div\n                    className=\"absolute flex h-full w-full items-end justify-center bg-cover bg-center lg:rounded-bl-[120px] xl:rounded-bl-[200px]\"\n                    style={{ backgroundImage: `url(${authImg})` }}\n                  />\n                </div> */}\n              </div>\n              <Footer />\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n"
    },
    {
        "path": "src/main.tsx",
        "content": "import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './samples/node-api'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\n  <React.StrictMode>\n   <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n)\n\npostMessage({ payload: 'removeLoading' }, '*')\n"
    },
    {
        "path": "src/routes.tsx",
        "content": "import React from \"react\";\n\n// Admin Imports\nimport MainDashboard from \"@/views/admin/default\";\nimport NFTMarketplace from \"@/views/admin/marketplace\";\nimport Profile from \"@/views/admin/profile\";\nimport DataTables from \"@/views/admin/tables\";\n// import RTLDefault from \"views/rtl/default\";\n\n// Auth Imports\nimport SignIn from \"@/views/auth/SignIn\";\n\n// Icon Imports\nimport {\n  MdHome,\n  MdOutlineShoppingCart,\n  MdBarChart,\n  MdPerson,\n  MdLock,\n} from \"react-icons/md\";\n\nconst routes = [\n  {\n    name: \"Setup\",\n    layout: \"/admin\",\n    path: \"default\",\n    icon: <MdHome className=\"h-6 w-6\" />,\n    component: <MainDashboard />,\n  },\n  {\n    name: \"AI Marketplace\",\n    layout: \"/admin\",\n    path: \"nft-marketplace\",\n    icon: <MdOutlineShoppingCart className=\"h-6 w-6\" />,\n    component: <MainDashboard />,\n    secondary: true,\n  },\n  {\n    name: \"About\",\n    layout: \"/admin\",\n    icon: <MdBarChart className=\"h-6 w-6\" />,\n    path: \"data-tables\",\n    component: <MainDashboard />,\n  },\n  {\n    name: \"Profile\",\n    layout: \"/admin\",\n    path: \"profile\",\n    icon: <MdPerson className=\"h-6 w-6\" />,\n    component: <Profile />,\n  },\n  {\n    name: \"Sign In\",\n    layout: \"/auth\",\n    path: \"sign-in\",\n    icon: <MdLock className=\"h-6 w-6\" />,\n    component: <SignIn />,\n  },\n  // {\n  //   name: \"RTL Admin\",\n  //   layout: \"/rtl\",\n  //   path: \"rtl\",\n  //   icon: <MdHome className=\"h-6 w-6\" />,\n  //   component: <RTLDefault />,\n  // },\n];\nexport default routes;\n"
    },
    {
        "path": "src/samples/node-api.ts",
        "content": "import { lstat } from 'node:fs/promises'\nimport { cwd } from 'node:process'\nimport { ipcRenderer } from 'electron'\n\nipcRenderer.on('main-process-message', (_event, ...args) => {\n  console.log('[Receive Main-process message]:', ...args)\n})\n\nlstat(cwd()).then(stats => {\n  console.log('[fs.lstat]', stats)\n}).catch(err => {\n  console.error(err)\n})\n"
    },
    {
        "path": "src/types/hui-types.d.ts",
        "content": "export {};\n\ndeclare global {\n\t/**\n   * Now declare things that go in the global namespace,\n   * or augment existing declarations in the global namespace.\n   */\n\tinterface RoutesType {\n\t\tname: string;\n\t\tlayout: string;\n\t\tcomponent:  JSX.Element;\n\t\ticon: JSX.Element | string;\n\t\tpath: string;\n\t\tsecondary?: boolean;\n\t}\n}\n"
    },
    {
        "path": "src/types/images.d.ts",
        "content": "declare module '*.svg';\ndeclare module '*.png';\ndeclare module '*.jpg';\ndeclare module '*.jpeg';\n"
    },
    {
        "path": "src/types/react-table-config.d.ts",
        "content": "import {\n\tUseColumnOrderInstanceProps,\n\tUseColumnOrderState,\n\tUseExpandedHooks,\n\tUseExpandedInstanceProps,\n\tUseExpandedOptions,\n\tUseExpandedRowProps,\n\tUseExpandedState,\n\tUseFiltersColumnOptions,\n\tUseFiltersColumnProps,\n\tUseFiltersInstanceProps,\n\tUseFiltersOptions,\n\tUseFiltersState,\n\tUseGlobalFiltersColumnOptions,\n\tUseGlobalFiltersInstanceProps,\n\tUseGlobalFiltersOptions,\n\tUseGlobalFiltersState,\n\tUseGroupByCellProps,\n\tUseGroupByColumnOptions,\n\tUseGroupByColumnProps,\n\tUseGroupByHooks,\n\tUseGroupByInstanceProps,\n\tUseGroupByOptions,\n\tUseGroupByRowProps,\n\tUseGroupByState,\n\tUsePaginationInstanceProps,\n\tUsePaginationOptions,\n\tUsePaginationState,\n\tUseResizeColumnsColumnOptions,\n\tUseResizeColumnsColumnProps,\n\tUseResizeColumnsOptions,\n\tUseResizeColumnsState,\n\tUseRowSelectHooks,\n\tUseRowSelectInstanceProps,\n\tUseRowSelectOptions,\n\tUseRowSelectRowProps,\n\tUseRowSelectState,\n\tUseRowStateCellProps,\n\tUseRowStateInstanceProps,\n\tUseRowStateOptions,\n\tUseRowStateRowProps,\n\tUseRowStateState,\n\tUseSortByColumnOptions,\n\tUseSortByColumnProps,\n\tUseSortByHooks,\n\tUseSortByInstanceProps,\n\tUseSortByOptions,\n\tUseSortByState\n} from 'react-table';\n\ndeclare module 'react-table' {\n\t// take this file as-is, or comment out the sections that don't apply to your plugin configuration\n\n\texport interface TableOptions<D extends Record<string, unknown>>\n\t\textends UseExpandedOptions<D>,\n\t\t\tUseFiltersOptions<D>,\n\t\t\tUseGlobalFiltersOptions<D>,\n\t\t\tUseGroupByOptions<D>,\n\t\t\tUsePaginationOptions<D>,\n\t\t\tUseResizeColumnsOptions<D>,\n\t\t\tUseRowSelectOptions<D>,\n\t\t\tUseRowStateOptions<D>,\n\t\t\tUseSortByOptions<D>,\n\t\t\t// note that having Record here allows you to add anything to the options, this matches the spirit of the\n\t\t\t// underlying js library, but might be cleaner if it's replaced by a more specific type that matches your\n\t\t\t// feature set, this is a safe default.\n\t\t\tRecord<string, any> {}\n\n\texport interface Hooks<D extends Record<string, unknown> = Record<string, unknown>>\n\t\textends UseExpandedHooks<D>,\n\t\t\tUseGroupByHooks<D>,\n\t\t\tUseRowSelectHooks<D>,\n\t\t\tUseSortByHooks<D> {}\n\n\texport interface TableInstance<D extends Record<string, unknown> = Record<string, unknown>>\n\t\textends UseColumnOrderInstanceProps<D>,\n\t\t\tUseExpandedInstanceProps<D>,\n\t\t\tUseFiltersInstanceProps<D>,\n\t\t\tUseGlobalFiltersInstanceProps<D>,\n\t\t\tUseGroupByInstanceProps<D>,\n\t\t\tUsePaginationInstanceProps<D>,\n\t\t\tUseRowSelectInstanceProps<D>,\n\t\t\tUseRowStateInstanceProps<D>,\n\t\t\tUseSortByInstanceProps<D> {}\n\n\texport interface TableState<D extends Record<string, unknown> = Record<string, unknown>>\n\t\textends UseColumnOrderState<D>,\n\t\t\tUseExpandedState<D>,\n\t\t\tUseFiltersState<D>,\n\t\t\tUseGlobalFiltersState<D>,\n\t\t\tUseGroupByState<D>,\n\t\t\tUsePaginationState<D>,\n\t\t\tUseResizeColumnsState<D>,\n\t\t\tUseRowSelectState<D>,\n\t\t\tUseRowStateState<D>,\n\t\t\tUseSortByState<D> {}\n\n\texport interface ColumnInterface<D extends Record<string, unknown> = Record<string, unknown>>\n\t\textends UseFiltersColumnOptions<D>,\n\t\t\tUseGlobalFiltersColumnOptions<D>,\n\t\t\tUseGroupByColumnOptions<D>,\n\t\t\tUseResizeColumnsColumnOptions<D>,\n\t\t\tUseSortByColumnOptions<D> {}\n\n\texport interface ColumnInstance<D extends Record<string, unknown> = Record<string, unknown>>\n\t\textends UseFiltersColumnProps<D>,\n\t\t\tUseGroupByColumnProps<D>,\n\t\t\tUseResizeColumnsColumnProps<D>,\n\t\t\tUseSortByColumnProps<D> {}\n\n\texport interface Cell<D extends Record<string, unknown> = Record<string, unknown>, V = any>\n\t\textends UseGroupByCellProps<D>,\n\t\t\tUseRowStateCellProps<D> {}\n\n\texport interface Row<D extends Record<string, unknown> = Record<string, unknown>>\n\t\textends UseExpandedRowProps<D>,\n\t\t\tUseGroupByRowProps<D>,\n\t\t\tUseRowSelectRowProps<D>,\n\t\t\tUseRowStateRowProps<D> {}\n}\n"
    },
    {
        "path": "src/types/stylis.d.ts",
        "content": "declare module 'stylis-plugin-rtl' {\n\tconst noTypesYet: any;\n\texport default noTypesYet;\n}\n"
    },
    {
        "path": "src/variables/charts.ts",
        "content": "export const barChartDataDailyTraffic = [\n  {\n    name: \"Daily Traffic\",\n    data: [20, 30, 40, 20, 45, 50, 30],\n  },\n];\n\nexport const barChartOptionsDailyTraffic = {\n  chart: {\n    toolbar: {\n      show: false,\n    },\n  },\n  tooltip: {\n    style: {\n      fontSize: \"12px\",\n      fontFamily: undefined,\n      backgroundColor: \"#000000\"\n    },\n    onDatasetHover: {\n      style: {\n        fontSize: \"12px\",\n        fontFamily: undefined,\n      },\n    },\n    theme: \"dark\",\n  },\n  xaxis: {\n    categories: [\"00\", \"04\", \"08\", \"12\", \"14\", \"16\", \"18\"],\n    show: false,\n    labels: {\n      show: true,\n      style: {\n        colors: \"#A3AED0\",\n        fontSize: \"14px\",\n        fontWeight: \"500\",\n      },\n    },\n    axisBorder: {\n      show: false,\n    },\n    axisTicks: {\n      show: false,\n    },\n  },\n  yaxis: {\n    show: false,\n    color: \"black\",\n    labels: {\n      show: true,\n      style: {\n        colors: \"#CBD5E0\",\n        fontSize: \"14px\",\n      },\n    },\n  },\n  grid: {\n    show: false,\n    strokeDashArray: 5,\n    yaxis: {\n      lines: {\n        show: true,\n      },\n    },\n    xaxis: {\n      lines: {\n        show: false,\n      },\n    },\n  },\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      type: \"vertical\",\n      shadeIntensity: 1,\n      opacityFrom: 0.7,\n      opacityTo: 0.9,\n      colorStops: [\n        [\n          {\n            offset: 0,\n            color: \"#4318FF\",\n            opacity: 1,\n          },\n          {\n            offset: 100,\n            color: \"rgba(67, 24, 255, 1)\",\n            opacity: 0.28,\n          },\n        ],\n      ],\n    },\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  plotOptions: {\n    bar: {\n      borderRadius: 10,\n      columnWidth: \"40px\",\n    },\n  },\n};\n\nexport const pieChartOptions = {\n  labels: [\"Your files\", \"System\", \"Empty\"],\n  colors: [\"#4318FF\", \"#6AD2FF\", \"#EFF4FB\"],\n  chart: {\n    width: \"50px\",\n  },\n  states: {\n    hover: {\n      filter: {\n        type: \"none\",\n      },\n    },\n  },\n  legend: {\n    show: false,\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  hover: { mode: null },\n  plotOptions: {\n    donut: {\n      expandOnClick: false,\n      donut: {\n        labels: {\n          show: false,\n        },\n      },\n    },\n  },\n  fill: {\n    colors: [\"#4318FF\", \"#6AD2FF\", \"#EFF4FB\"],\n  },\n  tooltip: {\n    enabled: true,\n    theme: \"dark\",\n    style: {\n      fontSize: \"12px\",\n      fontFamily: undefined,\n      backgroundColor: \"#000000\"\n    },\n  },\n};\n\nexport const pieChartData = [63, 25, 12];\n\nexport const barChartDataWeeklyRevenue = [\n  {\n    name: \"PRODUCT A\",\n    data: [400, 370, 330, 390, 320, 350, 360, 320, 380],\n    color: \"#6AD2Fa\",\n  },\n  {\n    name: \"PRODUCT B\",\n    data: [400, 370, 330, 390, 320, 350, 360, 320, 380],\n    color: \"#4318FF\",\n  },\n  {\n    name: \"PRODUCT C\",\n    data: [400, 370, 330, 390, 320, 350, 360, 320, 380],\n    color: \"#EFF4FB\",\n  },\n];\n\nexport const barChartOptionsWeeklyRevenue = {\n  chart: {\n    stacked: true,\n    toolbar: {\n      show: false,\n    },\n  },\n  // colors:['#ff3322','#faf']\n  tooltip: {\n    style: {\n      fontSize: \"12px\",\n      fontFamily: undefined,\n      backgroundColor: \"#000000\"\n    },\n    theme: 'dark',\n    onDatasetHover: {\n      style: {\n        fontSize: \"12px\",\n        fontFamily: undefined,\n      },\n    },\n  },\n  xaxis: {\n    categories: [\"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\"],\n    show: false,\n    labels: {\n      show: true,\n      style: {\n        colors: \"#A3AED0\",\n        fontSize: \"14px\",\n        fontWeight: \"500\",\n      },\n    },\n    axisBorder: {\n      show: false,\n    },\n    axisTicks: {\n      show: false,\n    },\n  },\n  yaxis: {\n    show: false,\n    color: \"black\",\n    labels: {\n      show: false,\n      style: {\n        colors: \"#A3AED0\",\n        fontSize: \"14px\",\n        fontWeight: \"500\",\n      },\n    },\n  },\n\n  grid: {\n    borderColor: \"rgba(163, 174, 208, 0.3)\",\n    show: true,\n    yaxis: {\n      lines: {\n        show: false,\n        opacity: 0.5,\n      },\n    },\n    row: {\n      opacity: 0.5,\n    },\n    xaxis: {\n      lines: {\n        show: false,\n      },\n    },\n  },\n  fill: {\n    type: \"solid\",\n    colors: [\"#5E37FF\", \"#6AD2FF\", \"#E1E9F8\"],\n  },\n  legend: {\n    show: false,\n  },\n  colors: [\"#5E37FF\", \"#6AD2FF\", \"#E1E9F8\"],\n  dataLabels: {\n    enabled: false,\n  },\n  plotOptions: {\n    bar: {\n      borderRadius: 10,\n      columnWidth: \"20px\",\n    },\n  },\n};\n\nexport const lineChartDataTotalSpent = [\n  {\n    name: \"Revenue\",\n    data: [50, 64, 48, 66, 49, 68],\n    color: \"#4318FF\",\n  },\n  {\n    name: \"Profit\",\n    data: [30, 40, 24, 46, 20, 46],\n    color: \"#6AD2FF\",\n  },\n];\n\nexport const lineChartOptionsTotalSpent = {\n  legend: {\n    show: false,\n  },\n\n  theme: {\n    mode: \"light\",\n  },\n  chart: {\n    type: \"line\",\n\n    toolbar: {\n      show: false,\n    },\n  },\n\n  dataLabels: {\n    enabled: false,\n  },\n  stroke: {\n    curve: \"smooth\",\n  },\n\n  tooltip: {\n    style: {\n      fontSize: \"12px\",\n      fontFamily: undefined,\n      backgroundColor: \"#000000\"\n    },\n    theme: 'dark',\n    x: {\n      format: \"dd/MM/yy HH:mm\",\n    },\n  },\n  grid: {\n    show: false,\n  },\n  xaxis: {\n    axisBorder: {\n      show: false,\n    },\n    axisTicks: {\n      show: false,\n    },\n    labels: {\n      style: {\n        colors: \"#A3AED0\",\n        fontSize: \"12px\",\n        fontWeight: \"500\",\n      },\n    },\n    type: \"text\",\n    range: undefined,\n    categories: [\"SEP\", \"OCT\", \"NOV\", \"DEC\", \"JAN\", \"FEB\"],\n  },\n\n  yaxis: {\n    show: false,\n  },\n};\n"
    },
    {
        "path": "src/views/admin/default/components/CheckTable.tsx",
        "content": "import React from \"react\";\nimport CardMenu from \"@/components/card/CardMenu\";\nimport Checkbox from \"@/components/checkbox\";\nimport Card from \"@/components/card\";\n\nimport {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n} from \"@tanstack/react-table\";\n\ntype RowObj = {\n  name: [string, boolean];\n  progress: string;\n  quantity: number;\n  date: string;\n};\n\nfunction CheckTable(props: { tableData: any }) {\n  const { tableData } = props;\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  let defaultData = tableData;\n  const columns = [\n    columnHelper.accessor(\"name\", {\n      id: \"name\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">NAME</p>\n      ),\n      cell: (info: any) => (\n        <div className=\"flex items-center\">\n          <Checkbox\n            defaultChecked={info.getValue()[1]}\n            colorScheme=\"brandScheme\"\n            me=\"10px\"\n          />\n          <p className=\"ml-3 text-sm font-bold text-navy-700 dark:text-white\">\n            {info.getValue()[0]}\n          </p>\n        </div>\n      ),\n    }),\n    columnHelper.accessor(\"progress\", {\n      id: \"progress\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          PROGRESS\n        </p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"quantity\", {\n      id: \"quantity\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          QUANTITY\n        </p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"date\", {\n      id: \"date\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">DATE</p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n  ]; // eslint-disable-next-line\n  const [data, setData] = React.useState(() => [...defaultData]);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n    },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    debugTable: true,\n  });\n  return (\n    <Card extra={\"w-full h-full sm:overflow-auto px-6\"}>\n      <header className=\"relative flex items-center justify-between pt-4\">\n        <div className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          Check Table\n        </div>\n\n        <CardMenu />\n      </header>\n\n      <div className=\"mt-8 overflow-x-scroll xl:overflow-x-hidden\">\n        <table className=\"w-full\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id} className=\"!border-px !border-gray-400\">\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      onClick={header.column.getToggleSortingHandler()}\n                      className=\"cursor-pointer border-b-[1px] border-gray-200 pt-4 pb-2 pr-4 text-start\"\n                    >\n                      <div className=\"items-center justify-between text-xs text-gray-200\">\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                        {{\n                          asc: \"\",\n                          desc: \"\",\n                        }[header.column.getIsSorted() as string] ?? null}\n                      </div>\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {table\n              .getRowModel()\n              .rows.slice(0, 5)\n              .map((row) => {\n                return (\n                  <tr key={row.id}>\n                    {row.getVisibleCells().map((cell) => {\n                      return (\n                        <td\n                          key={cell.id}\n                          className=\"min-w-[150px] border-white/0 py-3  pr-4\"\n                        >\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n\nexport default CheckTable;\nconst columnHelper = createColumnHelper<RowObj>();\n"
    },
    {
        "path": "src/views/admin/default/components/ComplexTable.tsx",
        "content": "import React from \"react\";\nimport CardMenu from \"@/components/card/CardMenu\";\nimport Card from \"@/components/card\";\nimport Progress from \"@/components/progress\";\nimport { MdCancel, MdCheckCircle, MdOutlineError } from \"react-icons/md\";\n\nimport {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n} from \"@tanstack/react-table\";\n\ntype RowObj = {\n  name: string;\n  status: string;\n  date: string;\n  progress: number;\n};\n\nconst columnHelper = createColumnHelper<RowObj>();\n\n// const columns = columnsDataCheck;\nexport default function ComplexTable(props: { tableData: any }) {\n  const { tableData } = props;\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  let defaultData = tableData;\n  const columns = [\n    columnHelper.accessor(\"name\", {\n      id: \"name\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">NAME</p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"status\", {\n      id: \"status\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          STATUS\n        </p>\n      ),\n      cell: (info) => (\n        <div className=\"flex items-center\">\n          {info.getValue() === \"Approved\" ? (\n            <MdCheckCircle className=\"text-green-500 me-1 dark:text-green-300\" />\n          ) : info.getValue() === \"Disable\" ? (\n            <MdCancel className=\"text-red-500 me-1 dark:text-red-300\" />\n          ) : info.getValue() === \"Error\" ? (\n            <MdOutlineError className=\"text-amber-500 me-1 dark:text-amber-300\" />\n          ) : null}\n          <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n            {info.getValue()}\n          </p>\n        </div>\n      ),\n    }),\n    columnHelper.accessor(\"date\", {\n      id: \"date\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">DATE</p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"progress\", {\n      id: \"progress\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          PROGRESS\n        </p>\n      ),\n      cell: (info) => (\n        <div className=\"flex items-center\">\n          <Progress width=\"w-[108px]\" value={info.getValue()} />\n        </div>\n      ),\n    }),\n  ]; // eslint-disable-next-line\n  const [data, setData] = React.useState(() => [...defaultData]);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n    },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    debugTable: true,\n  });\n  return (\n    <Card extra={\"w-full h-full px-6 pb-6 sm:overflow-x-auto\"}>\n      <div className=\"relative flex items-center justify-between pt-4\">\n        <div className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          Complex Table\n        </div>\n        <CardMenu />\n      </div>\n\n      <div className=\"mt-8 overflow-x-scroll xl:overflow-x-hidden\">\n        <table className=\"w-full\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id} className=\"!border-px !border-gray-400\">\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      onClick={header.column.getToggleSortingHandler()}\n                      className=\"cursor-pointer border-b-[1px] border-gray-200 pt-4 pb-2 pr-4 text-start\"\n                    >\n                      <div className=\"items-center justify-between text-xs text-gray-200\">\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                        {{\n                          asc: \"\",\n                          desc: \"\",\n                        }[header.column.getIsSorted() as string] ?? null}\n                      </div>\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {table\n              .getRowModel()\n              .rows.slice(0, 5)\n              .map((row) => {\n                return (\n                  <tr key={row.id}>\n                    {row.getVisibleCells().map((cell) => {\n                      return (\n                        <td\n                          key={cell.id}\n                          className=\"min-w-[150px] border-white/0 py-3  pr-4\"\n                        >\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n"
    },
    {
        "path": "src/views/admin/default/components/DailyTraffic.tsx",
        "content": "import BarChart from \"@/components/charts/BarChart\";\nimport { barChartDataDailyTraffic } from \"@/variables/charts\";\nimport { barChartOptionsDailyTraffic } from \"@/variables/charts\";\nimport { MdArrowDropUp } from \"react-icons/md\";\nimport Card from \"@/components/card\";\nconst DailyTraffic = () => {\n  return (\n    <Card extra=\"pb-7 p-[20px]\">\n      <div className=\"flex flex-row justify-between\">\n        <div className=\"ml-1 pt-2\">\n          <p className=\"text-sm font-medium leading-4 text-gray-600\">\n            Daily Traffic\n          </p>\n          <p className=\"text-[34px] font-bold text-navy-700 dark:text-white\">\n            2.579{\" \"}\n            <span className=\"text-sm font-medium leading-6 text-gray-600\">\n              Visitors\n            </span>\n          </p>\n        </div>\n        <div className=\"mt-2 flex items-start\">\n          <div className=\"flex items-center text-sm text-green-500\">\n            <MdArrowDropUp className=\"h-5 w-5\" />\n            <p className=\"font-bold\"> +2.45% </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"h-[300px] w-full pt-10 pb-0\">\n        <BarChart\n          chartData={barChartDataDailyTraffic}\n          chartOptions={barChartOptionsDailyTraffic}\n        />\n      </div>\n    </Card>\n  );\n};\n\nexport default DailyTraffic;\n"
    },
    {
        "path": "src/views/admin/default/components/PieChartCard.tsx",
        "content": "import PieChart from \"@/components/charts/PieChart\";\nimport { pieChartData, pieChartOptions } from \"@/variables/charts\";\nimport Card from \"@/components/card\";\n\nconst PieChartCard = () => {\n  return (\n    <Card extra=\"rounded-[20px] p-3\">\n      <div className=\"flex flex-row justify-between px-3 pt-2\">\n        <div>\n          <h4 className=\"text-lg font-bold text-navy-700 dark:text-white\">\n            Your Pie Chart\n          </h4>\n        </div>\n\n        <div className=\"mb-6 flex items-center justify-center\">\n          <select className=\"mb-3 mr-2 flex items-center justify-center text-sm font-bold text-gray-600 hover:cursor-pointer dark:!bg-navy-800 dark:text-white\">\n            <option value=\"monthly\">Monthly</option>\n            <option value=\"yearly\">Yearly</option>\n            <option value=\"weekly\">Weekly</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"mb-auto flex h-[220px] w-full items-center justify-center\">\n        <PieChart chartOptions={pieChartOptions} chartData={pieChartData} />\n      </div>\n      <div className=\"flex flex-row !justify-between rounded-2xl px-6 py-3 shadow-2xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n        <div className=\"flex flex-col items-center justify-center\">\n          <div className=\"flex items-center justify-center\">\n            <div className=\"h-2 w-2 rounded-full bg-brand-500\" />\n            <p className=\"ml-1 text-sm font-normal text-gray-600\">Your Files</p>\n          </div>\n          <p className=\"mt-px text-xl font-bold text-navy-700  dark:text-white\">\n            63%\n          </p>\n        </div>\n\n        <div className=\"h-11 w-px bg-gray-300 dark:bg-white/10\" />\n\n        <div className=\"flex flex-col items-center justify-center\">\n          <div className=\"flex items-center justify-center\">\n            <div className=\"h-2 w-2 rounded-full bg-[#6AD2FF]\" />\n            <p className=\"ml-1 text-sm font-normal text-gray-600\">System</p>\n          </div>\n          <p className=\"mt-px text-xl font-bold text-navy-700 dark:text-white\">\n            25%\n          </p>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default PieChartCard;\n"
    },
    {
        "path": "src/views/admin/default/components/TaskCard.tsx",
        "content": "import CardMenu from \"@/components/card/CardMenu\";\nimport Checkbox from \"@/components/checkbox\";\nimport { MdDragIndicator, MdCheckCircle } from \"react-icons/md\";\nimport Card from \"@/components/card\";\n\nconst TaskCard = () => {\n  return (\n    <Card extra=\"pb-7 p-[20px]\">\n      {/* task header */}\n      <div className=\"relative flex flex-row justify-between\">\n        <div className=\"flex items-center\">\n          <div className=\"flex h-9 w-9 items-center justify-center rounded-full bg-indigo-100 dark:bg-indigo-100 dark:bg-white/5\">\n            <MdCheckCircle className=\"h-6 w-6 text-brand-500 dark:text-white\" />\n          </div>\n          <h4 className=\"ml-4 text-xl font-bold text-navy-700 dark:text-white\">\n            Tasks\n          </h4>\n        </div>\n        <CardMenu />\n      </div>\n\n      {/* task content */}\n\n      <div className=\"h-full w-full\">\n        <div className=\"mt-5 flex items-center justify-between p-2\">\n          <div className=\"flex items-center justify-center gap-2\">\n            <Checkbox />\n            <p className=\"text-base font-bold text-navy-700 dark:text-white\">\n              Landing Page Design\n            </p>\n          </div>\n          <div>\n            <MdDragIndicator className=\"h-6 w-6 text-navy-700 dark:text-white\" />\n          </div>\n        </div>\n\n        <div className=\"mt-2 flex items-center justify-between p-2\">\n          <div className=\"flex items-center justify-center gap-2\">\n            <Checkbox />\n            <p className=\"text-base font-bold text-navy-700 dark:text-white\">\n              Mobile App Design\n            </p>\n          </div>\n          <div>\n            <MdDragIndicator className=\"h-6 w-6 text-navy-700 dark:text-white\" />\n          </div>\n        </div>\n\n        <div className=\"mt-2 flex items-center justify-between p-2\">\n          <div className=\"flex items-center justify-center gap-2\">\n            <Checkbox />\n            <p className=\"text-base font-bold text-navy-700 dark:text-white\">\n              Dashboard Builder\n            </p>\n          </div>\n          <div>\n            <MdDragIndicator className=\"h-6 w-6 text-navy-700 dark:text-white\" />\n          </div>\n        </div>\n\n        <div className=\"mt-2 flex items-center justify-between p-2\">\n          <div className=\"flex items-center justify-center gap-2\">\n            <Checkbox />\n            <p className=\"text-base font-bold text-navy-700 dark:text-white\">\n              Landing Page Design\n            </p>\n          </div>\n          <div>\n            <MdDragIndicator className=\"h-6 w-6 text-navy-700 dark:text-white\" />\n          </div>\n        </div>\n\n        <div className=\"mt-2 flex items-center justify-between p-2\">\n          <div className=\"flex items-center justify-center gap-2\">\n            <Checkbox />\n            <p className=\"text-base font-bold text-navy-700 dark:text-white\">\n              Dashboard Builder\n            </p>\n          </div>\n          <div>\n            <MdDragIndicator className=\"h-6 w-6 text-navy-700 dark:text-white\" />\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default TaskCard;\n"
    },
    {
        "path": "src/views/admin/default/components/TotalSpent.tsx",
        "content": "import {\n  MdArrowDropUp,\n  MdOutlineCalendarToday,\n  MdBarChart,\n} from \"react-icons/md\";\nimport Card from \"@/components/card\";\nimport {\n  lineChartDataTotalSpent,\n  lineChartOptionsTotalSpent,\n} from \"@/variables/charts\";\nimport LineChart from \"@/components/charts/LineChart\";\n\nconst TotalSpent = () => {\n  return (\n    <Card extra=\"!p-[20px] text-center\">\n      <div className=\"flex justify-between\">\n        <button className=\"linear mt-1 flex items-center justify-center gap-2 rounded-lg bg-lightPrimary p-2 text-gray-600 transition duration-200 hover:cursor-pointer hover:bg-gray-100 active:bg-gray-200 dark:bg-navy-700 dark:hover:opacity-90 dark:active:opacity-80\">\n          <MdOutlineCalendarToday />\n          <span className=\"text-sm font-medium text-gray-600\">This month</span>\n        </button>\n        <button className=\"!linear z-[1] flex items-center justify-center rounded-lg bg-lightPrimary p-2 text-brand-500 !transition !duration-200 hover:bg-gray-100 active:bg-gray-200 dark:bg-navy-700 dark:text-white dark:hover:bg-white/20 dark:active:bg-white/10\">\n          <MdBarChart className=\"h-6 w-6\" />\n        </button>\n      </div>\n\n      <div className=\"flex h-full w-full flex-row justify-between sm:flex-wrap lg:flex-nowrap 2xl:overflow-hidden\">\n        <div className=\"flex flex-col\">\n          <p className=\"mt-[20px] text-3xl font-bold text-navy-700 dark:text-white\">\n            $37.5K\n          </p>\n          <div className=\"flex flex-col items-start\">\n            <p className=\"mt-2 text-sm text-gray-600\">Total Spent</p>\n            <div className=\"flex flex-row items-center justify-center\">\n              <MdArrowDropUp className=\"font-medium text-green-500\" />\n              <p className=\"text-sm font-bold text-green-500\"> +2.45% </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"h-full w-full\">\n          <LineChart\n            chartOptions={lineChartOptionsTotalSpent}\n            chartData={lineChartDataTotalSpent}\n          />\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default TotalSpent;\n"
    },
    {
        "path": "src/views/admin/default/components/WeeklyRevenue.tsx",
        "content": "import Card from \"@/components/card\";\nimport BarChart from \"@/components/charts/BarChart\";\nimport {\n  barChartDataWeeklyRevenue,\n  barChartOptionsWeeklyRevenue,\n} from \"@/variables/charts\";\nimport { MdBarChart } from \"react-icons/md\";\n\nconst WeeklyRevenue = () => {\n  return (\n    <Card extra=\"flex flex-col bg-white w-full rounded-3xl py-6 px-2 text-center\">\n      <div className=\"mb-auto flex items-center justify-between px-6\">\n        <h2 className=\"text-lg font-bold text-navy-700 dark:text-white\">\n          Weekly Revenue\n        </h2>\n        <button className=\"!linear z-[1] flex items-center justify-center rounded-lg bg-lightPrimary p-2 text-brand-500 !transition !duration-200 hover:bg-gray-100 active:bg-gray-200 dark:bg-navy-700 dark:text-white dark:hover:bg-white/20 dark:active:bg-white/10\">\n          <MdBarChart className=\"h-6 w-6\" />\n        </button>\n      </div>\n\n      <div className=\"md:mt-16 lg:mt-0\">\n        <div className=\"h-[250px] w-full xl:h-[350px]\">\n          <BarChart\n            chartData={barChartDataWeeklyRevenue}\n            chartOptions={barChartOptionsWeeklyRevenue}\n          />\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default WeeklyRevenue;\n"
    },
    {
        "path": "src/views/admin/default/index.tsx",
        "content": "\nimport Setup from \"@/components/Setup\";\n\nconst Dashboard = () => {\n  return (\n    <div  >\n   <Setup/>\n   \n\n    </div>\n  );\n};\n\nexport default Dashboard;\n"
    },
    {
        "path": "src/views/admin/default/variables/tableDataCheck.ts",
        "content": "type RowObj = {\n\tname: [string, boolean];\n\tprogress: string;\n\tquantity: number;\n\tdate: string; \n};\n\nconst tableDataCheck: RowObj[] = [\n\t{\n\t\tname: [ 'Horizon UI PRO', true ],\n\t\tquantity: 2458,\n\t\tprogress: '17.5%',\n\t\tdate: '12 Jan 2021',\n\t},\n\t{\n\t\tname: [ 'Horizon UI Free', true ],\n\t\tquantity: 1485,\n\t\tprogress: '10.8%',\n\t\tdate: '21 Feb 2021',\n\t},\n\t{\n\t\tname: [ 'Weekly Update', true ],\n\t\tquantity: 1024,\n\t\tprogress: '21.3%',\n\t\tdate: '13 Mar 2021',\n\t},\n\t{\n\t\tname: [ 'Venus 3D Asset', true ],\n\t\tquantity: 858,\n\t\tprogress: '31.5%',\n\t\tdate: '24 Jan 2021',\n\t},\n\t{\n\t\tname: [ 'Marketplace', true ],\n\t\tquantity: 258,\n\t\tprogress: '12.2%',\n\t\tdate: '24 Oct 2022',\n\t}\n];\n\nexport default tableDataCheck;\n"
    },
    {
        "path": "src/views/admin/default/variables/tableDataComplex.ts",
        "content": "type RowObj = {\n\tname: string;\n\tstatus: string;\n\tdate: string;\n\tprogress: number;\n};\n\nconst tableDataComplex: RowObj[] = [\n\t{\n\t\tname: 'Horizon UI PRO',\n\t\tprogress: 75.5,\n\t\tstatus: 'Approved',\n\t\tdate: '12 Jan 2021'\n\t},\n\t{\n\t\tname: 'Horizon UI Free',\n\t\tprogress: 25.5,\n\t\tstatus: 'Disable',\n\t\tdate: '21 Feb 2021'\n\t},\n\t{\n\t\tname: 'Weekly Update',\n\t\tprogress: 90,\n\t\tstatus: 'Error',\n\t\tdate: '13 Mar 2021'\n\t},\n\t{\n\t\tname: 'Marketplace',\n\t\tprogress: 50.5,\n\t\tstatus: 'Approved',\n\t\tdate: '24 Oct 2022'\n\t}\n];\nexport default tableDataComplex;\n"
    },
    {
        "path": "src/views/admin/marketplace/components/Banner.tsx",
        "content": "import nft1 from \"@/assets/img/nfts/NftBanner1.png\";\n\nconst Banner1 = () => {\n  return (\n    <div\n      className=\"flex w-full flex-col rounded-[20px] bg-cover px-[30px] py-[30px] md:px-[64px] md:py-[56px]\"\n      style={{ backgroundImage: `url(${nft1})` }}\n    >\n      <div className=\"w-full\">\n        <h4 className=\"mb-[14px] max-w-full text-xl font-bold text-white md:w-[64%] md:text-3xl md:leading-[42px] lg:w-[46%] xl:w-[85%] 2xl:w-[75%] 3xl:w-[52%]\">\n          Discover, collect, and sell extraordinary NFTs\n        </h4>\n        <p className=\"mb-[40px] max-w-full text-base font-medium text-[#E3DAFF] md:w-[64%] lg:w-[40%] xl:w-[72%] 2xl:w-[60%] 3xl:w-[45%]\">\n          Enter in this creative world. Discover now the latest NFTs or start\n          creating your own!\n        </p>\n\n        <div className=\"mt-[36px] flex items-center justify-between gap-4 sm:justify-start 2xl:gap-10\">\n          <button className=\"text-black linear rounded-xl bg-white px-4 py-2 text-center text-base font-medium transition duration-200 hover:!bg-white/80 active:!bg-white/70\">\n            Discover now\n          </button>\n          <button className=\"text-base font-medium text-lightPrimary hover:text-lightPrimary 2xl:ml-2\">\n            Watch Video\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner1;\n"
    },
    {
        "path": "src/views/admin/marketplace/components/HistoryCard.tsx",
        "content": "import Nft2 from \"@/assets/img/nfts/Nft2.png\";\nimport Nft1 from \"@/assets/img/nfts/Nft1.png\";\nimport Nft3 from \"@/assets/img/nfts/Nft3.png\";\nimport Nft4 from \"@/assets/img/nfts/Nft4.png\";\nimport Nft5 from \"@/assets/img/nfts/Nft5.png\";\nimport Nft6 from \"@/assets/img/nfts/Nft6.png\";\n\nimport { FaEthereum } from \"react-icons/fa\";\nimport Card from \"@/components/card\";\n\nconst HistoryCard = () => {\n  const HistoryData = [\n    {\n      image: Nft1,\n      title: \"Colorful Heaven\",\n      owner: \"Mark Benjamin\",\n      price: 0.4,\n      time: \"30s\",\n    },\n    {\n      image: Nft2,\n      title: \"Abstract Colors\",\n      owner: \"Esthera Jackson\",\n      price: 2.4,\n      time: \"50m\",\n    },\n    {\n      image: Nft3,\n      title: \"ETH AI Brain\",\n      owner: \"Nick Wilson\",\n      price: 0.3,\n      time: \"20s\",\n    },\n    {\n      image: Nft4,\n      title: \"Swipe Circles\",\n      owner: \" Peter Will\",\n      price: 0.4,\n      time: \"4h\",\n    },\n    {\n      image: Nft5,\n      title: \"Mesh Gradients\",\n      owner: \"Will Smith\",\n      price: 0.4,\n      time: \"30s\",\n    },\n    {\n      image: Nft6,\n      title: \"3D Cubes Art\",\n      owner: \" Manny Gates\",\n      price: 0.4,\n      time: \"2m\",\n    },\n  ];\n\n  return (\n    <Card extra={\"mt-3 !z-5 overflow-hidden\"}>\n      {/* HistoryCard Header */}\n      <div className=\"flex items-center justify-between rounded-t-3xl p-3\">\n        <div className=\"text-lg font-bold text-navy-700 dark:text-white\">\n          History\n        </div>\n        <button className=\"linear rounded-[20px] bg-lightPrimary px-4 py-2 text-base font-medium text-brand-500 transition duration-200 hover:bg-gray-100 active:bg-gray-200 dark:bg-white/5 dark:text-white dark:hover:bg-white/10 dark:active:bg-white/20\">\n          See all\n        </button>\n      </div>\n\n      {/* History CardData */}\n\n      {HistoryData.map((data, index) => (\n        <div className=\"flex h-full w-full items-start justify-between bg-white px-3 py-[20px] hover:shadow-2xl dark:!bg-navy-800 dark:shadow-none dark:hover:!bg-navy-700\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"flex h-16 w-16 items-center justify-center\">\n              <img\n                className=\"h-full w-full rounded-xl\"\n                src={data.image}\n                alt=\"\"\n              />\n            </div>\n            <div className=\"flex flex-col\">\n              <h5 className=\"text-base font-bold text-navy-700 dark:text-white\">\n                {\" \"}\n                {data.title}\n              </h5>\n              <p className=\"mt-1 text-sm font-normal text-gray-600\">\n                {\" \"}\n                {data.owner}{\" \"}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"mt-1 flex items-center justify-center text-navy-700 dark:text-white\">\n            <div>\n              <FaEthereum />\n            </div>\n            <div className=\"ml-1 flex items-center text-sm font-bold text-navy-700 dark:text-white\">\n              <p> {} </p>\n              {data.price} <p className=\"ml-1\">ETH</p>\n            </div>\n            <div className=\"ml-2 flex items-center text-sm font-normal text-gray-600 dark:text-white\">\n              <p>{data.time}</p>\n              <p className=\"ml-1\">ago</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </Card>\n  );\n};\n\nexport default HistoryCard;\n"
    },
    {
        "path": "src/views/admin/marketplace/components/TableTopCreators.tsx",
        "content": "import React from \"react\";\nimport CardMenu from \"@/components/card/CardMenu\";\nimport Progress from \"@/components/progress\";\nimport Card from \"@/components/card\";\n\nimport {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n} from \"@tanstack/react-table\";\ntype RowObj = {\n  name: string[];\n  artworks: number;\n  rating: number;\n};\n\nfunction CheckTable(props: { tableData: any }) {\n  const { tableData } = props;\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  let defaultData = tableData;\n  const columns = [\n    columnHelper.accessor(\"name\", {\n      id: \"name\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">NAME</p>\n      ),\n      cell: (info: any) => (\n        <div className=\"flex items-center gap-2\">\n          <div className=\"h-[30px] w-[30px] rounded-full\">\n            <img\n              src={info.getValue()[1]}\n              className=\"h-full w-full rounded-full\"\n              alt=\"\"\n            />\n          </div>\n          <p className=\"text-sm font-medium text-navy-700 dark:text-white\">\n            {info.getValue()[0]}\n          </p>\n        </div>\n      ),\n    }),\n    columnHelper.accessor(\"artworks\", {\n      id: \"artworks\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          ARTWORKS\n        </p>\n      ),\n      cell: (info) => (\n        <p className=\"text-md font-medium text-gray-600 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"rating\", {\n      id: \"rating\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          RATING\n        </p>\n      ),\n      cell: (info) => (\n        <div className=\"mx-2 flex font-bold\">\n          <Progress width=\"w-16\" value={info.getValue()} />\n        </div>\n      ),\n    }),\n  ]; // eslint-disable-next-line\n  const [data, setData] = React.useState(() => [...defaultData]);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n    },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    debugTable: true,\n  });\n  return (\n    <Card extra={\"w-full h-full sm:overflow-auto px-6\"}>\n      <header className=\"relative flex items-center justify-between pt-4\">\n        <div className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          Check Table\n        </div>\n\n        <CardMenu />\n      </header>\n\n      <div className=\"mt-8 overflow-x-scroll xl:overflow-x-hidden\">\n        <table className=\"w-full\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id} className=\"!border-px !border-gray-400\">\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      onClick={header.column.getToggleSortingHandler()}\n                      className=\"cursor-pointer border-b-[1px] border-gray-200 pt-4 pb-2 pr-4 text-start\"\n                    >\n                      <div className=\"items-center justify-between text-xs text-gray-200\">\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                        {{\n                          asc: \"\",\n                          desc: \"\",\n                        }[header.column.getIsSorted() as string] ?? null}\n                      </div>\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {table\n              .getRowModel()\n              .rows.slice(0, 5)\n              .map((row) => {\n                return (\n                  <tr key={row.id}>\n                    {row.getVisibleCells().map((cell) => {\n                      return (\n                        <td\n                          key={cell.id}\n                          className=\"min-w-[150px] border-white/0 py-3  pr-4\"\n                        >\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n\nexport default CheckTable;\nconst columnHelper = createColumnHelper<RowObj>();\n"
    },
    {
        "path": "src/views/admin/marketplace/index.tsx",
        "content": "import Banner from \"./components/Banner\";\nimport NFt2 from \"@/assets/img/nfts/Nft2.png\";\nimport NFt4 from \"@/assets/img/nfts/Nft4.png\";\nimport NFt3 from \"@/assets/img/nfts/Nft3.png\";\nimport NFt5 from \"@/assets/img/nfts/Nft5.png\";\nimport NFt6 from \"@/assets/img/nfts/Nft6.png\";\nimport avatar1 from \"@/assets/img/avatars/avatar1.png\";\nimport avatar2 from \"@/assets/img/avatars/avatar2.png\";\nimport avatar3 from \"@/assets/img/avatars/avatar3.png\";\n\nimport tableDataTopCreators from \"@/views/admin/marketplace/variables/tableDataTopCreators\";\nimport HistoryCard from \"./components/HistoryCard\";\nimport TopCreatorTable from \"./components/TableTopCreators\";\nimport NftCard from \"@/components/card/NftCard\";\n\nconst Marketplace = () => {\n  return (\n    <div className=\"mt-3 grid h-full grid-cols-1 gap-5 xl:grid-cols-2 2xl:grid-cols-3\">\n      <div className=\"col-span-1 h-fit w-full xl:col-span-1 2xl:col-span-2\">\n        {/* NFt Banner */}\n        <Banner />\n\n        {/* NFt Header */}\n        <div className=\"mb-4 mt-5 flex flex-col justify-between px-4 md:flex-row md:items-center\">\n          <h4 className=\"ml-1 text-2xl font-bold text-navy-700 dark:text-white\">\n            Trending NFTs\n          </h4>\n          <ul className=\"mt-4 flex items-center justify-between md:mt-0 md:justify-center md:!gap-5 2xl:!gap-12\">\n            <li>\n              <a\n                className=\"text-base font-medium text-brand-500 hover:text-brand-500 dark:text-white\"\n                href=\" \"\n              >\n                Art\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"text-base font-medium text-brand-500 hover:text-brand-500 dark:text-white\"\n                href=\" \"\n              >\n                Music\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"text-base font-medium text-brand-500 hover:text-brand-500 dark:text-white\"\n                href=\" \"\n              >\n                Collection\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"text-base font-medium text-brand-500 hover:text-brand-500 dark:text-white\"\n                href=\" \"\n              >\n                <a href=\" \">Sports</a>\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        {/* NFTs trending card */}\n        <div className=\"z-20 grid grid-cols-1 gap-5 md:grid-cols-3\">\n          <NftCard\n            bidders={[avatar1, avatar2, avatar3]}\n            title=\"Abstract Colors\"\n            author=\"Esthera Jackson\"\n            price=\"0.91\"\n            image={NFt3}\n          />\n          <NftCard\n            bidders={[avatar1, avatar2, avatar3]}\n            title=\"ETH AI Brain\"\n            author=\"Nick Wilson\"\n            price=\"0.7\"\n            image={NFt2}\n          />\n          <NftCard\n            bidders={[avatar1, avatar2, avatar3]}\n            title=\"Mesh Gradients\"\n            author=\"Will Smith\"\n            price=\"2.91\"\n            image={NFt4}\n          />\n        </div>\n\n        {/* Recenlty Added setion */}\n        <div className=\"mb-5 mt-5 flex items-center justify-between px-[26px]\">\n          <h4 className=\"text-2xl font-bold text-navy-700 dark:text-white\">\n            Recently Added\n          </h4>\n        </div>\n\n        {/* Recently Add NFTs */}\n        <div className=\"grid grid-cols-1 gap-5 md:grid-cols-3\">\n          <NftCard\n            bidders={[avatar1, avatar2, avatar3]}\n            title=\"Abstract Colors\"\n            author=\"Esthera Jackson\"\n            price=\"0.91\"\n            image={NFt4}\n          />\n          <NftCard\n            bidders={[avatar1, avatar2, avatar3]}\n            title=\"ETH AI Brain\"\n            author=\"Nick Wilson\"\n            price=\"0.7\"\n            image={NFt5}\n          />\n          <NftCard\n            bidders={[avatar1, avatar2, avatar3]}\n            title=\"Mesh Gradients\"\n            author=\"Will Smith\"\n            price=\"2.91\"\n            image={NFt6}\n          />\n        </div>\n      </div>\n\n      {/* right side section */}\n\n      <div className=\"col-span-1 h-full w-full rounded-xl 2xl:col-span-1\">\n        <TopCreatorTable tableData={tableDataTopCreators} />\n        <div className=\"mb-5\" />\n        <HistoryCard />\n      </div>\n    </div>\n  );\n};\n\nexport default Marketplace;\n"
    },
    {
        "path": "src/views/admin/marketplace/variables/tableDataTopCreators.ts",
        "content": "type RowObj = {\n\tname: string[];\n\tartworks: number; \n\trating: number; \n};\n\nconst tableColumnsTopCreators: RowObj[] = [\n\t{\n    name: [\"@maddison_c21\",\"https://images.unsplash.com/photo-1506863530036-1efeddceb993?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2244&q=80\"],\n    artworks : 9821,\n    rating:97\n  },\n  {\n    name: [\"@karl.will02\",\"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1780&q=80\"],\n    artworks : 7032,\n    rating:87\n  },\n  {\n    name: [\"@andreea.1z\",\"https://images.unsplash.com/photo-1573766064535-6d5d4e62bf9d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1315&q=80\"],\n    artworks : 5204,\n    rating:82\n  },\n  {\n    name: [\"@abraham47.y\",\"https://images.unsplash.com/photo-1628157588553-5eeea00af15c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1780&q=80\"],\n    artworks : 4309,\n    rating:68\n  },\n  {\n    name: [\"@simmmple.web\",\"https://i.ibb.co/7p0d1Cd/Frame-24.png\"],\n    artworks : 3871,\n    rating:55\n  },\n  {\n    name: [\"@horizon.ui\",\"https://i.ibb.co/NSJYQYD/Horizon-UI-Avatar.png\"],\n    artworks : 3152,\n    rating:46\n  },\n  {\n    name: [\"@venus.sys\",\"https://scontent.fotp8-1.fna.fbcdn.net/v/t1.6435-9/202074221_101421322193072_8201469573182417214_n.png?_nc_cat=108&ccb=1-5&_nc_sid=09cbfe&_nc_ohc=78fLje1ri2sAX-9M9k1&_nc_ht=scontent.fotp8-1.fna&oh=00_AT-yCcI9whoAZcSaGmJQK53xRa1CldCaj2q5qJlPvDvHRA&oe=626E41FF\"],\n    artworks : 2907,\n    rating:38\n  }\n];\n\nexport default tableColumnsTopCreators;\n"
    },
    {
        "path": "src/views/admin/profile/components/Banner.tsx",
        "content": "import avatar from \"@/assets/img/avatars/avatar11.png\";\nimport banner from \"@/assets/img/profile/banner.png\";\nimport Card from \"@/components/card\";\n\nconst Banner = () => {\n  return (\n    <Card extra={\"items-center w-full h-full p-[16px] bg-cover\"}>\n      {/* Background and profile */}\n      <div\n        className=\"relative mt-1 flex h-32 w-full justify-center rounded-xl bg-cover\"\n        style={{ backgroundImage: `url(${banner})` }}\n      >\n        <div className=\"absolute -bottom-12 flex h-[87px] w-[87px] items-center justify-center rounded-full border-[4px] border-white bg-pink-400 dark:!border-navy-700\">\n          <img className=\"h-full w-full rounded-full\" src={avatar} alt=\"\" />\n        </div>\n      </div>\n\n      {/* Name and position */}\n      <div className=\"mt-16 flex flex-col items-center\">\n        <h4 className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          Adela Parkson\n        </h4>\n        <p className=\"text-base font-normal text-gray-600\">Product Manager</p>\n      </div>\n\n      {/* Post followers */}\n      <div className=\"mt-6 mb-3 flex gap-4 md:!gap-14\">\n        <div className=\"flex flex-col items-center justify-center\">\n          <p className=\"text-2xl font-bold text-navy-700 dark:text-white\">17</p>\n          <p className=\"text-sm font-normal text-gray-600\">Products </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center\">\n          <p className=\"text-2xl font-bold text-navy-700 dark:text-white\">\n            9.7K\n          </p>\n          <p className=\"text-sm font-normal text-gray-600\">Stars</p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center\">\n          <p className=\"text-2xl font-bold text-navy-700 dark:text-white\">\n            434\n          </p>\n          <p className=\"text-sm font-normal text-gray-600\">Following</p>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default Banner;\n"
    },
    {
        "path": "src/views/admin/profile/components/General.tsx",
        "content": "import Card from \"@/components/card\";\nconst General = () => {\n  return (\n    <Card extra={\"w-full h-full p-3\"}>\n      {/* Header */}\n      <div className=\"mt-2 mb-8 w-full\">\n        <h4 className=\"px-2 text-xl font-bold text-navy-700 dark:text-white\">\n          General Information\n        </h4>\n        <p className=\"mt-2 px-2 text-base text-gray-600\">\n          As we live, our hearts turn colder. Cause pain is what we go through\n          as we become older. We get insulted by others, lose trust for those\n          others. We get back stabbed by friends. It becomes harder for us to\n          give others a hand. We get our heart broken by people we love, even\n          that we give them all...\n        </p>\n      </div>\n      {/* Cards */}\n      <div className=\"grid grid-cols-2 gap-4 px-2\">\n        <div className=\"flex flex-col items-start justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n          <p className=\"text-sm text-gray-600\">Education</p>\n          <p className=\"text-base font-medium text-navy-700 dark:text-white\">\n            College Of Engineering , Trivandrum\n          </p>\n        </div>\n\n        <div className=\"flex flex-col justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n          <p className=\"text-sm text-gray-600\">Languages</p>\n          <p className=\"text-base font-medium text-navy-700 dark:text-white\">\n            English , Malayalam\n          </p>\n        </div>\n\n        <div className=\"flex flex-col items-start justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n          <p className=\"text-sm text-gray-600\">Department</p>\n          <p className=\"text-base font-medium text-navy-700 dark:text-white\">\n            Product Design\n          </p>\n        </div>\n\n        <div className=\"flex flex-col justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n          <p className=\"text-sm text-gray-600\">Work History</p>\n          <p className=\"text-base font-medium text-navy-700 dark:text-white\">\n            English, Spanish, Italian\n          </p>\n        </div>\n\n        <div className=\"flex flex-col items-start justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n          <p className=\"text-sm text-gray-600\">Organization</p>\n          <p className=\"text-base font-medium text-navy-700 dark:text-white\">\n            WindowsGPT Labs\n          </p>\n        </div>\n\n        <div className=\"flex flex-col justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n          <p className=\"text-sm text-gray-600\">Birthday</p>\n          <p className=\"text-base font-medium text-navy-700 dark:text-white\">\n            20 July 1986\n          </p>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default General;\n"
    },
    {
        "path": "src/views/admin/profile/components/Notification.tsx",
        "content": "import Card from \"@/components/card\";\nimport CardMenu from \"@/components/card/CardMenu\";\nimport Switch from \"@/components/switch\";\n\nfunction Notification() {\n  return (\n    <Card extra={\"w-full h-full p-5 \"}>\n      <div className=\"relative mb-10 flex items-center justify-between pt-1\">\n        <h4 className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          Notifications\n        </h4>\n        <CardMenu />\n      </div>\n      <div className=\"flex flex-col justify-stretch relative\">\n        {/* the custom checkbox desing added in src/index.js */}\n        {/* <div className=\"mt-3 flex items-center gap-3\">\n        <Switch id=\"switch1\" />\n        <label\n          htmlFor=\"checkbox1\"\n          className=\"text-base font-medium text-navy-700 dark:text-white\"\n        >\n          Item comment notifications\n        </label>\n      </div> */}\n\n        <div className=\"mt-4 flex items-center gap-3\">\n          <Switch id=\"switch2\" />\n          <label\n            htmlFor=\"checkbox2\"\n            className=\"text-base font-medium text-navy-700 dark:text-white\"\n          >\n            Buyer review notifications\n          </label>\n        </div>\n\n        {/* <div className=\"mt-4 flex items-center gap-3\">\n        <Switch id=\"switch3\" />\n        <label\n          htmlFor=\"checkbox3\"\n          className=\"text-base font-medium text-navy-700 dark:text-white\"\n        >\n          Rating reminders notifications\n        </label>\n      </div> */}\n\n        {/* <div className=\"mt-4 flex items-center gap-3\">\n          <Switch id=\"switch4\" />\n          <label\n            htmlFor=\"checkbox4\"\n            className=\"text-base font-medium text-navy-700 dark:text-white\"\n          >\n            Meetups near you notifications\n          </label>\n        </div> */}\n\n        <div className=\"mt-4 flex items-center gap-3\">\n          <Switch id=\"switch5\" />\n          <label\n            htmlFor=\"checkbox5\"\n            className=\"text-base font-medium text-navy-700 dark:text-white\"\n          >\n            Company news notifications\n          </label>\n        </div>\n\n        <div className=\"mt-4 flex items-center gap-3\">\n          <Switch id=\"switch6\" />\n          <label\n            htmlFor=\"checkbox6\"\n            className=\"text-base font-medium text-navy-700 dark:text-white\"\n          >\n            New launches and projects\n          </label>\n        </div>\n        <div className=\"mt-4 flex items-center gap-3\">\n          <Switch id=\"switch7\" />\n          <label\n            htmlFor=\"checkbox7\"\n            className=\"text-base font-medium text-navy-700 dark:text-white\"\n          >\n            Monthly product changes\n          </label>\n        </div>\n        <div className=\"mt-4 flex items-center gap-3\">\n          <Switch id=\"switch8\" />\n          <label\n            htmlFor=\"checkbox8\"\n            className=\"text-base font-medium text-navy-700 dark:text-white\"\n          >\n            Subscribe to newsletter\n          </label>\n        </div>\n        {/* <div className=\"mt-4 flex items-center gap-3\">\n        <Switch id=\"switch8\" />\n        <label\n          htmlFor=\"checkbox8\"\n          className=\"text-base font-medium text-navy-700 dark:text-white\"\n        >\n          Email me when someone follows me\n        </label>\n      </div> */}\n      </div>\n    </Card>\n  );\n}\n\nexport default Notification;\n"
    },
    {
        "path": "src/views/admin/profile/components/Project.tsx",
        "content": "import React from \"react\";\nimport { MdModeEditOutline } from \"react-icons/md\";\nimport image1 from \"@/assets/img/profile/image1.png\";\nimport image2 from \"@/assets/img/profile/image2.png\";\nimport image3 from \"@/assets/img/profile/image3.png\";\nimport Card from \"@/components/card\";\n\nconst Project = () => {\n  return (\n    <Card extra={\"w-full p-4 h-full\"}>\n      <div className=\"mb-8 w-full\">\n        <h4 className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          All projects\n        </h4>\n        <p className=\"mt-2 text-base text-gray-600\">\n          Here you can find more details about your projects. Keep you user\n          engaged by providing meaningful information.\n        </p>\n      </div>\n      {/* Project 1 */}\n      <div className=\"flex w-full items-center justify-between rounded-2xl bg-white p-3 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n        <div className=\"flex items-center\">\n          <div className=\"\">\n            <img className=\"h-[83px] w-[83px] rounded-lg\" src={image1} alt=\"\" />\n          </div>\n          <div className=\"ml-4\">\n            <p className=\"text-base font-medium text-navy-700 dark:text-white\">\n              Technology behind the Blockchain\n            </p>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Project #1 .\n              <a\n                className=\"ml-1 font-medium text-brand-500 hover:text-brand-500 dark:text-white\"\n                href=\" \"\n              >\n                See product details\n              </a>\n            </p>\n          </div>\n        </div>\n        <div className=\"mr-4 flex items-center justify-center text-gray-600 dark:text-white\">\n          <MdModeEditOutline />\n        </div>\n      </div>\n      {/* Project 1 */}\n      <div className=\"mt-3 flex w-full items-center justify-between rounded-2xl bg-white p-3 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n        <div className=\"flex items-center\">\n          <div className=\"\">\n            <img className=\"h-[83px] w-[83px] rounded-lg\" src={image3} alt=\"\" />\n          </div>\n          <div className=\"ml-4\">\n            <p className=\"text-base font-medium text-navy-700 dark:text-white\">\n              Technology behind the Blockchain\n            </p>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Project #1 .\n              <a\n                className=\"ml-1 font-medium text-brand-500 hover:text-brand-500 dark:text-white\"\n                href=\" \"\n              >\n                See product details\n              </a>\n            </p>\n          </div>\n        </div>\n        <div className=\"mr-4 flex items-center justify-center text-gray-600 dark:text-white\">\n          <MdModeEditOutline />\n        </div>\n      </div>\n      {/* Project 1 */}\n      <div className=\"mt-3 flex w-full items-center justify-between rounded-2xl bg-white p-3 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none\">\n        <div className=\"flex items-center\">\n          <div className=\"\">\n            <img className=\"h-[83px] w-[83px] rounded-lg\" src={image2} alt=\"\" />\n          </div>\n          <div className=\"ml-4\">\n            <p className=\"text-base font-medium text-navy-700 dark:text-white\">\n              Technology behind the Blockchain\n            </p>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Project #1 .\n              <a\n                className=\"ml-1 font-medium text-brand-500 hover:text-brand-500 dark:text-white\"\n                href=\" \"\n              >\n                See product details\n              </a>\n            </p>\n          </div>\n        </div>\n        <div className=\"mr-4 flex items-center justify-center text-gray-600 dark:text-white\">\n          <MdModeEditOutline />\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default Project;\n"
    },
    {
        "path": "src/views/admin/profile/components/Storage.tsx",
        "content": "import Card from \"@/components/card\";\nimport CardMenu from \"@/components/card/CardMenu\";\nimport { BsCloudCheck } from \"react-icons/bs\";\nconst Storage = () => {\n  return (\n    <Card extra={\"w-full h-full p-4\"}>\n      <div className=\"ml-auto\">\n        <CardMenu />\n      </div>\n      {/* Your storage */}\n      <div className=\"mb-auto flex flex-col items-center justify-center\">\n        <div className=\"mt-2 flex items-center justify-center rounded-full bg-lightPrimary p-[26px] text-5xl font-bold text-brand-500 dark:!bg-navy-700 dark:text-white\">\n          <BsCloudCheck />\n        </div>\n        <h4 className=\"mb-px mt-3 text-2xl font-bold text-navy-700 dark:text-white\">\n          Your storage\n        </h4>\n        <p className=\"px-5 text-center text-base font-normal text-gray-600 md:!px-0 xl:!px-8\">\n          Supervise your Prompts in your own drive space\n        </p>\n      </div>\n\n      {/* Progress bar */}\n\n      <div className=\"flex flex-col\">\n        <div className=\"flex justify-between\">\n          <p className=\"text-sm font-medium text-gray-600\">25.6 GB</p>\n          <p className=\"text-sm font-medium text-gray-600\">50 GB</p>\n        </div>\n        <div className=\"mt-2 flex h-3 w-full items-center rounded-full bg-lightPrimary dark:!bg-navy-700\">\n          <span className=\"h-full w-1/2 rounded-full bg-brand-500 dark:!bg-white\" />\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default Storage;\n"
    },
    {
        "path": "src/views/admin/profile/components/Upload.tsx",
        "content": "import { MdFileUpload } from \"react-icons/md\";\nimport Card from \"@/components/card\";\n\nconst Upload = () => {\n  return (\n    <Card className=\"grid h-full w-full grid-cols-1 gap-3 rounded-[20px] bg-white bg-clip-border p-3 font-dm shadow-3xl shadow-shadow-500 dark:!bg-navy-800 dark:shadow-none 2xl:grid-cols-11\">\n      <div className=\"col-span-5 h-full w-full rounded-xl bg-lightPrimary dark:!bg-navy-700 2xl:col-span-6\">\n        <button className=\"flex h-full w-full flex-col items-center justify-center rounded-xl border-[2px] border-dashed border-gray-200 py-3 dark:!border-navy-700 lg:pb-0\">\n          <MdFileUpload className=\"text-[80px] text-brand-500 dark:text-white\" />\n          <h4 className=\"text-xl font-bold text-brand-500 dark:text-white\">\n            Upload Files\n          </h4>\n          <p className=\"mt-2 text-sm font-medium text-gray-600\">\n            PNG, JPG and GIF files are allowed\n          </p>\n        </button>\n      </div>\n\n      <div className=\"col-span-5 flex h-full w-full flex-col justify-center overflow-hidden rounded-xl bg-white pl-3 pb-4 dark:!bg-navy-800\">\n        <h5 className=\"text-left text-xl font-bold leading-9 text-navy-700 dark:text-white\">\n          Upload To AutoGPT\n        </h5>\n        <p className=\"leading-1 mt-2 text-base font-normal text-gray-600\">\n          Find Results with Your AI Model.\n        </p>\n        <button className=\"linear mt-4 flex items-center justify-center rounded-xl bg-brand-500 px-2 py-2 text-base font-medium text-white transition duration-200 hover:bg-brand-600 active:bg-brand-700 dark:bg-brand-400 dark:text-white dark:hover:bg-brand-300 dark:active:bg-brand-200\">\n          Publish now\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default Upload;\n"
    },
    {
        "path": "src/views/admin/profile/index.tsx",
        "content": "import Banner from \"./components/Banner\";\nimport General from \"./components/General\";\nimport Notification from \"./components/Notification\";\nimport Project from \"./components/Project\";\nimport Storage from \"./components/Storage\";\nimport Upload from \"./components/Upload\";\n\nconst ProfileOverview = () => {\n  return (\n    <div className=\"flex w-full flex-col gap-5\">\n      <div className=\"w-ful mt-3 flex h-fit flex-col gap-5 lg:grid lg:grid-cols-12\">\n        <div className=\"col-span-4 lg:!mb-0\">\n          <Banner />\n        </div>\n\n        <div className=\"col-span-3 lg:!mb-0\">\n          <Storage />\n        </div>\n\n        <div className=\"z-0 col-span-5 lg:!mb-0\">\n          <Upload />\n        </div>\n      </div>\n      {/* all project & ... */}\n\n      <div className=\"grid h-full grid-cols-1 gap-5 lg:!grid-cols-12\">\n        {/* <div className=\"col-span-5 lg:col-span-6 lg:mb-0 3xl:col-span-4\">\n          <Project />\n        </div> */}\n        <div className=\"col-span-5 lg:col-span-6 lg:mb-0 3xl:col-span-5\">\n          <General />\n        </div>\n\n        <div className=\"col-span-5 lg:col-span-12 lg:mb-0 3xl:!col-span-3\">\n          <Notification />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileOverview;\n"
    },
    {
        "path": "src/views/admin/tables/components/CheckTable.tsx",
        "content": "import React from \"react\";\nimport CardMenu from \"@/components/card/CardMenu\";\nimport Checkbox from \"@/components/checkbox\";\nimport Card from \"@/components/card\";\n\nimport {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n} from \"@tanstack/react-table\";\n\ntype RowObj = {\n  name: [string, boolean];\n  progress: string;\n  quantity: number;\n  date: string;\n};\n\nfunction CheckTable(props: { tableData: any }) {\n  const { tableData } = props;\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  let defaultData = tableData;\n  const columns = [\n    columnHelper.accessor(\"name\", {\n      id: \"name\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">NAME</p>\n      ),\n      cell: (info: any) => (\n        <div className=\"flex items-center\">\n          <Checkbox\n            defaultChecked={info.getValue()[1]}\n            colorScheme=\"brandScheme\"\n            me=\"10px\"\n          />\n          <p className=\"ml-3 text-sm font-bold text-navy-700 dark:text-white\">\n            {info.getValue()[0]}\n          </p>\n        </div>\n      ),\n    }),\n    columnHelper.accessor(\"progress\", {\n      id: \"progress\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          PROGRESS\n        </p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"quantity\", {\n      id: \"quantity\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          QUANTITY\n        </p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"date\", {\n      id: \"date\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">DATE</p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n  ]; // eslint-disable-next-line\n  const [data, setData] = React.useState(() => [...defaultData]);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n    },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    debugTable: true,\n  });\n  return (\n    <Card extra={\"w-full h-full sm:overflow-auto px-6\"}>\n      <header className=\"relative flex items-center justify-between pt-4\">\n        <div className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          Check Table\n        </div>\n\n        <CardMenu />\n      </header>\n\n      <div className=\"mt-8 overflow-x-scroll xl:overflow-x-hidden\">\n        <table className=\"w-full\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id} className=\"!border-px !border-gray-400\">\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      onClick={header.column.getToggleSortingHandler()}\n                      className=\"cursor-pointer border-b-[1px] border-gray-200 pt-4 pb-2 pr-4 text-start\"\n                    >\n                      <div className=\"items-center justify-between text-xs text-gray-200\">\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                        {{\n                          asc: \"\",\n                          desc: \"\",\n                        }[header.column.getIsSorted() as string] ?? null}\n                      </div>\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {table\n              .getRowModel()\n              .rows.slice(0, 5)\n              .map((row) => {\n                return (\n                  <tr key={row.id}>\n                    {row.getVisibleCells().map((cell) => {\n                      return (\n                        <td\n                          key={cell.id}\n                          className=\"min-w-[150px] border-white/0 py-3  pr-4\"\n                        >\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n\nexport default CheckTable;\nconst columnHelper = createColumnHelper<RowObj>();\n"
    },
    {
        "path": "src/views/admin/tables/components/ColumnsTable.tsx",
        "content": "import React from \"react\";\nimport CardMenu from \"@/components/card/CardMenu\";\nimport Card from \"@/components/card\";\n\nimport {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n} from \"@tanstack/react-table\";\n\ntype RowObj = {\n  name: [string, boolean];\n  progress: string;\n  quantity: number;\n  date: string;\n};\n\nfunction ColumnsTable(props: { tableData: any }) {\n  const { tableData } = props;\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  let defaultData = tableData;\n  const columns = [\n    columnHelper.accessor(\"name\", {\n      id: \"name\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">NAME</p>\n      ),\n      cell: (info: any) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"progress\", {\n      id: \"progress\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          PROGRESS\n        </p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"quantity\", {\n      id: \"quantity\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          QUANTITY\n        </p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"date\", {\n      id: \"date\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">DATE</p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n  ]; // eslint-disable-next-line\n  const [data, setData] = React.useState(() => [...defaultData]);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n    },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    debugTable: true,\n  });\n  return (\n    <Card extra={\"w-full pb-10 p-4 h-full\"}>\n      <header className=\"relative flex items-center justify-between\">\n        <div className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          4-Columns Table\n        </div>\n        <CardMenu />\n      </header>\n\n      <div className=\"mt-8 overflow-x-scroll xl:overflow-x-hidden\">\n        <table className=\"w-full\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id} className=\"!border-px !border-gray-400\">\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      onClick={header.column.getToggleSortingHandler()}\n                      className=\"cursor-pointer border-b-[1px] border-gray-200 pt-4 pb-2 pr-4 text-start\"\n                    >\n                      <div className=\"items-center justify-between text-xs text-gray-200\">\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                        {{\n                          asc: \"\",\n                          desc: \"\",\n                        }[header.column.getIsSorted() as string] ?? null}\n                      </div>\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {table\n              .getRowModel()\n              .rows.slice(0, 5)\n              .map((row) => {\n                return (\n                  <tr key={row.id}>\n                    {row.getVisibleCells().map((cell) => {\n                      return (\n                        <td\n                          key={cell.id}\n                          className=\"min-w-[150px] border-white/0 py-3  pr-4\"\n                        >\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n\nexport default ColumnsTable;\nconst columnHelper = createColumnHelper<RowObj>();\n"
    },
    {
        "path": "src/views/admin/tables/components/ComplexTable.tsx",
        "content": "import React from \"react\";\nimport CardMenu from \"@/components/card/CardMenu\";\nimport Card from \"@/components/card\";\nimport Progress from \"@/components/progress\";\nimport { MdCancel, MdCheckCircle, MdOutlineError } from \"react-icons/md\";\n\nimport {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n} from \"@tanstack/react-table\";\n\ntype RowObj = {\n  name: string;\n  status: string;\n  date: string;\n  progress: number;\n};\n\nconst columnHelper = createColumnHelper<RowObj>();\n\n// const columns = columnsDataCheck;\nexport default function ComplexTable(props: { tableData: any }) {\n  const { tableData } = props;\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  let defaultData = tableData;\n  const columns = [\n    columnHelper.accessor(\"name\", {\n      id: \"name\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">NAME</p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"status\", {\n      id: \"status\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          STATUS\n        </p>\n      ),\n      cell: (info) => (\n        <div className=\"flex items-center\">\n          {info.getValue() === \"Approved\" ? (\n            <MdCheckCircle className=\"text-green-500 me-1 dark:text-green-300\" />\n          ) : info.getValue() === \"Disable\" ? (\n            <MdCancel className=\"text-red-500 me-1 dark:text-red-300\" />\n          ) : info.getValue() === \"Error\" ? (\n            <MdOutlineError className=\"text-amber-500 me-1 dark:text-amber-300\" />\n          ) : null}\n          <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n            {info.getValue()}\n          </p>\n        </div>\n      ),\n    }),\n    columnHelper.accessor(\"date\", {\n      id: \"date\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">DATE</p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"progress\", {\n      id: \"progress\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          PROGRESS\n        </p>\n      ),\n      cell: (info) => (\n        <div className=\"flex items-center\">\n          <Progress width=\"w-[108px]\" value={info.getValue()} />\n        </div>\n      ),\n    }),\n  ]; // eslint-disable-next-line\n  const [data, setData] = React.useState(() => [...defaultData]);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n    },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    debugTable: true,\n  });\n  return (\n    <Card extra={\"w-full h-full px-6 pb-6 sm:overflow-x-auto\"}>\n      <div className=\"relative flex items-center justify-between pt-4\">\n        <div className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          Complex Table\n        </div>\n        <CardMenu />\n      </div>\n\n      <div className=\"mt-8 overflow-x-scroll xl:overflow-x-hidden\">\n        <table className=\"w-full\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id} className=\"!border-px !border-gray-400\">\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      onClick={header.column.getToggleSortingHandler()}\n                      className=\"cursor-pointer border-b-[1px] border-gray-200 pt-4 pb-2 pr-4 text-start\"\n                    >\n                      <div className=\"items-center justify-between text-xs text-gray-200\">\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                        {{\n                          asc: \"\",\n                          desc: \"\",\n                        }[header.column.getIsSorted() as string] ?? null}\n                      </div>\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {table\n              .getRowModel()\n              .rows.slice(0, 5)\n              .map((row) => {\n                return (\n                  <tr key={row.id}>\n                    {row.getVisibleCells().map((cell) => {\n                      return (\n                        <td\n                          key={cell.id}\n                          className=\"min-w-[150px] border-white/0 py-3  pr-4\"\n                        >\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n"
    },
    {
        "path": "src/views/admin/tables/components/DevelopmentTable.tsx",
        "content": "import React from \"react\";\nimport CardMenu from \"@/components/card/CardMenu\";\nimport { DiApple } from \"react-icons/di\";\nimport { DiAndroid } from \"react-icons/di\";\nimport { DiWindows } from \"react-icons/di\";\nimport Card from \"@/components/card\";\nimport Progress from \"@/components/progress\";\n\nimport {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n} from \"@tanstack/react-table\";\n\ntype RowObj = {\n  name: string;\n  tech: any;\n  date: string;\n  progress: number;\n};\n\nfunction CheckTable(props: { tableData: any }) {\n  const { tableData } = props;\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  let defaultData = tableData;\n  const columns = [\n    columnHelper.accessor(\"name\", {\n      id: \"name\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">NAME</p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"tech\", {\n      id: \"tech\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">TECH</p>\n      ),\n      cell: (info: any) => (\n        <div className=\"flex items-center gap-2\">\n          {info.getValue().map((item: string, key: number) => {\n            if (item === \"apple\") {\n              return (\n                <div\n                  key={key}\n                  className=\"text-[22px] text-gray-600 dark:text-white\"\n                >\n                  <DiApple />\n                </div>\n              );\n            } else if (item === \"android\") {\n              return (\n                <div\n                  key={key}\n                  className=\"text-[21px] text-gray-600 dark:text-white\"\n                >\n                  <DiAndroid />\n                </div>\n              );\n            } else if (item === \"windows\") {\n              return (\n                <div\n                  key={key}\n                  className=\"text-xl text-gray-600 dark:text-white\"\n                >\n                  <DiWindows />\n                </div>\n              );\n            } else return null;\n          })}\n        </div>\n      ),\n    }),\n    columnHelper.accessor(\"progress\", {\n      id: \"progress\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          PROGRESS\n        </p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"date\", {\n      id: \"date\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">DATE</p>\n      ),\n      cell: (info) => (\n        <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n          {info.getValue()}\n        </p>\n      ),\n    }),\n    columnHelper.accessor(\"progress\", {\n      id: \"quantity\",\n      header: () => (\n        <p className=\"text-sm font-bold text-gray-600 dark:text-white\">\n          QUANTITY\n        </p>\n      ),\n      cell: (info) => (\n        <div className=\"flex items-center gap-3\">\n          <p className=\"text-sm font-bold text-navy-700 dark:text-white\">\n            {info.getValue()}%\n          </p>\n          <Progress width=\"w-[68px]\" value={info.getValue()} />\n        </div>\n      ),\n    }),\n  ]; // eslint-disable-next-line\n  const [data, setData] = React.useState(() => [...defaultData]);\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n    },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    debugTable: true,\n  });\n  return (\n    <Card extra={\"w-full h-full sm:overflow-auto px-6\"}>\n      <header className=\"relative flex items-center justify-between pt-4\">\n        <div className=\"text-xl font-bold text-navy-700 dark:text-white\">\n          Check Table\n        </div>\n\n        <CardMenu />\n      </header>\n\n      <div className=\"mt-8 overflow-x-scroll xl:overflow-x-hidden\">\n        <table className=\"w-full\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id} className=\"!border-px !border-gray-400\">\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      onClick={header.column.getToggleSortingHandler()}\n                      className=\"cursor-pointer border-b-[1px] border-gray-200 pt-4 pb-2 pr-4 text-start\"\n                    >\n                      <div className=\"items-center justify-between text-xs text-gray-200\">\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                        {{\n                          asc: \"\",\n                          desc: \"\",\n                        }[header.column.getIsSorted() as string] ?? null}\n                      </div>\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {table\n              .getRowModel()\n              .rows.slice(0, 5)\n              .map((row) => {\n                return (\n                  <tr key={row.id}>\n                    {row.getVisibleCells().map((cell) => {\n                      return (\n                        <td\n                          key={cell.id}\n                          className=\"min-w-[150px] border-white/0 py-3  pr-4\"\n                        >\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n\nexport default CheckTable;\nconst columnHelper = createColumnHelper<RowObj>();\n"
    },
    {
        "path": "src/views/admin/tables/index.tsx",
        "content": "import tableDataDevelopment from \"./variables/tableDataDevelopment\";\nimport tableDataCheck from \"./variables/tableDataCheck\";\nimport CheckTable from \"./components/CheckTable\";\nimport tableDataColumns from \"./variables/tableDataColumns\";\nimport tableDataComplex from \"./variables/tableDataComplex\";\nimport DevelopmentTable from \"./components/DevelopmentTable\";\nimport ColumnsTable from \"./components/ColumnsTable\";\nimport ComplexTable from \"./components/ComplexTable\";\n\nconst Tables = () => {\n  return (\n    <div>\n      <div className=\"mt-5 grid h-full grid-cols-1 gap-5 md:grid-cols-2\">\n        <DevelopmentTable tableData={tableDataDevelopment} />\n        <CheckTable tableData={tableDataCheck} />\n      </div>\n\n      <div className=\"mt-5 grid h-full grid-cols-1 gap-5 md:grid-cols-2\">\n        <ColumnsTable tableData={tableDataColumns} />\n\n        <ComplexTable tableData={tableDataComplex} />\n      </div>\n    </div>\n  );\n};\n\nexport default Tables;\n"
    },
    {
        "path": "src/views/admin/tables/variables/tableDataCheck.ts",
        "content": "type RowObj = {\n\tname: [string, boolean];\n\tprogress: string;\n\tquantity: number;\n\tdate: string; \n};\n\nconst tableDataCheck: RowObj[] = [\n\t{\n\t\tname: [ 'Horizon UI PRO', true ],\n\t\tquantity: 2458,\n\t\tprogress: '17.5%',\n\t\tdate: '12 Jan 2021',\n\t},\n\t{\n\t\tname: [ 'Horizon UI Free', true ],\n\t\tquantity: 1485,\n\t\tprogress: '10.8%',\n\t\tdate: '21 Feb 2021',\n\t},\n\t{\n\t\tname: [ 'Weekly Update', true ],\n\t\tquantity: 1024,\n\t\tprogress: '21.3%',\n\t\tdate: '13 Mar 2021',\n\t},\n\t{\n\t\tname: [ 'Venus 3D Asset', true ],\n\t\tquantity: 858,\n\t\tprogress: '31.5%',\n\t\tdate: '24 Jan 2021',\n\t},\n\t{\n\t\tname: [ 'Marketplace', true ],\n\t\tquantity: 258,\n\t\tprogress: '12.2%',\n\t\tdate: '24 Oct 2022',\n\t}\n];\n\nexport default tableDataCheck;\n"
    },
    {
        "path": "src/views/admin/tables/variables/tableDataColumns.ts",
        "content": "type RowObj = {\n\tname: string;\n\tprogress: string;\n\tquantity: number;\n\tdate: string; \n};\n\nconst tableDataColumns: RowObj[] = [\n\t{\n\t\tname: 'Horizon UI PRO',\n\t\tquantity: 2458,\n\t\tprogress: '17.5%',\n\t\tdate: '12 Jan 2021', \n\t},\n\t{\n\t\tname:'Horizon UI Free',\n\t\tquantity: 1485,\n\t\tprogress: '10.8%',\n\t\tdate: '21 Feb 2021', \n\t},\n\t{\n\t\tname: 'Weekly Update',\n\t\tquantity: 1024,\n\t\tprogress: '21.3%',\n\t\tdate: '13 Mar 2021', \n\t},\n\t{\n\t\tname: 'Venus 3D Asset',\n\t\tquantity: 858,\n\t\tprogress: '31.5%',\n\t\tdate: '24 Jan 2021', \n\t}, \n];\n\nexport default tableDataColumns;\n"
    },
    {
        "path": "src/views/admin/tables/variables/tableDataComplex.ts",
        "content": "type RowObj = {\n\tname: string;\n\tstatus: string;\n\tdate: string;\n\tprogress: number;\n};\n\nconst tableDataComplex: RowObj[] = [\n\t{\n\t\tname: 'Horizon UI PRO',\n\t\tprogress: 75.5,\n\t\tstatus: 'Approved',\n\t\tdate: '12 Jan 2021'\n\t},\n\t{\n\t\tname: 'Horizon UI Free',\n\t\tprogress: 25.5,\n\t\tstatus: 'Disable',\n\t\tdate: '21 Feb 2021'\n\t},\n\t{\n\t\tname: 'Weekly Update',\n\t\tprogress: 90,\n\t\tstatus: 'Error',\n\t\tdate: '13 Mar 2021'\n\t},\n\t{\n\t\tname: 'Marketplace',\n\t\tprogress: 50.5,\n\t\tstatus: 'Approved',\n\t\tdate: '24 Oct 2022'\n\t}\n];\nexport default tableDataComplex;\n"
    },
    {
        "path": "src/views/admin/tables/variables/tableDataDevelopment.ts",
        "content": "type RowObj = {\n\tname: string;\n\ttech: string[];\n\tdate: string;\n\tprogress: number;\n};\n\nconst tableDataComplex: RowObj[] = [\n\t{\n\t\tname: 'Marketplace',\n\t\ttech: [ 'apple', 'android', 'windows' ],\n\t\tdate: '12.Jan.2021',\n\t\tprogress: 75.5\n\t},\n\t{\n\t\tname: 'Venus DB PRO',\n\t\ttech: [ 'apple' ],\n\t\tdate: '21.Feb.2021',\n\t\tprogress: 35.4\n\t},\n\t{\n\t\tname: 'Venus DS',\n\t\ttech: [ 'apple', 'windows' ],\n\t\tdate: '13.Mar.2021',\n\t\tprogress: 25\n\t},\n\t{\n\t\tname: 'Venus 3D Asset',\n\t\ttech: [ 'apple', 'android', 'windows' ],\n\t\tdate: '24.Jan.2021',\n\t\tprogress: 100\n\t},\n\t{\n\t\tname: 'Marketplace',\n\t\ttech: [ 'apple', 'windows' ],\n\t\tdate: 'Oct 24, 2022',\n\t\tprogress: 75.5\n\t},\n\t{\n\t\tname: 'Marketplace',\n\t\ttech: [ 'apple', 'android', 'windows' ],\n\t\tdate: 'Oct 24, 2022',\n\t\tprogress: 75.5\n\t},\n\t{\n\t\tname: 'Marketplace',\n\t\ttech: [ 'apple', 'android', 'windows' ],\n\t\tdate: '12.Jan.2021',\n\t\tprogress: 75.5\n\t},\n\t{\n\t\tname: 'Venus DB PRO',\n\t\ttech: [ 'apple' ],\n\t\tdate: '21.Feb.2021',\n\t\tprogress: 35.4\n\t},\n\t{\n\t\tname: 'Venus DS',\n\t\ttech: [ 'apple', 'windows' ],\n\t\tdate: '13.Mar.2021',\n\t\tprogress: 25\n\t},\n\t{\n\t\tname: 'Venus 3D Asset',\n\t\ttech: [ 'apple', 'android', 'windows' ],\n\t\tdate: '24.Jan.2021',\n\t\tprogress: 100\n\t},\n\t{\n\t\tname: 'Marketplace',\n\t\ttech: [ 'apple', 'windows' ],\n\t\tdate: 'Oct 24, 2022',\n\t\tprogress: 75.5\n\t}\n];\nexport default tableDataComplex;\n"
    },
    {
        "path": "src/views/auth/SignIn.tsx",
        "content": "import InputField from \"@/components/fields/InputField\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport Checkbox from \"@/components/checkbox\";\n\nexport default function SignIn() {\n  return (\n    <div className=\"mt-16 mb-16 mx-19 flex h-full  w-full items-center justify-center  md:mx-0 md:px-0 lg:mb-10 lg:items-center lg:justify-center\">\n      {/* Sign in section */}\n      <div className=\"mt-[10vh] mx-67 w-full max-w-full flex-col items-center md:pl-4 lg:pl-0 xl:max-w-[420px]\">\n        <h4 className=\"mb-2.5 text-4xl font-bold text-navy-700 dark:text-white\">\n          Sign In\n        </h4>\n        <p className=\"mb-9 ml-1 text-base text-gray-600\">\n          Enter your email and password to sign in!\n        </p>\n        <div className=\"mb-6 flex h-[50px] w-full items-center justify-center gap-2 rounded-xl bg-lightPrimary hover:cursor-pointer dark:bg-navy-800\">\n          <div className=\"rounded-full text-xl\">\n            <FcGoogle />\n          </div>\n          <h5 className=\"text-sm font-medium text-navy-700 dark:text-white\">\n            Sign In with Google\n          </h5>\n        </div>\n        <div className=\"mb-6 flex items-center  gap-3\">\n          <div className=\"h-px w-full bg-gray-200 dark:bg-navy-700\" />\n          <p className=\"text-base text-gray-600 dark:text-white\"> or </p>\n          <div className=\"h-px w-full bg-gray-200 dark:bg-navy-700\" />\n        </div>\n        {/* Email */}\n        <InputField\n          variant=\"auth\"\n          extra=\"mb-3\"\n          label=\"Email*\"\n          placeholder=\"mail@windowsgpt.com\"\n          id=\"email\"\n          type=\"text\"\n        />\n\n        {/* Password */}\n        <InputField\n          variant=\"auth\"\n          extra=\"mb-3\"\n          label=\"Password*\"\n          placeholder=\"Min. 8 characters\"\n          id=\"password\"\n          type=\"password\"\n        />\n        {/* Checkbox */}\n        <div className=\"mb-4 flex items-center justify-between px-2\">\n          <div className=\"flex items-center\">\n            <Checkbox />\n            <p className=\"ml-2 text-sm font-medium text-navy-700 dark:text-white\">\n              Keep me logged In\n            </p>\n          </div>\n          <a\n            className=\"text-sm font-medium text-brand-500 hover:text-brand-600 dark:text-white\"\n            href=\" \"\n          >\n            Forgot Password?\n          </a>\n        </div>\n        <button className=\"linear mt-2 w-full rounded-xl bg-brand-500 py-[12px] text-base font-medium text-white transition duration-200 hover:bg-brand-600 active:bg-brand-700 dark:bg-brand-400 dark:text-white dark:hover:bg-brand-300 dark:active:bg-brand-200\">\n          Sign In\n        </button>\n        <div className=\"mt-4\">\n          <span className=\" text-sm font-medium text-navy-700 dark:text-gray-600\">\n            Not registered yet?\n          </span>\n          <a\n            href=\" \"\n            className=\"ml-1 text-sm font-medium text-brand-500 hover:text-brand-600 dark:text-white\"\n          >\n            Create an account\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
    },
    {
        "path": "src/vite-env.d.ts",
        "content": "/// <reference types=\"vite/client\" />\n"
    },
    {
        "path": "tailwind.config.js",
        "content": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: \"class\",\n  content: [\"./src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      width: {\n        \"1p\": \"1%\",\n        \"2p\": \"2%\",\n        \"3p\": \"3%\",\n        \"4p\": \"4%\",\n        \"5p\": \"5%\",\n        \"6p\": \"6%\",\n        \"7p\": \"7%\",\n        \"8p\": \"8%\",\n        \"9p\": \"9%\",\n        \"10p\": \"10%\",\n        \"11p\": \"11%\",\n        \"12p\": \"12%\",\n        \"13p\": \"13%\",\n        \"14p\": \"14%\",\n        \"15p\": \"15%\",\n        \"16p\": \"16%\",\n        \"17p\": \"17%\",\n        \"18p\": \"18%\",\n        \"19p\": \"19%\",\n        \"20p\": \"20%\",\n        \"21p\": \"21%\",\n        \"22p\": \"22%\",\n        \"23p\": \"23%\",\n        \"24p\": \"24%\",\n        \"25p\": \"25%\",\n        \"26p\": \"26%\",\n        \"27p\": \"27%\",\n        \"28p\": \"28%\",\n        \"29p\": \"29%\",\n        \"30p\": \"30%\",\n        \"31p\": \"31%\",\n        \"32p\": \"32%\",\n        \"33p\": \"33%\",\n        \"34p\": \"34%\",\n        \"35p\": \"35%\",\n        \"36p\": \"36%\",\n        \"37p\": \"37%\",\n        \"38p\": \"38%\",\n        \"39p\": \"39%\",\n        \"40p\": \"40%\",\n        \"41p\": \"41%\",\n        \"42p\": \"42%\",\n        \"43p\": \"43%\",\n        \"44p\": \"44%\",\n        \"45p\": \"45%\",\n        \"46p\": \"46%\",\n        \"47p\": \"47%\",\n        \"48p\": \"48%\",\n        \"49p\": \"49%\",\n        \"50p\": \"50%\",\n        \"51p\": \"51%\",\n        \"52p\": \"52%\",\n        \"53p\": \"53%\",\n        \"54p\": \"54%\",\n        \"55p\": \"55%\",\n        \"56p\": \"56%\",\n        \"57p\": \"57%\",\n        \"58p\": \"58%\",\n        \"59p\": \"59%\",\n        \"60p\": \"60%\",\n        \"61p\": \"61%\",\n        \"62p\": \"62%\",\n        \"63p\": \"63%\",\n        \"64p\": \"64%\",\n        \"65p\": \"65%\",\n        \"66p\": \"66%\",\n        \"67p\": \"67%\",\n        \"68p\": \"68%\",\n        \"69p\": \"69%\",\n        \"70p\": \"70%\",\n        \"71p\": \"71%\",\n        \"72p\": \"72%\",\n        \"73p\": \"73%\",\n        \"74p\": \"74%\",\n        \"75p\": \"75%\",\n        \"76p\": \"76%\",\n        \"77p\": \"77%\",\n        \"78p\": \"78%\",\n        \"79p\": \"79%\",\n        \"80p\": \"80%\",\n        \"81p\": \"81%\",\n        \"82p\": \"82%\",\n        \"83p\": \"83%\",\n        \"84p\": \"84%\",\n        \"85p\": \"85%\",\n        \"86p\": \"86%\",\n        \"87p\": \"87%\",\n        \"88p\": \"88%\",\n        \"89p\": \"89%\",\n        \"90p\": \"90%\",\n        \"91p\": \"91%\",\n        \"92p\": \"92%\",\n        \"93p\": \"93%\",\n        \"94p\": \"94%\",\n        \"95p\": \"95%\",\n        \"96p\": \"96%\",\n        \"97p\": \"97%\",\n        \"98p\": \"98%\",\n        \"99p\": \"99%\",\n      },\n      fontFamily: {\n        poppins: [\"Poppins\", \"sans-serif\"],\n        dm: [\"DM Sans\", \"sans-serif\"],\n      },\n      boxShadow: {\n        \"3xl\": \"14px 17px 40px 4px\",\n        inset: \"inset 0px 18px 22px\",\n        darkinset: \"0px 4px 4px inset\",\n      },\n      borderRadius: {\n        primary: \"20px\",\n      },\n    },\n    screens: {\n      sm: \"576px\",\n      \"sm-max\": { max: \"576px\" },\n      md: \"768px\",\n      \"md-max\": { max: \"768px\" },\n      lg: \"992px\",\n      \"lg-max\": { max: \"992px\" },\n      xl: \"1200px\",\n      \"xl-max\": { max: \"1200px\" },\n      \"2xl\": \"1320px\",\n      \"2xl-max\": { max: \"1320px\" },\n      \"3xl\": \"1600px\",\n      \"3xl-max\": { max: \"1600px\" },\n      \"4xl\": \"1850px\",\n      \"4xl-max\": { max: \"1850px\" },\n    },\n    colors: () => ({\n      white: \"#ffffff\",\n      lightPrimary: \"#F4F7FE\",\n      blueSecondary: \"#4318FF\",\n      brandLinear: \"#868CFF\",\n      gray: {\n        50: \"#f8f9fa\",\n        100: \"#edf2f7\",\n        200: \"#e9ecef\",\n        300: \"#cbd5e0\",\n        400: \"#a0aec0\",\n        500: \"#adb5bd\",\n        600: \"#a3aed0\",\n        700: \"#707eae\",\n        800: \"#252f40\",\n        900: \"#1b2559\",\n      },\n      navy: {\n        50: \"#d0dcfb\",\n        100: \"#aac0fe\",\n        200: \"#a3b9f8\",\n        300: \"#728fea\",\n        400: \"#3652ba\",\n        500: \"#1b3bbb\",\n        600: \"#24388a\",\n        700: \"#1B254B\",\n        800: \"#111c44\",\n        900: \"#0b1437\",\n      },\n      red: {\n        50: \"#ee5d501a\",\n        100: \"#fee2e2\",\n        200: \"#fecaca\",\n        300: \"#fca5a5\",\n        400: \"#f87171\",\n        500: \"#f53939\",\n        600: \"#ea0606\",\n        700: \"#b91c1c\",\n        800: \"#991b1b\",\n        900: \"#7f1d1d\",\n      },\n      orange: {\n        50: \"#fff7ed\",\n        100: \"#ffedd5\",\n        200: \"#fed7aa\",\n        300: \"#fdba74\",\n        400: \"#fb923c\",\n        500: \"#f97316\",\n        600: \"#ea580c\",\n        700: \"#c2410c\",\n        800: \"#9a3412\",\n        900: \"#7c2d12\",\n      },\n      amber: {\n        50: \"#fffbeb\",\n        100: \"#fef3c7\",\n        200: \"#fde68a\",\n        300: \"#fcd34d\",\n        400: \"#fbbf24\",\n        500: \"#f59e0b\",\n        600: \"#d97706\",\n        700: \"#b45309\",\n        800: \"#92400e\",\n        900: \"#78350f\",\n      },\n      yellow: {\n        50: \"#fefce8\",\n        100: \"#fef9c3\",\n        200: \"#fef08a\",\n        300: \"#fde047\",\n        400: \"#fbcf33\",\n        500: \"#eab308\",\n        600: \"#ca8a04\",\n        700: \"#a16207\",\n        800: \"#854d0e\",\n        900: \"#713f12\",\n      },\n      lime: {\n        50: \"#f7fee7\",\n        100: \"#ecfccb\",\n        200: \"#d9f99d\",\n        300: \"#bef264\",\n        400: \"#98ec2d\",\n        500: \"#82d616\",\n        600: \"#65a30d\",\n        700: \"#4d7c0f\",\n        800: \"#3f6212\",\n        900: \"#365314\",\n      },\n      green: {\n        50: \"#05cd991a\",\n        100: \"#dcfce7\",\n        200: \"#bbf7d0\",\n        300: \"#86efac\",\n        400: \"#4ade80\",\n        500: \"#22c55e\",\n        600: \"#17ad37\",\n        700: \"#15803d\",\n        800: \"#166534\",\n        900: \"#14532d\",\n      },\n      teal: {\n        50: \"#f0fdfa\",\n        100: \"#ccfbf1\",\n        200: \"#99f6e4\",\n        300: \"#5eead4\",\n        400: \"#2dd4bf\",\n        500: \"#14b8a6\",\n        600: \"#0d9488\",\n        700: \"#0f766e\",\n        800: \"#115e59\",\n        900: \"#134e4a\",\n      },\n      cyan: {\n        50: \"#ecfeff\",\n        100: \"#cffafe\",\n        200: \"#a5f3fc\",\n        300: \"#67e8f9\",\n        400: \"#21d4fd\",\n        500: \"#17c1e8\",\n        600: \"#0891b2\",\n        700: \"#0e7490\",\n        800: \"#155e75\",\n        900: \"#164e63\",\n      },\n      blue: {\n        50: \"#eff6ff\",\n        100: \"#dbeafe\",\n        200: \"#bfdbfe\",\n        300: \"#93c5fd\",\n        400: \"#60a5fa\",\n        500: \"#3b82f6\",\n        600: \"#2152ff\",\n        700: \"#1d4ed8\",\n        800: \"#344e86\",\n        900: \"#00007d\",\n      },\n      indigo: {\n        50: \"#eef2ff\",\n        100: \"#e0e7ff\",\n        200: \"#c7d2fe\",\n        300: \"#a5b4fc\",\n        400: \"#818cf8\",\n        500: \"#6366f1\",\n        600: \"#4f46e5\",\n        700: \"#4338ca\",\n        800: \"#3730a3\",\n        900: \"#312e81\",\n      },\n      purple: {\n        50: \"#faf5ff\",\n        100: \"#f3e8ff\",\n        200: \"#e9d5ff\",\n        300: \"#d8b4fe\",\n        400: \"#c084fc\",\n        500: \"#a855f7\",\n        600: \"#9333ea\",\n        700: \"#7928ca\",\n        800: \"#6b21a8\",\n        900: \"#581c87\",\n      },\n      pink: {\n        50: \"#fdf2f8\",\n        100: \"#fce7f3\",\n        200: \"#fbcfe8\",\n        300: \"#f9a8d4\",\n        400: \"#f472b6\",\n        500: \"#ff0080\",\n        600: \"#db2777\",\n        700: \"#be185d\",\n        800: \"#9d174d\",\n        900: \"#831843\",\n      },\n      brand: {\n        50: \"#E9E3FF\",\n        100: \"#C0B8FE\",\n        200: \"#A195FD\",\n        300: \"#8171FC\",\n        400: \"#7551FF\",\n        500: \"#422AFB\",\n        600: \"#3311DB\",\n        700: \"#2111A5\",\n        800: \"#190793\",\n        900: \"#11047A\",\n      },\n      shadow: {\n        500: \"rgba(112, 144, 176, 0.08)\",\n      },\n    }),\n  },\n  // plugins: [require(\"tailwindcss-rtl\")], \n  // With tailwindcss-rtl plugin you will be able to support both RTL and LTR in the same style.\n  // LTR (Left To Right) is a locale property indicating that text is written from left to right. For example, the en-US locale (for US English) specifies left-to-right.\n  // Most Western languages, as well as many others around the world, are written LTR.\n  // The opposite of LTR, RTL (Right To Left) is used in other common languages, including Arabic (ar) and Hebrew (he). \n\n\n};\n"
    },
    {
        "path": "tp.txt",
        "content": "hhhhhhhhh"
    },
    {
        "path": "tsconfig.json",
        "content": "{\n  \"compilerOptions\": {\n    \"target\": \"ESNext\",\n    \"useDefineForClassFields\": true,\n    \"lib\": [\"DOM\", \"DOM.Iterable\", \"ESNext\"],\n    \"allowJs\": false,\n    \"skipLibCheck\": true,\n    \"esModuleInterop\": false,\n    \"allowSyntheticDefaultImports\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"Node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"noEmit\": true,\n    \"jsx\": \"react-jsx\",\n    \"baseUrl\": \"./\",\n    \"paths\": {\n      \"@/*\": [\n        \"src/*\"\n      ]\n    },\n  },\n  \"include\": [\"src\", \"electron\"],\n  \"references\": [{ \"path\": \"./tsconfig.node.json\" }]\n}\n"
    },
    {
        "path": "tsconfig.node.json",
        "content": "{\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"Node\",\n    \"resolveJsonModule\": true,\n    \"allowSyntheticDefaultImports\": true\n  },\n  \"include\": [\"vite.config.ts\", \"package.json\"]\n}\n"
    },
    {
        "path": "vite.config.ts",
        "content": "import { rmSync } from 'node:fs'\nimport path from 'node:path'\nimport { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\nimport electron from 'vite-plugin-electron'\nimport renderer from 'vite-plugin-electron-renderer'\nimport pkg from './package.json'\nimport tsconfigPaths from \"vite-tsconfig-paths\"\n\n// https://vitejs.dev/config/\nexport default defineConfig(({ command }) => {\n  rmSync('dist-electron', { recursive: true, force: true })\n\n  const isServe = command === 'serve'\n  const isBuild = command === 'build'\n  const sourcemap = isServe || !!process.env.VSCODE_DEBUG\n\n  return {\n    resolve: {\n      alias: {\n        '@': path.join(__dirname, 'src')\n      },\n    },\n    plugins: [\n      react(),\n      electron([\n        {\n          // Main-Process entry file of the Electron App.\n          entry: 'electron/main/index.ts',\n          onstart(options) {\n            if (process.env.VSCODE_DEBUG) {\n              console.log(/* For `.vscode/.debug.script.mjs` */'[startup] Electron App')\n            } else {\n              options.startup()\n            }\n          },\n          vite: {\n            build: {\n              sourcemap,\n              minify: isBuild,\n              outDir: 'dist-electron/main',\n              rollupOptions: {\n                external: Object.keys('dependencies' in pkg ? pkg.dependencies : {}),\n              },\n            },\n          },\n        },\n        {\n          entry: 'electron/preload/index.ts',\n          onstart(options) {\n            // Notify the Renderer-Process to reload the page when the Preload-Scripts build is complete, \n            // instead of restarting the entire Electron App.\n            options.reload()\n          },\n          vite: {\n            build: {\n              sourcemap: sourcemap ? 'inline' : undefined, // #332\n              minify: isBuild,\n              outDir: 'dist-electron/preload',\n              rollupOptions: {\n                external: Object.keys('dependencies' in pkg ? pkg.dependencies : {}),\n              },\n            },\n          },\n        }\n      ]),\n      // Use Node.js API in the Renderer-process\n      renderer({\n        resolve: {\n          // C/C++ modules must be pre-bundle\n          serialport: { type: 'cjs' },\n          // `esm` modules only if Vite does not pre-bundle them correctly\n          got: { type: 'esm' },\n        },\n      }),\n    ],\n    server: process.env.VSCODE_DEBUG && (() => {\n      const url = new URL(pkg.debug.env.VITE_DEV_SERVER_URL)\n      return {\n        host: url.hostname,\n        port: +url.port,\n      }\n    })(),\n    clearScreen: false,\n  }\n})\n"
    }
]